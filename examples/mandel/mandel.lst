Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page    1
                                                        14:53:39  

    1                   
    2                   * === mandel.src =====================================
    3                   * 
    4                   * Mandelbrot demo for Handy  --  Handy Software
    5                   * 
    6                   * Confidential and Proprietary
    7                   * Copyright (C) 1989, Epyx, Inc.
    8                   * 
    9                   * Date		Name		Description
   10                   * ---------	--------------	---------------------------
   11                   * 7-Mar-90	SHL		Remove DISPLAY_ON call
   12                   * 9-Feb-90	SHL		Updated for compatibility with 1.1 rel
   13                   * Aug 89	SHL		Created this file
   14                   * 
   15                   * ====================================================
   16                   
   17                   *
   18                   * This program is a Mandelbrot set and Julia set explo
   19                   * arithmetic is used (8 bit integer, 40 bit fraction).
   20                   *
   21                   * When running, there are three user interface modes.
   22                   *
   23                   * Normal mode - the program is calculating and updatin
   24                   * Zoom box mode - the program shows a box 1/2 screen h
   25                   * Menu mode - the program has a menu display up with c
   26                   *
   27                   * In normal mode, pressing PAUSE enters Menu mode, any
   28                   * input enters Zoom box mode.
   29                   *
   30                   * In zoom box mode, pressing the outer button zooms in
   31                   * zoom box expands to fill the screen, and the program
   32                   * Pressing the inner button zooms out.  The screen shr
   33                   * and the program returns to normal mode.  Pressing an
   34                   * joystick moves the zoom box.  Pressing Option 1 canc
   35                   * mode.  Pressing Option 2 changes the color cycle mod
   36                   * states:  no cycle -> cycling in -> cycling out.  Pre
   37                   * menu mode.  No input for about 4 seconds switches ba
   38                   *
   39                   * In menu mode, moving the joystick moves the cursor. 
   40                   * button increments the digit under the cursor, pressi
   41                   * decrements the digit under the cursor.  Incrementing
   42                   * through to the digits to the left of the cursor.  Pr
   43                   * to normal mode.  Pressing Option 2 toggles between M
   44                   * Holding PAUSE and pressing Option 1 resets to the or
   45                   * of the set.  Holding PAUSE and pressing Option 2 cop
   46                   * the Julia set index, enables Julia set mode and swit
   47                   * viewing coordinates.
   48                   *
   49                   * All numbers in the menu are displayed in hex.  A per
   50                   * portion from the fraction in the 48 bit numbers. X,Y
   51                   * upper left corner of the screen, with X increasing t
   52                   * increasing down the screen.  STEP is the increment i
   53                   * pixels.  DEPTH is the number of iterations before gi
   54                   * one of the built in palettes in the program to displ
   55                   * is the number of 60ths of seconds between steps when
   56                   * XJUL,YJUL is the index selecting the particular Juli
   57                   *
   58                   
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page    2
                                                        14:53:39  

   59                   ;=====================================================
   60                   
   61                   	.65C02		; Select processor for the HANDY
   62                   
   63      0001         EOF_USER .EQ 1		; We use EOF macros
   64                   
   65      0001         BRK_USER .EQ 1		; we wanna have breaks for debugging
   66                   
   67      ****         FONT_TYPE .EQ HPR_DIGIT+HPR_UPPER+HPR_PUNC	; for HPRIN
   68      0007         FONT_HEIGHT .EQ	7
   69                   
   70                   ;=====================================================
   71                   
   72                   ; Standard HANDY includes and macros
   73                   
   74                   	.IN 6502:include/monitor.i
    1                   
    2                   * === monitor.i ======================================
    3                   *
    4                   * 6502 Debugger Monitor Definitions File  --  Handy So
    5                   *
    6                   * Confidential and Proprietary
    7                   * Copyright (C) 1988, Epyx, Inc.
    8                   *
    9                   * Date		Name		Description
   10                   * ---------	--------------	---------------------------
   11                   * 26-Feb-90	SHL		Minor cleanup
   12                   * 7-Feb-90	SHL		Removed Apple emulation compatibility
   13                   * 1 May 89	-RJ		Changed MONITOR_ZP_RESERVED to $F8
   14                   * 19 Mar 89	-RJ		Changed MONITOR_RAM_RESERVED to $F800
   15                   * 16 Mar 89	-RJ		Changed values of BUS_MONITOR and TRA
   16                   *				added LARGE_DATA
   17                   * 14 Mar 89	-RJ		Changed value of MONITOR_RAM_RESERVED
   18                   * 26-Dec-88	-RJ		Added HANDEM_NEWDISPLAY
   19                   * Early 88	=RJ Mical=	Created this file!
   20                   *
   21                   * ====================================================
   22                   
   23                   
   24                   
   25      FALSE        	#IFDEF	MONITOR_I	; prevent multiple inclusion
   27                   	#ENDIF
   28      0001         MONITOR_I	.EQU	1
   29                   
   30                   
   31                   
   32                   * The hardware interrupt vector table starts at this a
   33      FBF0         IntTable		.=	$FC00-{8*2}
   34                   
   35                   
   36                   
   37                   * These constants define the memory locations reserved
   38                   * program.  The zero-page definition describes the fir
   39                   * in zero-page; all locations from there to the end of
   40                   * reserved.  With the RAM definition, all locations
   41                   * are reserved from that address to the start of Handy
   42                   * currently lives at $FC00
   43                   * Note that the Howard board does not require RAM for 
   44      00F8         MONITOR_ZP_RESERVED	.EQU	$00F8
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page    3
                        6502:include/monitor.i          14:53:39  

   45      F900         MONITOR_RAM_RESERVED	.EQU	$F900
   46                   
   47                   
   48                   
   49                   * These are the offsets of the register data both in t
   50                   * data stream when host and monitor are passing the re
   51      0000         A_OFFSET		.EQU	0
   52      0001         X_OFFSET		.EQU	1
   53      0002         Y_OFFSET		.EQU	2
   54      0003         S_OFFSET		.EQU	3
   55      0004         PC_OFFSET		.EQU	4
   56      0006         P_OFFSET		.EQU	6
   57                   
   58                   
   59                   
   60                   * These define the monitor memory block sizes
   61      0007         REGISTER_BYTECOUNT	.EQU	7
   62      0010         MONITOR_BYTECOUNT	.EQU	16
   63                   
   64                   
   65                   
   66                   * These are the definitions of the signals that can be
   67                   * the Handebug monitor program after a warm restart.
   68      0000         NOP_REQUEST		.EQU	0
   69      0001         DOWNLOAD_REQUEST	.EQU	1
   70      0002         UPLOAD_REQUEST		.EQU	2
   71      0003         CONTINUE_REQUEST	.EQU	3
   72      0004         SLAVE_REQUEST		.EQU	4
   73      0005         GO_REQUEST		.EQU	5
   74      0006         SEE_HOWARD_REQUEST	.EQU	6
   75      0007         HIDE_HOWARD_REQUEST	.EQU	7
   76                   
   77                   
   78                   
   79                   * These are the definitions of the upload/download typ
   80      0000         END_OF_FILE		.EQU	$00
   81      0001         ORIGIN			.EQU	$01
   82      0002         DATA			.EQU	$02
   83      0003         RUN_ADDRESS		.EQU	$03
   84                   * The assembler reserves the remainder of the low defi
   85      0010         REGISTER		.EQU	$10
   86      0011         FILL_MEM		.EQU	$11
   87      0012         LARGE_DATA		.EQU	$12
   88      0013         BUS_MONITOR		.EQU	$13
   89      0014         TRACE			.EQU	$14
   90      0015         BREAK_CONTROLS		.EQU	$15
   91      0016         HOWARD_ABUS		.EQU	$16
   92      0017         HOWARD_BBUS		.EQU	$17
   93      0018         HOWARD_CBUS		.EQU	$18
   94      0019         HOWARD_DBUS		.EQU	$19
   95      001A         ROM			.EQU	$1A
   96                   
   97                   
   98                   * These are the monitor to host slave requests
   99      0001         UP_THIS_PAGE		.EQU	1
  100      0002         UP_CURRENT_PAGE		.EQU	2
  101      0003         UP_REGISTERS		.EQU	3
  102      0004         UP_MEMWATCH		.EQU	4
  103      0005         UP_HAHDATA		.EQU	5
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page    4
                        6502:include/monitor.i          14:53:39  

  104                   
  105                   
  106                   
   75                   	.IN 6502:include/harddefs.i
    1                   ; Wednesday 27-Jun-90 10:45:41
    2                   * === harddefs.i =====================================
    3                   *
    4                   * Hardware Definitions  --  Handy Software
    5                   *
    6                   * Confidential and Proprietary
    7                   * Copyright (C) 1988, Epyx, Inc.
    8                   *
    9                   * Date		Name		Description
   10                   * ---------	--------------	---------------------------
   11                   * 27-Jun-90	SHL		Removed MAGxx alternate names for tim
   12                   *				Added READ_ENABLE definition for IODAT
   13                   * 12-Apr-90	SHL		Added SUZY_BASE and MIKEY_BASE defini
   14                   *				Removed SUZY_ADDRESS definition
   15                   *				Corrected LEFT_ATTENMASK and RIGHT_ATTENMASK
   16                   * 9-Mar-90	SHL		Added new stereo register definitions
   17                   * 7-Mar-90	SHL		Removed MAGRDYx definitions
   18                   *				Commented out MSTEREO until get real info
   19                   * 26-Feb-90	SHL		Corrected some bit definitions
   20                   * 13-Feb-90	SHL		Added a few more missing definitions
   21                   * 9-Feb-90	SHL		Added rest of the hardware definitions
   22                   *				Added CPU interrupt and reset vectors
   23                   * 7-Feb-90	SHL		Removed Apple emulation compatibility
   24                   * 25 May 89	-RJ		Deleted LEFT_ and RIGHT_FIRE_BUTTON d
   25                   * 22 May 89	-RJ		Added RESTLESS definition, changed LI
   26                   *				to EXTERNAL_POWER
   27                   * 11 May 89	-RJ		Changed sprite definitions to track t
   28                   *				definitions caused by the Shadow-E chip bug
   29                   * 10 May 89	-RJ		Added INNER_ and OUTER_BUTTON and MST
   30                   *				CART0,1_IO_INACTIVE definitions
   31                   * 20 Apr 89	-RJ		Changed the game button definitions t
   32                   *				the new way to handle Pause, Restart, Flip and
   33                   *				Game Options 1 & 2.  Added bit defs to DISPCTL
   34                   * 19 Apr 89	RG Goudy	Added serial port bit definitions
   35                   * 18 Apr 89	-RJ		The RELOAD_ definition comments say "
   36                   * 19 Mar 89	-RJ		Added TURBO_DISABLE definition to MAP
   37                   * 17 Jan 89	-RJ		Added POWERON and MOTORON of SYSCTL1
   38                   *				Renamed RCART to RCART_0 and added RCART_1
   39                   *				Deleted VIDEO/MIKEYTEST, added MTEST0/1/2
   40                   * 2 Jan 89	-RJ		Added EVER_ON and NO_COLLIDE
   41                   * 31 Dec 88	-RJ		When HANDYMATH is non-zero, the hardw
   42                   *				math registers now aren't defined here either
   43                   *				Added JOYSTICK and SWITCHES flag definitions
   44                   * 30 Dec 88	-RJ		Added sprite type defs.  Renamed REUS
   45                   *				et al to the more accurate RELOAD_NONE et al
   46                   * 24-Dec-88	-RJ		Added sprite control register and aud
   47                   *				channel declarations and control bits
   48                   * 22 Dec 88	-RJ		Redefined all addresses, turning them
   49                   *				symbols that Handebug will recognize
   50                   *
   51                   * Mid 87	=RJ Mical=	Created this file!
   52                   *
   53                   * ====================================================
   54                   
   55                   
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page    5
                        6502:include/harddefs.i         14:53:39  

   56                   * Size of a display buffer
   57      1FE0         DISPLAY_BUFSIZE	.EQ $1FE0
   58                   
   59                   
   60                   * First address of the block of hardware addresses.
   61      FC00         HARDWARE_START	.EQ $FC00
   62                   
   63                   
   64                   
   65                   * SUZY chip functions are mapped into the $FC00 page
   66 0000:             		.OR $FC00
   67 FC00:             SUZY_BASE		; FC00
   68                   
   69                   * SUZY registers from $FC00-$FC7F (both sprite and MAT
   70                   * when the lower byte is stored to.
   71                   
   72                   * Sprite engine registers - *'ed values are used inter
   73                   * cannot be usefully initialized externally.
   74                   
   75 FC00:             TMPADRL		.DS 1	; FC00 *
   76 FC01:             TMPADRH		.DS 1	; FC01 *
   77 FC02:             TILTACUML	.DS 1	; FC02 *
   78 FC03:             TILTACUMH	.DS 1	; FC03 *
   79 FC04:             HOFFL		.DS 1	; FC04
   80 FC05:             HOFFH		.DS 1	; FC05
   81 FC06:             VOFFL		.DS 1	; FC06
   82 FC07:             VOFFH		.DS 1	; FC07
   83 FC08:             VIDBASL		.DS 1	; FC08
   84 FC09:             VIDBASH		.DS 1	; FC09
   85 FC0A:             COLLBASL	.DS 1	; FC0A
   86 FC0B:             COLLBASH	.DS 1	; FC0B
   87 FC0C:             VIDADRL		.DS 1	; FC0C *
   88 FC0D:             VIDADRH		.DS 1	; FC0D *
   89 FC0E:             COLLADRL	.DS 1	; FC0E *
   90 FC0F:             COLLADRH	.DS 1	; FC0F *
   91 FC10:             SCBNEXTL	.DS 1	; FC10
   92 FC11:             SCBNEXTH	.DS 1	; FC11
   93 FC12:             SPRDLINEL	.DS 1	; FC12 *
   94 FC13:             SPRDLINEH	.DS 1	; FC13 *
   95 FC14:             HPOSSTRTL	.DS 1	; FC14 *
   96 FC15:             HPOSSTRTH	.DS 1	; FC15 *
   97 FC16:             VPOSSTRTL	.DS 1	; FC16 *
   98 FC17:             VPOSSTRTH	.DS 1	; FC17 *
   99 FC18:             SPRHSIZL	.DS 1	; FC18
  100 FC19:             SPRHSIZH	.DS 1	; FC19
  101 FC1A:             SPRVSIZL	.DS 1	; FC1A
  102 FC1B:             SPRVSIZH	.DS 1	; FC1B
  103 FC1C:             STRETCHL	.DS 1	; FC1C *
  104 FC1D:             STRETCHH	.DS 1	; FC1D *
  105 FC1E:             TILTL		.DS 1	; FC1E *
  106 FC1F:             TILTH		.DS 1	; FC1F *
  107 FC20:             SPRDOFFL	.DS 1	; FC20 *
  108 FC21:             SPRDOFFH	.DS 1	; FC21 *
  109 FC22:             SCVPOSL		.DS 1	; FC22 *
  110 FC23:             SCVPOSH		.DS 1	; FC23 *
  111 FC24:             COLLOFFL	.DS 1	; FC24
  112 FC25:             COLLOFFH	.DS 1	; FC25
  113 FC26:             VSIZACUML	.DS 1	; FC26 *
  114 FC27:             VSIZACUMH	.DS 1	; FC27 *
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page    6
                        6502:include/harddefs.i         14:53:39  

  115 FC28:             HSIZOFFL	.DS 1	; FC28
  116 FC29:             HSIZOFFH	.DS 1	; FC29
  117 FC2A:             VSIZOFFL	.DS 1	; FC2A
  118 FC2B:             VSIZOFFH	.DS 1	; FC2B
  119 FC2C:             SCBADRL		.DS 1	; FC2C *
  120 FC2D:             SCBADRH		.DS 1	; FC2D *
  121 FC2E:             PROCADRL	.DS 1	; FC2E *
  122 FC2F:             PROCADRH	.DS 1	; FC2F *
  123                   
  124                   
  125                   * Math engine registers
  126                   
  127 FC30:             		.OR $FC52
  128 FC52:             MATHD		.DS 1	; FC52
  129 FC53:             MATHC		.DS 1	; FC53
  130 FC54:             MATHB		.DS 1	; FC54
  131 FC55:             MATHA		.DS 1	; FC55
  132 FC56:             MATHP		.DS 1	; FC56
  133 FC57:             MATHN		.DS 1	; FC57
  134 FC58:             		.OR $FC60
  135 FC60:             MATHH		.DS 1	; FC60
  136 FC61:             MATHG		.DS 1	; FC61
  137 FC62:             MATHF		.DS 1	; FC62
  138 FC63:             MATHE		.DS 1	; FC63
  139 FC64:             		.OR $FC6C
  140 FC6C:             MATHM		.DS 1	; FC6C
  141 FC6D:             MATHL		.DS 1	; FC6D
  142 FC6E:             MATHK		.DS 1	; FC6E
  143 FC6F:             MATHJ		.DS 1	; FC6F
  144                   
  145                   
  146                   * More SUZY control registers
  147                   
  148 FC70:             		.OR $FC80
  149 FC80:             SPRCTL0		.DS 1	; FC80
  150                   * Sprite control 0 bit definitions
  151      00C0         BITS_MASK	.EQ %11000000	; Mask for settings bits per p
  152                   * Sprite bits-per-pixel definitions
  153      0000         ONE_PER_PIXEL	.EQ %00000000
  154      0040         TWO_PER_PIXEL	.EQ %01000000
  155      0080         THREE_PER_PIXEL	.EQ %10000000
  156      00C0         FOUR_PER_PIXEL	.EQ %11000000
  157                   * More sprite control 0 bit definitions
  158      0020         HFLIP		.EQ %00100000
  159      0010         VFLIP		.EQ %00010000
  160                   * Sprite types - redefined to reflect the reality caus
  161                   ; NORMAL_SPRITE		.EQ %00000111
  162      0007         SHADOW_SPRITE		.EQ %00000111
  163                   
  164      0006         XOR_SPRITE		.EQ %00000110
  165      0006         XOR_SHADOW_SPRITE	.EQ %00000110
  166                   
  167      0005         NONCOLL_SPRITE		.EQ %00000101
  168                   
  169                   ; SHADOW_SPRITE		.EQ %00000100
  170      0004         NORMAL_SPRITE		.EQ %00000100
  171                   
  172                   ; BSHADOW_SPRITE	.EQ %00000011
  173      0003         BOUNDARY_SPRITE		.EQ %00000011
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page    7
                        6502:include/harddefs.i         14:53:39  

  174                   
  175                   ; BOUNDARY_SPRITE	.EQ %00000010
  176      0002         BSHADOW_SPRITE		.EQ %00000010
  177                   
  178      0001         BACKNONCOLL_SPRITE	.EQ %00000001
  179                   
  180      0000         BACKGROUND_SPRITE	.EQ %00000000
  181      0000         BACK_SHADOW_SPRITE	.EQ %00000000
  182                   
  183                   
  184 FC81:             SPRCTL1		.DS 1	; FC81
  185                   * Sprite control 1 bit definitions
  186      0080         LITERAL		.EQ %10000000
  187      0040         ALGO_3		.EQ %01000000	; broken, do not set this bit!
  188      0030         RELOAD_MASK	.EQ %00110000
  189                   * Sprite reload mask definitions
  190      0000         RELOAD_NONE	.EQ %00000000	; Reload nothing
  191      0010         RELOAD_HV	.EQ %00010000	; Reload hsize, vsize
  192      0020         RELOAD_HVS	.EQ %00100000	; Reload hsize, vsize, stretc
  193      0030         RELOAD_HVST	.EQ %00110000	; Reload hsize, vsize, stret
  194                   * More sprite control 1 bit definitions
  195      0008         REUSE_PALETTE	.EQ %00001000
  196      0004         SKIP_SPRITE	.EQ %00000100
  197      0002         DRAW_UP		.EQ %00000010
  198      0001         DRAW_LEFT	.EQ %00000001
  199                   
  200                   
  201 FC82:             SPRCOLL		.DS 1	; FC82
  202                   * SPRCOLL bit definitions
  203      0020         NO_COLLIDE	.EQ %00100000
  204                   
  205 FC83:             SPRINIT		.DS 1	; FC83
  206                   
  207 FC84:             		.OR $FC88
  208 FC88:             SUZYHREV	.DS 1	; FC88
  209 FC89:             SUZYSREV	.DS 1	; FC89
  210                   
  211 FC8A:             		.OR $FC90
  212 FC90:             SUZYBUSEN	.DS 1	; FC90
  213                   
  214 FC91:             SPRGO		.DS 1	; FC91
  215                   * These are the SPRGO flag definitions
  216      0004         EVER_ON		.EQ %00000100
  217      0001         SPRITE_GO	.EQ %00000001
  218                   
  219 FC92:             SPRSYS		.DS 1	; FC92
  220                   * These are the SPRSYS flag definitions when writing
  221      0080         SIGNMATH	.EQ %10000000
  222      0040         ACCUMULATE	.EQ %01000000
  223                   ;NO_COLLIDE	.EQ %00100000	; same as for SPRCOLL
  224      0010         VSTRETCH	.EQ %00010000
  225      0008         LEFTHAND	.EQ %00001000
  226      0004         UNSAFEACCESSRST	.EQ %00000100
  227      0002         SPRITESTOP	.EQ %00000010
  228                   * These are the SPRSYS flag definitions when reading
  229      0080         MATHWORKING	.EQ %10000000
  230      0040         MATHWARNING	.EQ %01000000
  231      0020         MATHCARRY	.EQ %00100000
  232      0010         VSTRETCHING	.EQ %00010000
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page    8
                        6502:include/harddefs.i         14:53:39  

  233      0008         LEFTHANDED	.EQ %00001000
  234      0004         UNSAFEACCESS	.EQ %00000100
  235      0002         SPRITETOSTOP	.EQ %00000010
  236      0001         SPRITEWORKING	.EQ %00000001
  237                   
  238 FC93:             		.OR $FCB0
  239 FCB0:             JOYSTICK	.DS 1	; FCB0
  240      0080         JOY_DOWN	.EQ %10000000
  241      0040         JOY_UP		.EQ %01000000
  242      0020         JOY_RIGHT	.EQ %00100000
  243      0010         JOY_LEFT	.EQ %00010000
  244      0008         OPTION1_BUTTON	.EQ %00001000
  245      0004         OPTION2_BUTTON	.EQ %00000100
  246      0002         INNER_BUTTON	.EQ %00000010
  247      0001         OUTER_BUTTON	.EQ %00000001
  248      0001         A_BUTTON	.EQ OUTER_BUTTON
  249      0002         B_BUTTON	.EQ INNER_BUTTON
  250      0008         RESTART_BUTTON	.EQ OPTION1_BUTTON
  251      0004         FLIP_BUTTON	.EQ OPTION2_BUTTON
  252                   
  253 FCB1:             SWITCHES	.DS 1	; FCB1
  254      0004         CART1_IO_INACTIVE .EQ %00000100
  255      0002         CART0_IO_INACTIVE .EQ %00000010
  256      0001         PAUSE_SWITCH	.EQ %00000001
  257                   
  258 FCB2:             RCART_0		.DS 1	; FCB2
  259 FCB3:             RCART_1		.DS 1	; FCB3
  260                   
  261                   
  262                   * LEDS output register only exists on early wire-wrap 
  263 FCB4:             		.OR $FCC0
  264 FCC0:             LEDS		.DS 1	; FCC0
  265                   
  266                   
  267                   * The parallel IO port only exists on early wire-wrap 
  268 FCC1:             		.OR $FCC2
  269 FCC2:             IOStatus	.DS 1	; FCC2
  270 FCC3:             IOData		.DS 1	; FCC3
  271                   
  272 FCC4:             HOWIE		.DS 1	; FCC4
  273                   
  274                   
  275                   
  276                   
  277                   * MIKEY chip functions are mapped into the $FD00 page
  278                   
  279 FCC5:             		.OR $FD00
  280 FD00:             MIKEY_BASE	; FD00
  281                   
  282                   * The Mikey Timers
  283                   * First the logical timer names are defined, then the 
  284 FD00:             HCOUNT		; FD00
  285 FD00:             TIMER0		; FD00
  286 FD00:             	.DS 4
  287 FD04:             TIMER1		; FD04
  288 FD04:             	.DS 4
  289 FD08:             VCOUNT		; FD08
  290 FD08:             TIMER2		; FD08
  291 FD08:             	.DS 4
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page    9
                        6502:include/harddefs.i         14:53:39  

  292 FD0C:             TIMER3		; FD0C
  293 FD0C:             	.DS 4
  294 FD10:             SERIALRATE	; FD10
  295 FD10:             TIMER4		; FD10
  296 FD10:             	.DS 4
  297 FD14:             TIMER5		; FD14
  298 FD14:             	.DS 4
  299 FD18:             TIMER6		; FD18
  300 FD18:             	.DS 4
  301 FD1C:             TIMER7		; FD1C
  302 FD1C:             	.DS 4
  303                   
  304                   * Here's the timer offsets
  305      0000         TIM_BACKUP	.EQ 0
  306      0001         TIM_CONTROLA	.EQ 1
  307      0002         TIM_COUNT	.EQ 2
  308      0003         TIM_CONTROLB	.EQ 3
  309                   
  310                   * TIM_CONTROLA control bits
  311      0080         ENABLE_INT	.EQ %10000000
  312      0040         RESET_DONE	.EQ %01000000
  313      0010         ENABLE_RELOAD	.EQ %00010000
  314      0008         ENABLE_COUNT	.EQ %00001000
  315      0007         AUD_CLOCK_MASK	.EQ %00000111
  316                   * Clock settings
  317      0007         AUD_LINKING	.EQ %00000111
  318      0006         AUD_64		.EQ %00000110
  319      0005         AUD_32		.EQ %00000101
  320      0004         AUD_16		.EQ %00000100
  321      0003         AUD_8		.EQ %00000011
  322      0002         AUD_4		.EQ %00000010
  323      0001         AUD_2		.EQ %00000001
  324      0000         AUD_1		.EQ %00000000
  325                   
  326                   * TIM_CONTROLB control bits
  327      0008         TIMER_DONE	.EQ %00001000
  328      0004         LAST_CLOCK	.EQ %00000100
  329      0002         BORROW_IN	.EQ %00000010
  330      0001         BORROW_OUT	.EQ %00000001
  331                   
  332                   
  333 FD20:             AUDIO0		.DS 8	; FD20
  334 FD28:             AUDIO1		.DS 8	; FD28
  335 FD30:             AUDIO2		.DS 8	; FD30
  336 FD38:             AUDIO3		.DS 8	; FD38
  337                   * Here's the audio channel offsets
  338      0000         AUD_VOLCNTRL	.EQ 0
  339      0001         AUD_FEEDBACK	.EQ 1
  340      0002         AUD_OUTPUT	.EQ 2
  341      0003         AUD_SHIFT	.EQ 3
  342      0004         AUD_BACKUP	.EQ 4
  343      0005         AUD_CONTROL	.EQ 5
  344      0006         AUD_COUNTER	.EQ 6
  345      0007         AUD_OTHER	.EQ 7
  346                   * The AUD_CONTROL bits are almost identical to the TIM
  347                   * Here's the AUD_CONTROL control bits that are differe
  348                   * control bits.
  349                   * See TIM_CONTROLA above for the other definitions
  350      0080         FEEDBACK_7		.EQ %10000000
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   10
                        6502:include/harddefs.i         14:53:39  

  351      0020         ENABLE_INTEGRATE	.EQ %00100000
  352                   
  353                   
  354                   ; Stereo control registers follow
  355                   ; Stereo capability does not exist in all Lynxes
  356                   ; Left and right may be reversed, and if so will be co
  357                   ; release
  358                   
  359 FD40:             		.OR $FD40
  360 FD40:             ATTENREG0	.DS 1	; FD40	; Stereo attenuation registers
  361 FD41:             ATTENREG1	.DS 1	; FD41
  362 FD42:             ATTENREG2	.DS 1	; FD42
  363 FD43:             ATTENREG3	.DS 1	; FD43
  364      00F0         LEFT_ATTENMASK	.EQ %11110000
  365      000F         RIGHT_ATTENMASK	.EQ %00001111
  366                   
  367 FD44:             MPAN		.DS 1	; FD44	; Stereo attenuation select registe
  368                   
  369 FD45:             		.OR $FD50
  370 FD50:             MSTEREO		.DS 1	; FD50	; Stereo channel disable registe
  371                   
  372                   ; bit definitions for MPAN and MSTEREO registers
  373      0080         LEFT3_SELECT	.EQ %10000000
  374      0040         LEFT2_SELECT	.EQ %01000000
  375      0020         LEFT1_SELECT	.EQ %00100000
  376      0010         LEFT0_SELECT	.EQ %00010000
  377      0008         RIGHT3_SELECT	.EQ %00001000
  378      0004         RIGHT2_SELECT	.EQ %00000100
  379      0002         RIGHT1_SELECT	.EQ %00000010
  380      0001         RIGHT0_SELECT	.EQ %00000001
  381                   
  382                   
  383 FD51:             		.OR $FD80
  384 FD80:             INTRST		.DS 1	; FD80	; Interrupt Reset and Set registe
  385 FD81:             INTSET		.DS 1	; FD81
  386                   
  387                   * Interrupt Reset and Set bit definitions
  388      0080         TIMER7_INT	.EQ %10000000
  389      0040         TIMER6_INT	.EQ %01000000
  390      0020         TIMER5_INT	.EQ %00100000
  391      0010         SERIAL_INT	.EQ %00010000
  392      0008         TIMER3_INT	.EQ %00001000
  393      0004         TIMER2_INT	.EQ %00000100
  394      0002         TIMER1_INT	.EQ %00000010
  395      0001         TIMER0_INT	.EQ %00000001
  396      0004         VERTICAL_INT	.EQ TIMER2_INT
  397      0001         HORIZONTAL_INT	.EQ TIMER0_INT
  398                   
  399 FD82:             		.OR $FD86
  400 FD86:             AUDIN		.DS 1	; FD86	; Audio in -or- cartridge r/w line
  401 FD87:             SYSCTL1		.DS 1	; FD87
  402                   * SYSCTL1 bit definitions
  403      0002         POWERON		.EQ %00000010
  404      0001         CART_ADDR_STROBE .EQ %00000001
  405                   
  406 FD88:             MIKEYHREV	.DS 1	; FD88	; Mikey hardware rev
  407 FD89:             MIKEYSREV	.DS 1	; FD89	; Mikey software rev
  408 FD8A:             IODIR		.DS 1	; FD8A
  409 FD8B:             IODAT		.DS 1	; FD8B
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   11
                        6502:include/harddefs.i         14:53:39  

  410                   * Here's the IODIR and IODAT bit definitions
  411      0010         AUDIN_BIT	.EQ %00010000	; note that there is also the 
  412      0010         READ_ENABLE	.EQ %00010000	; same bit for AUDIN_BIT
  413      0008         RESTLESS	.EQ %00001000
  414      0004         NOEXP		.EQ %00000100	; If set, redeye is not connected
  415      0002         CART_ADDR_DATA	.EQ %00000010
  416      0002         CART_POWER_OFF	.EQ %00000010	; same bit for CART_ADDR_
  417      0001         EXTERNAL_POWER	.EQ %00000001
  418                   
  419 FD8C:             SERCTL		.DS 1	; FD8C	; Serial control
  420                   * Here's the SERCTL bit definitions when writing
  421      0080         TXINTEN		.EQ %10000000
  422      0040         RXINTEN		.EQ %01000000
  423                   ;unused		.EQ %00100000	; Leave unused bit 0 for future
  424      0010         PAREN		.EQ %00010000
  425      0008         RESETERR	.EQ %00001000
  426      0004         TXOPEN		.EQ %00000100
  427      0002         TXBRK		.EQ %00000010
  428      0001         PAREVEN		.EQ %00000001
  429                   * Here's the SERCTL bit definitions when reading
  430      0080         TXRDY		.EQ %10000000
  431      0040         RXRDY		.EQ %01000000
  432      0020         TXEMPTY		.EQ %00100000
  433      0010         PARERR		.EQ %00010000
  434      0008         OVERRUN		.EQ %00001000
  435      0004         FRAMERR		.EQ %00000100
  436      0002         RXBRK		.EQ %00000010
  437      0001         PARBIT		.EQ %00000001
  438                   
  439 FD8D:             SERDAT		.DS 1	; FD8D	; Serial data
  440                   
  441                   
  442                   
  443 FD8E:             		.OR $FD90
  444 FD90:             SDONEACK	.DS 1	; FD90	; Suzy done ack
  445 FD91:             CPUSLEEP	.DS 1	; FD91	; zzz
  446 FD92:             DISPCTL		.DS 1	; FD92	; Display control
  447                   * Here are the DISPCTL bit definitions
  448      0008         DISP_COLOR	.EQ %00001000	; must be set to 1
  449      0004         DISP_FOURBIT	.EQ %00000100	; must be set to 1
  450      0002         DISP_FLIP	.EQ %00000010
  451      0001         DMA_ENABLE	.EQ %00000001	; must be set to 1
  452                   
  453 FD93:             PBKUP		.DS 1	; FD93	; Display's magic 'P' count
  454 FD94:             DISPADRL	.DS 1	; FD94	; Start of display
  455 FD95:             DISPADRH	.DS 1	; FD95
  456                   
  457 FD96:             		.OR $FD9C
  458 FD9C:             MTEST0		.DS 1	; FD9C	; System test vectors, see spec f
  459 FD9D:             MTEST1		.DS 1	; FD9D
  460 FD9E:             MTEST2		.DS 1	; FD9E
  461                   
  462                   * The Color registers
  463 FD9F:             		.OR $FDA0
  464 FDA0:             GREEN0		.DS 1	; FDA0
  465 FDA1:             GREEN1		.DS 1	; FDA1
  466 FDA2:             GREEN2		.DS 1	; FDA2
  467 FDA3:             GREEN3		.DS 1	; FDA3
  468 FDA4:             GREEN4		.DS 1	; FDA4
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   12
                        6502:include/harddefs.i         14:53:39  

  469 FDA5:             GREEN5		.DS 1	; FDA5
  470 FDA6:             GREEN6		.DS 1	; FDA6
  471 FDA7:             GREEN7		.DS 1	; FDA7
  472 FDA8:             GREEN8		.DS 1	; FDA8
  473 FDA9:             GREEN9		.DS 1	; FDA9
  474 FDAA:             GREENA		.DS 1	; FDAA
  475 FDAB:             GREENB		.DS 1	; FDAB
  476 FDAC:             GREENC		.DS 1	; FDAC
  477 FDAD:             GREEND		.DS 1	; FDAD
  478 FDAE:             GREENE		.DS 1	; FDAE
  479 FDAF:             GREENF		.DS 1	; FDAF
  480                   
  481 FDB0:             BLUERED0	.DS 1	; FDB0
  482 FDB1:             BLUERED1	.DS 1	; FDB1
  483 FDB2:             BLUERED2	.DS 1	; FDB2
  484 FDB3:             BLUERED3	.DS 1	; FDB3
  485 FDB4:             BLUERED4	.DS 1	; FDB4
  486 FDB5:             BLUERED5	.DS 1	; FDB5
  487 FDB6:             BLUERED6	.DS 1	; FDB6
  488 FDB7:             BLUERED7	.DS 1	; FDB7
  489 FDB8:             BLUERED8	.DS 1	; FDB8
  490 FDB9:             BLUERED9	.DS 1	; FDB9
  491 FDBA:             BLUEREDA	.DS 1	; FDBA
  492 FDBB:             BLUEREDB	.DS 1	; FDBB
  493 FDBC:             BLUEREDC	.DS 1	; FDBC
  494 FDBD:             BLUEREDD	.DS 1	; FDBD
  495 FDBE:             BLUEREDE	.DS 1	; FDBE
  496 FDBF:             BLUEREDF	.DS 1	; FDBF
  497                   
  498                   
  499                   * The Map Control register
  500 FDC0:             		.OR $FFF9
  501 FFF9:             MAPCTL		.DS 1	; FFF9
  502                   * These are the MAPCTL flag definitions
  503      0080         TURBO_DISABLE	.EQ %10000000
  504      0008         VECTOR_SPACE	.EQ %00001000	; 1 maps RAM into specified
  505      0004         ROM_SPACE	.EQ %00000100
  506      0002         MIKEY_SPACE	.EQ %00000010
  507      0001         SUZY_SPACE	.EQ %00000001
  508                   
  509                   * 65C02 hardware interrupt and reset vectors
  510 FFFA:             CPU_NMI		.DS 2	; FFFA
  511 FFFC:             CPU_RESET	.DS 2	; FFFC
  512 FFFE:             CPU_IRQ			; FFFE
  513                   
  514                   
  515                   
   76                   	.IN 6502:include/sprite.i
    1                   * Here are the sprite control block offsets
    2                   * The final offset, SCB_SIZEOF, contains the byte-size
    3                   * Note that the palette will move up if any of HSIZE, 
    4                   * are not used
    5      0000         SCB_CTRL0	.EQ 0
    6      0001         SCB_CTRL1	.EQ {SCB_CTRL0+1}
    7      0002         SCB_CTRL2	.EQ {SCB_CTRL1+1}
    8      0003         SCB_NEXT	.EQ {SCB_CTRL2+1}
    9      0005         SCB_DATA	.EQ {SCB_NEXT+2}
   10      0007         SCB_HPOS	.EQ {SCB_DATA+2}
   11      0009         SCB_VPOS	.EQ {SCB_HPOS+2}
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   13
                        6502:include/sprite.i           14:53:39  

   12      000B         SCB_HSIZE	.EQ {SCB_VPOS+2}
   13      000D         SCB_VSIZE	.EQ {SCB_HSIZE+2}
   14      000F         SCB_STRETCH	.EQ {SCB_VSIZE+2}
   15      0011         SCB_TILT	.EQ {SCB_STRETCH+2}
   16      0013         SCB_PALETTE	.EQ {SCB_TILT+2}
   17                   
   18      001B         SCB_SIZEOF	.EQ {SCB_PALETTE+8}
   19                   
   20                   
   21                   
   77                   	.IN 6502:include/hprint.i
    1                   
    2                   * === hprint.i =======================================
    3                   * 
    4                   * HandyPrint Include File  --  Handy Software
    5                   * 
    6                   * Confidential and Proprietary
    7                   * Copyright (C) 1989, Epyx, Inc.
    8                   * 
    9                   * Date       Name              Description
   10                   * ---------  ----------------  -----------------------
   11                   * 8 Feb 89   =RJ Mical=        Created this file!
   12                   * 
   13                   * ====================================================
   14                   
   15                   
   16                   
   17                   * These are the different font types you can request
   18      0001         HPR_DIGIT	.EQU $01
   19      0002         HPR_UPPER	.EQU $02
   20      0004         HPR_LOWER	.EQU $04
   21      0008         HPR_PUNC	.EQU $08
   22      0010         HPR_OTHER	.EQU $10
   23                   
   24                   
   25                   * These are some common font types
   26      0006         HPR_ALPHA	.EQU HPR_UPPER+HPR_LOWER
   27      000B         HPR_BASIC	.EQU HPR_DIGIT+HPR_UPPER+HPR_PUNC
   28      001F         HPR_ALL		.EQU HPR_DIGIT+HPR_UPPER+HPR_LOWER+HPR_PUNC+H
   29                   
   30                   	.END
   78                   
   79                   	.IN 6502:macros/zpage.mac
    1                   ; ----------------------------------------------------
    2                   ; Zero-Page memory allocation macros
    3                   ;  Created:  Mike Ireton, 10/07/88
    4                   ; Modified:  RJ Mical, 14 Nov 88
    5                   ; 
    6                   ; BEGIN_ZPAGE (or BEGIN_ALLOCATE_ZEROPAGE) 
    7                   ; and END_ZPAGE (or END_ALLOCATE_ZEROPAGE) are two ver
    8                   ; for safely allocating zero-page memory space in any 
    9                   ; If you use these macros around every z-page memory a
   10                   ; the macros will track your allocations and dole out 
   11                   ; memory locations every time you ask for them.  This 
   12                   ; emulator to make z-page allocations without stepping
   13                   ; allows you to make z-page allocations locally in the
   14                   ; rather than making all your allocations in one file 
   15                   ; down all free zero page locations and figuring out w
   16                   ; 
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   14
                        6502:macros/zpage.mac           14:53:39  

   17                   ; -- TO USE ---
   18                   ; This file defines a redefinable value named NEXTZPG,
   19                   ; to 0.  NEXTZPG holds the address of the next availab
   20                   ; which in most cases will be at memory location $00. 
   21                   ; zero-page memory locations starting from $00, you ca
   22                   ; a value of your own choice after you've included thi
   23                   ; used any of this file's macros.  For example, say th
   24                   ; to stash away memory locations $00 through $0F.  At 
   25                   ; before calling BEGIN_ZPAGE (or BEGIN_ALLOCATE_ZEROPA
   26                   ;                .IN    6502:macros/zpage.mac
   27                   ;   NEXTZPG     .=     $10
   28                   ; 
   29                   ; Then, when the need arises for zero page variables, 
   30                   ; BEGIN_ZPAGE (or BEGIN_ALLOCATE_ZEROPAGE).  This will
   31                   ; labels and re-assign the assembler's location counte
   32                   ; zero-page (as pointed to by the current NEXTZPG).  A
   33                   ; end with END_ZPAGE (or END_ALLOCATE_ZEROPAGE), which
   34                   ; z-page offset and restore the program counter.  For 
   35                   ;   RoutineX                        RoutineX
   36                   ;           BEGIN_ZPAGE                     BEGIN_ALLO
   37                   ;   ZPG1    .DS    2      - or -    ZPG1    .DS    2
   38                   ;   COUNT   .DS    1                COUNT   .DS    1
   39                   ;           END_ZPAGE                       END_ALLOCA
   40                   ;           STA    ZPG1                     STA    ZPG
   41                   ; 
   42                   ; Remember that you should only define data areas betw
   43                   ; Anything else is dangerous and should be avoided (an
   44                   ; you should find another line of work... :-)  )
   45                   ; 
   46                   ; Also, note that these macros use another redefinable
   47                   ; record and restore the program counter 
   48                   
   49      0000         NEXTZPG	.= $00
   50                   
   51                   	#MACRO BEGIN_ZPAGE
   52 MACRO             TEMPORG	  .= *
   53 MACRO             	  .ORG NEXTZPG
   54                   	#ENDM
   55                   
   56                   	#MACRO BEGIN_ALLOCATE_ZEROPAGE
   57 MACRO             	  BEGIN_ZPAGE
   58                   	#ENDM
   59                   
   60                   
   61                   	#MACRO END_ZPAGE
   62 MACRO             NEXTZPG	  .= *
   63 MACRO             	  #IF NEXTZPG > $0100
   64 MACRO             	    .ECHO "ERROR:  z-page allocations went out of pag
   65 MACRO             	  #ENDIF
   66 MACRO             	  .ORG TEMPORG
   67                   	#ENDM
   68                   
   69                   	#MACRO END_ALLOCATE_ZEROPAGE
   70 MACRO             	  END_ZPAGE
   71                   	#ENDM
   72                   
   73                   
   74                   
   80                   	.IN 6502:src/syszpage.src
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   15
                        6502:src/syszpage.src           14:53:39  

    1                   
    2                   * === syszpage.src ===================================
    3                   *
    4                   * System Zero-Page Data Allocations  --  the 6502 Side
    5                   *
    6                   * Copyright (C) 1988, Epyx, Inc.
    7                   * All Rights Reserved
    8                   * CONFIDENTIAL and PROPRIETARY
    9                   *
   10                   * Date		Name		Description
   11                   * ---------	--------------	---------------------------
   12                   * 7-Feb-90	SHL		Removed Apple emulation compatibility
   13                   * 19 Apr 89	-RJ		Added description of rule for using s
   14                   * 22 Mar 89	-RJ		Removed the audio variables from this
   15                   * 20 Mar 89	RG Goudy	Added several new zpage pointers
   16                   * 26 Jan 89	-RJ		Got rid of Interruptus
   17                   * 26-Dec-88	=RJ Mical=	Created this file from sysdata.
   18                   *
   19                   * ====================================================
   20                   
   21                   
   22                   * NOTE  NOTE  NOTE  NOTE  NOTE  NOTE  NOTE  NOTE  NOTE
   23                   *
   24                   * This file should be included before any source code 
   25                   *
   26                   * NOTE  NOTE  NOTE  NOTE  NOTE  NOTE  NOTE  NOTE  NOTE
   27                   
   28                   
   29                   
   30                   * System programmers note:  the sysptrs are defined as
   31                   * pointers.  These can't be used during interrupt code
   32                   * no promises regarding the usage of these for anythin
   33                   * while using one of these is a dangerous thing to do
   34                   		BEGIN_ZPAGE
    1      FFFE       + TEMPORG	  .= *
    2 FFFE:           + 	  .ORG NEXTZPG
    3                 + 
   35 0000:             sysptr		.DS 2
   36 0002:             sysptr2		.DS 2
   37 0004:             sysptr3		.DS 2
   38                   		END_ZPAGE
    1      0006       + NEXTZPG	  .= *
    2      FALSE        	  #IF NEXTZPG > $0100
    4                 + 	  #ENDIF
    5 0006:           + 	  .ORG TEMPORG
    6                 + 
   39                   
   40                   
   41                   
   81                   
   82                   	.IN 6502:macros/sys.mac
    1                   ; Wednesday 27-Jun-90 11:49:43
    2                   * == sys.mac =========================================
    3                   *
    4                   * System Macros  --  Handy Software
    5                   *
    6                   * Confidential and Proprietary
    7                   * Copyright (c) 1989,1990 Epyx, Inc.
    8                   *
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   16
                        6502:macros/sys.mac             14:53:39  

    9                   * Date		Name		Description
   10                   * ---------	--------------	---------------------------
   11                   * 20-Jun-90	SHL		RAMCART_USER support added
   12                   * 28-Mar-90	SHL		INITINT new clears and resets serial 
   13                   *				if SERIALPORT_USER defined
   14                   * 22-Mar-90	SHL		INITINT now vectors all IRQS to IntRe
   15                   *				instead of user supplied RTS
   16                   * 20-Mar-90	SHL		Removed SEI, CLI from INITINT macro
   17                   * 7-Mar-90	SHL		DISPCTL_RAM now initialized in INITSYS
   18                   * 9-Feb-90	SHL		Modified BRK_USER support to force bre
   19                   *				Howard board, unless user uses the SET_BRK
   20                   *				macro to redirect breaks
   21                   *				INITINT is now required before any use of
   22                   *				INITEOF, INITEOL or SET_DISPLAY... macros
   23                   *				Added HBRK macro
   24                   *				Moved initialization of MAPCTL to INITSYS
   25                   *				Removed HFIX1 macros
   26                   * 31 May 89	-RJ		Added BRK_USER support to INITINT mac
   27                   *				Killed call to InitSys
   28                   *				Added SET_BRK macro
   29                   * 25 May 89	-RJ		Added AUTO_TIMEOUT_USER support code
   30                   * 22 May 89	-RJ		Changed init'ing of IODIR's LIGHT_OFF
   31                   *				RESTLESS, also now init IODAT too
   32                   * 16 May 89	-RJ		Added setting TXOPEN to SERCTL in INI
   33                   * 11 May 89	-RJ		Moved declaration of sysIntTable to s
   34                   * 10 May 89	-RJ		Changed CART_STROBE to CART_ADDR_DATA
   35                   * 1 May 89	-RJ		Added the INITINTS macro for user-cont
   36                   *				interrupt table handling.  Also defined
   37                   *				and allow redefinition of sysIntTable, which
   38                   *				is now used in the display.src file
   39                   * 20 Apr 89	-RJ		Added initialization of IODIR and IOD
   40                   * 6 Apr 89	-RJ		Moved init of SPRSYS into INITSYS
   41                   * 19 Mar 89	-RJ		Added HFIX1 macros, modified INITSYS 
   42                   * 18 Mar 89	=RJ Mical=	Created this file!
   43                   *
   44                   * ====================================================
   45                   
   46                   
   47                   * HBRK macro forces a break on a Howard board.  On a c
   48                   * executed as one-byte one-cycle NOP.
   49                   	#MACRO HBRK
   50 MACRO             	.HS 13
   51                   	#ENDM
   52                   
   53                   
   54                   * Do some needed hardware initialization to get system
   55                   	#MACRO INITSYS
   56 MACRO             
   57 MACRO             	LDA #DISP_COLOR+DISP_FOURBIT+DMA_ENABLE
   58 MACRO             	STA DISPCTL_RAM
   59 MACRO             
   60 MACRO             	LDA #LEFTHAND		; the equates have been defined to pre
   61 MACRO             	STA SPRSYS_RAM
   62 MACRO             	STA SPRSYS
   63 MACRO             
   64 MACRO             	LDA #VECTOR_SPACE	; map in all RAM except for CPU vec
   65 MACRO             	STA MAPCTL
   66 MACRO             
   67 MACRO             	;------	Set parallel CART_ADDR_DATA and RESTLESS as o
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   17
                        6502:macros/sys.mac             14:53:39  

   68 MACRO             	;------ If RAMCART_USER, set AUDIN (READ_ENABLE) as o
   69 MACRO             	;------	all others as input
   70 MACRO              #IFDEF RAMCART_USER
   71 MACRO             	LDA #CART_ADDR_DATA+RESTLESS+READ_ENABLE
   72 MACRO              #ELSE
   73 MACRO             	LDA #CART_ADDR_DATA+RESTLESS
   74 MACRO              #ENDIF
   75 MACRO             	STA IODAT_RAM
   76 MACRO             	STA IODAT
   77 MACRO             	STA IODIR_RAM
   78 MACRO             	STA IODIR
   79 MACRO             
   80 MACRO             	LDA #TXOPEN	; Turn off serial IRQs before starting
   81 MACRO             	STA SERCTL	;  and make sure serial port is open-colle
   82 MACRO             
   83 MACRO             	  #IFDEF AUTO_TIMEOUT_USER
   84 MACRO             		STZ TimeoutCount+1
   85 MACRO             		STZ TimeoutCount+2
   86 MACRO             	  #ENDIF
   87 MACRO             
   88                   	#ENDMACRO
   89                   
   90                   
   91                   	#MACRO	INITINT
   92 MACRO             sysIntTable	.EQ ?0
   93 MACRO             
   94 MACRO             		;------	Set the break and int vectors to point to ou
   95 MACRO             		LDA #<UserIntHandler
   96 MACRO             		STA CPU_IRQ
   97 MACRO             		LDA #>UserIntHandler
   98 MACRO             		STA CPU_IRQ+1
   99 MACRO             
  100 MACRO             		LDX #8*2-1
  101 MACRO             ??	.= *
  102 MACRO             		  LDA #>IntReturn
  103 MACRO             		  STA ?0,X
  104 MACRO             		  DEX
  105 MACRO             		  LDA #<IntReturn
  106 MACRO             		  STA ?0,X
  107 MACRO             		  DEX
  108 MACRO             		 BPL ??
  109 MACRO             
  110 MACRO             	  #IFDEF BRK_USER
  111 MACRO             		LDA CPU_NMI
  112 MACRO             		STA BRK_vector+2
  113 MACRO             		LDA CPU_NMI+1
  114 MACRO             		STA BRK_vector+3
  115 MACRO             	  #ENDIF ; of #IFDEF BRK_USER
  116 MACRO             
  117 MACRO             	  #IFDEF SERIALPORT_USER
  118 MACRO             		lda #TXOPEN
  119 MACRO             		sta SERCTL
  120 MACRO             		lda #SERIAL_INT
  121 MACRO             		sta INTRST
  122 MACRO             	  #ENDIF
  123 MACRO             
  124                   	#ENDMACRO
  125                   
  126                   
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   18
                        6502:macros/sys.mac             14:53:39  

  127                   	#MACRO SET_BRK
  128 MACRO             		LDA #<?0
  129 MACRO             		STA BRK_vector+2
  130 MACRO             		LDA #>?0
  131 MACRO             		STA BRK_vector+3
  132 MACRO             		LDA #$EA	; nop
  133 MACRO             		STA BRK_vector
  134                   	#ENDMACRO
  135                   
  136                   
  137                   	#MACRO RESET_TIMEOUT
  138 MACRO             		STZ TimeoutCount+1	; else reset timeout counter
  139 MACRO             		STZ TimeoutCount+2
  140                   	#ENDMACRO
  141                   
  142                   
  143                   	#MACRO ECHO_VALUE
  144 MACRO             		.ECHO "Value of ?0 is ?%d0 ($?%x0)"
  145                   	#ENDMACRO
  146                   
  147                   
   83                   	.IN 6502:macros/sprite.mac
    1                   ; Tue Sep 18 16:53:24 1990
    2                   * == sprite.mac ======================================
    3                   *
    4                   * Sprite Rendering Macros  --  Handy Software
    5                   *
    6                   * Confidential and Proprietary
    7                   * Copyright (C) 1988, Epyx, Inc.
    8                   *
    9                   * Date		Name		Description
   10                   * ---------	--------------	---------------------------
   11                   * 18-Sep-90	SHL		Added code to work around RICOH bug
   12                   *				and support for the NO_RICOH_PATCH switch
   13                   * 7-Feb-90	SHL		Removed Apple emulation compatibility
   14                   *				Shortened INITSUZY (removed unneeded STZs)
   15                   *				Shortened WAITSUZY (removed NOPs)
   16                   * 8 May 89	-RJ		Rewrote the SPRITES macro to use the f
   17                   *				of the new assembler, added the RESPRITE macro
   18                   * 6 Apr 89	-RJ		Moved SPRSYS init out of INITSUZY into
   19                   * 2 Feb 89	James Donald	Fix to WAITSUZY macro makes BC
   20                   *				to the correct location
   21                   * 26 Jan 89	-RJ		Incorporated Steve's WAITSUZY change,
   22                   *				rid of all references to Interruptus
   23                   * 18 Jan 89	-RJ		INITSUZY nows initializes SPRSYS and
   24                   *				SPRSYS_RAM to zero
   25                   * 16 Jan 89	SHL		Modified WAITSUZY to wait until SUZY 
   26                   *				instead of waiting for interrupts to not
   27                   *				happen.
   28                   * 30 Dec 88	-RJ		Changed errant #<?0 to #>?0 in SPRITE
   29                   *				Non-HANDYIO SPRITES macro no longer sets a
   30                   *				DISPLAY-request bit in X register
   31                   *				Moved WAITSUZY above SPRITES
   32                   * 26 Dec 88	-RJ		Added INITSUZY and WAITSUZY macros
   33                   * 24 Dec 88	-RJ		Got rid of the PSPRITE macro.  Redefi
   34                   *				SPRITES so that it doesn't automatically do
   35                   *				a DISPLAY anymore.
   36                   * Early 88	=RJ Mical=	Created this file!
   37                   *
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   19
                        6502:macros/sprite.mac          14:53:39  

   38                   * ====================================================
   39                   
   40                   
   41                   
   42                   * The INITSUZY macro sets up Suzy to do sprites correc
   43                   * to render sprites (which you do with the SPRITES mac
   44                   * the INITSUZY macro first
   45                   		#MACRO	INITSUZY
   46 MACRO             		LDA	#$F3
   47 MACRO             		STA	SPRINIT
   48 MACRO             		LDA	#$7F
   49 MACRO             		STA	HSIZOFFL
   50 MACRO             		STA	VSIZOFFL
   51 MACRO             		LDA	#$01
   52 MACRO             		STA	SUZYBUSEN
   53 MACRO             		STZ	SDONEACK
   54                   		#ENDMACRO
   55                   
   56                   
   57                   
   58                   * The WAITSUZY macro allows us to wait for Suzy to be 
   59                   * 16-Jan-89 - SHL - modified to wait until SUZY is fin
   60                   * politely if she is done yet.
   61                   * NOTE:  this macro now presumes that the SPRITEWORKIN
   62                   * is bit 0.
   63                   
   64      FALSE        	#IFDEF NO_RICOH_PATCH
   75                   	#ELSE
   76                   
   77                   		#MACRO	WAITSUZY
   78 MACRO             ??1	.= *
   79 MACRO             		lda #SUZY_SPACE
   80 MACRO             		tsb MAPCTL		; disable SUZY addresses
   81 MACRO             		STZ	CPUSLEEP
   82 MACRO             		trb MAPCTL		; reenable SUZY addresses
   83 MACRO             		LDA	SPRSYS		; check to see if SUZY is done
   84 MACRO             		LSR	A		; get bit 0 into carry
   85 MACRO             		BCS	??1		; nope, let's wait some more
   86 MACRO             		STZ	SDONEACK
   87                   		#ENDMACRO
   88                   
   89                   	#ENDIF ;DEF NO_RICOH_PATCH
   90                   
   91                   
   92                   
   93                   * The SPRITES macro causes sprites to be rendered star
   94                   * sprite address arg.
   95                   *
   96                   * If you are going to render more than one sprite list
   97                   * display, you should use the SPRITES macro for the fi
   98                   * the RESPRITE macro for all following lists.
   99                   *
  100                   * Note that this macro does not cause the buffer to be
  101                   * the buffer displayed, you need to use a display macr
  102                   *
  103                   * The first arg is an address of either the first SCB 
  104                   * the address of a variable that contains the address 
  105                   * The second arg to the SPRITES macro describes whethe
  106                   * an absolute or indirect SCB address.
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   20
                        6502:macros/sprite.mac          14:53:39  

  107                   * The second arg should be 0 or 1, standing for:
  108                   *     0 = first arg is the address is the first SCB to
  109                   *     1 = first arg is the addr of a variable pointing
  110                   		#MACRO	SPRITES
  111 MACRO             		#IF	?1 <> 0
  112 MACRO             		  LDA	?0
  113 MACRO             		  STA	SCBNEXTL
  114 MACRO             		  LDA	?0+1
  115 MACRO             		  STA	SCBNEXTH
  116 MACRO             		#ELSE
  117 MACRO             		  LDA	#<?0
  118 MACRO             		  STA	SCBNEXTL
  119 MACRO             		  LDA	#>?0
  120 MACRO             		  STA	SCBNEXTH
  121 MACRO             		#ENDIF
  122 MACRO             
  123 MACRO             		LDA	RenderBuffer
  124 MACRO             		STA	VIDBASL
  125 MACRO             		LDA	RenderBuffer+1
  126 MACRO             		STA	VIDBASH
  127 MACRO             
  128 MACRO             		STZ	SDONEACK
  129 MACRO             
  130 MACRO             		LDA	#$01
  131 MACRO             		STA	SPRGO
  132 MACRO             		WAITSUZY
  133                   		#ENDMACRO
  134                   
  135                   
  136                   
  137                   * The RESPRITE macro causes sprites to be rendered sta
  138                   * sprite address arg.  This macro should be used by th
  139                   * want to render more than one sprite list when buildi
  140                   * This macro is identical to the SPRITES macro except 
  141                   * startup code isn't included.  You should call You sh
  142                   * RESPRITE macro only after a call to the SPRITES macr
  143                   *
  144                   * Note that this macro does not cause the buffer to be
  145                   * the buffer displayed, you need to use a display macr
  146                   *
  147                   * The first arg is an address of either the first SCB 
  148                   * the address of a variable that contains the address 
  149                   * The second arg to the SPRITES macro describes whethe
  150                   * an absolute or indirect SCB address.
  151                   * The second arg should be 0 or 1, standing for:
  152                   *     0 = first arg is the address is the first SCB to
  153                   *     1 = first arg is the addr of a variable pointing
  154                   		#MACRO	RESPRITE
  155 MACRO             		#IF	?1 <> 0
  156 MACRO             		  LDA	?0
  157 MACRO             		  STA	SCBNEXTL
  158 MACRO             		  LDA	?0+1
  159 MACRO             		  STA	SCBNEXTH
  160 MACRO             		#ELSE
  161 MACRO             		  LDA	#<?0
  162 MACRO             		  STA	SCBNEXTL
  163 MACRO             		  LDA	#>?0
  164 MACRO             		  STA	SCBNEXTH
  165 MACRO             		#ENDIF
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   21
                        6502:macros/sprite.mac          14:53:39  

  166 MACRO             
  167 MACRO             		STZ	SDONEACK
  168 MACRO             
  169 MACRO             		LDA	#$01
  170 MACRO             		STA	SPRGO
  171 MACRO             		WAITSUZY
  172                   		#ENDMACRO
  173                   
  174                   
  175                   
   84                   	.IN 6502:macros/display.mac
    1                   ; Tuesday 27-Mar-90 10:58:38
    2                   * === display.mac ====================================
    3                   *
    4                   * Display Macros  --  Handy Software
    5                   *
    6                   * Confidential and Proprietary
    7                   * Copyright (c) 1988,1989,1990 Epyx, Inc.
    8                   *
    9                   * Date		Name		Description
   10                   * ---------	--------------	---------------------------
   11                   * 27-Mar-90	SHL		Removed BufferAddrL, BufferAddrH
   12                   * 20-Mar-90	SHL		SETDISP... macros no longer SEI/CLI a
   13                   *				be invoked when IRQs disabled
   14                   *				Tightened up WAITEOF, WAITNEOF macros
   15                   * 7-Mar-90	SHL		Removed the DISPLAY_ON and DISPLAY_OFF
   16                   *				Moved initialization of DISPCTL_RAM to INITSYS
   17                   *				in sys.mac
   18                   * 27-Feb-90	SHL		Removed unnecessary STZs from HOFF8,V
   19                   * 26-Feb-90	SHL		Minor code tightening
   20                   * 9-Feb-90	SHL		Removed all references to HFIX1
   21                   * 7-Feb-90	SHL		Removed Apple emulation compatibility
   22                   *				General cleanup and prettification
   23                   * 31 May 89	Larry Abel	Changed WAITEOF and WAITEOL to 
   24                   * 27 Apr 89	RG Goudy	Changed SETDISP_50 PCOUNT to $31
   25                   * 19 Apr 89	-RJ		DISPCTL bit definitions now used
   26                   * 6 Apr 89	-RJ		Added SETDISP_75
   27                   * 19 Mar 89	-RJ		Added HFIX1 macros to SETDISP
   28                   * 16 Mar 89	-RJ		Changed the DISPLAY macro to remove t
   29                   *				forward reference to DisplayBuffer forbidden
   30                   *				by the new assembler
   31                   * 13 Feb 89	-RJ		Added JSR InitDisplayer to SETDISP wh
   32                   *				EOF_USER isn't defined.  Also, removed the
   33                   *				invocation of DISPLAY from DBUF_DISPLAY.
   34                   *				DISPLAY now happens during EOF processing.
   35                   *				Because of this, the EOF interrupt is now
   36                   *				always turned on even if not EOF_USER.
   37                   *				DBUF_DISPLAY now writes RenderBuffer to
   38                   *				DisplayBuffer.  DISPLAY now reads from there.
   39                   * 26 Jan 89	-RJ		Deleted SETDISP_30/25/20/15/10 macros
   40                   * 16 Jan 89	SHL		Modified SETDISP macro to only enable
   41                   *				interrupts needed according to the EOF_USER
   42                   *				and EOL_USER flags
   43                   * 5 Jan 89	-RJ		Set interrupt disable before writing t
   44                   *				display hardware addresses.
   45                   *				Removed writing of DISPCTL from FLIP macro.
   46                   *				Added writing of DISPCTL to DISPLAY macro.
   47                   * 30 Dec 88	-RJ		Moved DISPLAY macro to top of DBUF_DI
   48                   *				rid of redundant assignment there
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   22
                        6502:macros/display.mac         14:53:39  

   49                   * 28 Dec 88	-RJ		Changed SETCOLL to store to COLLBASL,
   50                   * 27 Dec 88	-RJ		Added DISPLAY, DISP_AX, DISP_AY,
   51                   *				SETDISP_20/15/10
   52                   * 24-Dec-88	-RJ		Renamed DISPLAY to DBUF_DISPLAY.  Cha
   53                   *				ptr references to sysptr
   54                   * 23-Dec-88	-RJ		Modified the DISPLAY macro to support
   55                   *				Added RGB16_I macro.
   56                   * 22-Dec-88	-RJ		Added many display macros:  SETDISP_6
   57                   *				SETDISP, SETDBUF, SETCOLL, DISPLAY_ON,
   58                   *				DISPLAY_OFF, INITEOF, WAITEOF, and FLIP.
   59                   * Early 88	=RJ Mical=	Created this file!
   60                   *
   61                   * ====================================================
   62                   
   63                   
   64                   
   65                   * The SETDISP macro sets up the horizontal and vertica
   66                   * (thereby defining the frame rate) and sets the magic
   67                   * initializes the DISPCTL_RAM shadow mask of the hardw
   68                   * The macro expects 5 arguments:
   69                   *     - the backup value for the horizontal timer
   70                   *     - the control bits for the horiz timer
   71                   *     - the backup value for the vertical timer
   72                   *     - the control bits for the vertical timer
   73                   *     - the magic 'P' value
   74                   		#MACRO	SETDISP
   75 MACRO             
   76 MACRO             		LDA	#?0
   77 MACRO             		STA	HCOUNT+TIM_BACKUP
   78 MACRO             	#IFDEF EOL_USER
   79 MACRO             		lda #?1|%10000000
   80 MACRO             	#ELSE
   81 MACRO             		lda #?1&%01111111
   82 MACRO             	#ENDIF
   83 MACRO             		STA	HCOUNT+TIM_CONTROLA
   84 MACRO             		LDA	#?2
   85 MACRO             		STA	VCOUNT+TIM_BACKUP
   86 MACRO             		lda #?3|%10000000
   87 MACRO             		STA	VCOUNT+TIM_CONTROLA
   88 MACRO             
   89 MACRO             		LDA	#?4
   90 MACRO             		STA	PBKUP
   91 MACRO             	#IFNDEF	EOF_USER
   92 MACRO             		JSR	InitDisplayer
   93 MACRO             	#ENDIF
   94                   		#ENDMACRO
   95                   
   96                   
   97                   
   98                   * These macros allow you to easily set up a 'standard'
   99                   		#MACRO SETDISP_75
  100 MACRO             		SETDISP	$7E,$98,$68,$9F,$20
  101                   		#ENDMACRO
  102                   
  103                   		#MACRO SETDISP_60
  104 MACRO             		SETDISP	$9E,$98,$68,$9F,$29
  105                   		#ENDMACRO
  106                   
  107                   		#MACRO SETDISP_50
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   23
                        6502:macros/display.mac         14:53:39  

  108 MACRO             		SETDISP	$BD,$98,$68,$9F,$31
  109                   		#ENDMACRO
  110                   
  111                   
  112                   
  113                   * The SETDBUF macro sets up the systems awareness of t
  114                   * to use for the display.  The macro wants two argumen
  115                   * the two buffers you will be using for your displays.
  116                   * the two buffers by calling this macro, DBUF_DISPLAY 
  117                   * do all the double-buffer display work for you automa
  118                   * At any time after calling this routine, the address 
  119                   * off-display buffer can be found in the variable Rend
  120                   		#MACRO	SETDBUF
  121 MACRO             		LDA	#<?0
  122 MACRO             		STA	RenderBuffer
  123 MACRO             		LDA	#>?0
  124 MACRO             		STA	RenderBuffer+1
  125 MACRO             		LDA	#<?1
  126 MACRO             		STA	DisplayBuffer
  127 MACRO             		LDA	#>?1
  128 MACRO             		STA	DisplayBuffer+1
  129 MACRO             		STZ	DisplayFlags
  130                   		#ENDMACRO
  131                   
  132                   
  133                   * The SETCOLL macro sets up the hardware and system so
  134                   * hardware collisions for you.  The macro expects two 
  135                   * the address of your 8K collision buffer, and the off
  136                   * byte of your SCB to the SCB's collision depository b
  137                   		#MACRO	SETCOLL
  138 MACRO             		LDA	#<?0
  139 MACRO             		STA	COLLBASL
  140 MACRO             		LDA	#>?0
  141 MACRO             		STA	COLLBASH
  142 MACRO             		LDA	#<?1
  143 MACRO             		STA	COLLOFFL
  144 MACRO             		LDA	#>?1
  145 MACRO             		STA	COLLOFFH
  146                   		#ENDMACRO
  147                   
  148                   
  149                   
  150                   * The INITEOF macro is used to initialize the end-of-f
  151                   * You should invoke this macro only once, any time bef
  152                   * of WAITEOF.
  153      TRUE         	#IFDEF	EOF_USER
  154                   		#MACRO	INITEOF
  155 MACRO             		JSR	InitEOF
  156                   		#ENDMACRO
  157                   	#ENDIF
  158                   
  159                   
  160                   * The INITEOL macro is used to initialize the end-of-l
  161                   * You should invoke this macro only once, any time bef
  162                   * of WAITEOL.
  163      FALSE        	#IFDEF	EOL_USER
  167                   	#ENDIF
  168                   
  169                   
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   24
                        6502:macros/display.mac         14:53:39  

  170                   * The WAITEOF macro allows the programmer to wait unti
  171                   * hardware has just finished displaying the end-of-fra
  172                   * There's a short while (about 3 display lines of time
  173                   * hardware starts working on the first line of the new
  174                   * after end-of-frame it's safe to do stuff like change
  175                   * palette and things like that there
  176                   *??? Note that this macro currently provides only a cl
  177                   *??? EOF timing.  The EOF interrupt handler needs a bi
  178                   *??? get timing just right
  179                   		#MACRO	WAITEOF
  180 MACRO             		LDA	#DISPLAY_EOFFLAG
  181 MACRO             		TRB	DisplayFlags
  182 MACRO             systemp		.=	*
  183 MACRO             		BIT	DisplayFlags
  184 MACRO             		BEQ	systemp
  185                   		#ENDMACRO
  186                   
  187                   * The WAITNEOF macro waits until at least one EOF inte
  188                   * the last time the DISPLAY_EOFFLAG bit was reset
  189                   
  190                   		#MACRO	WAITNEOF
  191 MACRO             systemp		.=	*
  192 MACRO             		bit	DisplayFlags
  193 MACRO             		BPL	systemp		; assumes DISPLAY_EOFFLAG = $80
  194                   		#ENDMACRO
  195                   
  196                   
  197                   
  198                   * The WAITEOL macro allows the programmer to wait unti
  199                   * hardware has just finished displaying the end-of-lin
  200                   * There's a short while (many pixels of time) before t
  201                   * hardware starts working on the first pixel of the ne
  202                   * after end-of-line it's safe to do stuff like change 
  203                   * palette and things like that there
  204                   *??? Note that this macro currently provides only a cl
  205                   *??? EOL timing.  The EOL interrupt handler needs a bi
  206                   *??? get the timing just right
  207                   		#MACRO	WAITEOL
  208 MACRO             
  209 MACRO             		LDA	#DISPLAY_EOLFLAG
  210 MACRO             		TRB	DisplayFlags
  211 MACRO             systemp		.=	*
  212 MACRO             		BIT	DisplayFlags
  213 MACRO             		BEQ	systemp
  214                   		#ENDMACRO
  215                   
  216                   
  217                   		#MACRO	WAITNEOL
  218 MACRO             systemp		.=	*
  219 MACRO             		BIT	DisplayFlags
  220 MACRO             		BVC	systemp		; presumes that EOLFLAG equals $40
  221                   		#ENDMACRO
  222                   
  223                   
  224                   
  225                   * The FLIP macro does everything you need to flip the 
  226                   * The current orientation of the display should be tra
  227                   * code unless you happen to be rendering directly into
  228                   * can check the DISPLAY_SWAPFLAG of the DisplayFlags v
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   25
                        6502:macros/display.mac         14:53:39  

  229                   * whether or not the display is currently flipped.
  230                   		#MACRO	FLIP
  231 MACRO             		LDA	DISPCTL_RAM
  232 MACRO             		EOR	#DISP_FLIP
  233 MACRO             		STA	DISPCTL_RAM
  234 MACRO             		LDA	SPRSYS_RAM
  235 MACRO             		EOR	#LEFTHAND
  236 MACRO             		STA	SPRSYS_RAM
  237 MACRO             		STA	SPRSYS
  238                   		#ENDMACRO
  239                   
  240                   
  241                   
  242                   * The DBUF_DISPLAY macro does the double-buffering swa
  243                   * The macro causes the current offscreen buffer to be 
  244                   * as the buffer that will be displayed starting with t
  245                   * Also, it sets things up such that the current displa
  246                   * the new off-display rendering buffer that sprites wi
  247                   * with subsequent calls to SPRITES.
  248                   * Note that this macro doesn't swap the display buffer
  249                   * rather it sets things up for the buffers to be swapp
  250                   * the display is finished displaying the current on-di
  251                   * If you want to wait until just after the buffers are
  252                   * then you should use the WAITEOF macro immediately af
  253                   		#MACRO	DBUF_DISPLAY
  254 MACRO             ;!!! DISPLAY used to be called here in the DBUF macro.
  255 MACRO             ;!!! called during the end-of-frame handling
  256 MACRO             ;!!!		DISPLAY
  257 MACRO             
  258 MACRO             		PHP
  259 MACRO             		SEI
  260 MACRO             
  261 MACRO             
  262 MACRO             		;------	While still protected by the SEI,
  263 MACRO             		;------	copy RenderBuffer to DisplayBuffer
  264 MACRO             		LDA	RenderBuffer
  265 MACRO             		ldx	DisplayBuffer
  266 MACRO             		STA	DisplayBuffer
  267 MACRO             		stx	RenderBuffer
  268 MACRO             		LDA	RenderBuffer+1
  269 MACRO             		ldx	DisplayBuffer+1
  270 MACRO             		STA	DisplayBuffer+1
  271 MACRO             		stx	RenderBuffer+1
  272 MACRO             
  273 MACRO             		PLP
  274 MACRO             
  275                   		#ENDMACRO
  276                   
  277                   
  278                   
  279                   * The DISPLAY macro, after flipping DisplayBuffer as a
  280                   * state of FLIP, tells Handy hardware that DisplayBuff
  281                   * to be displayed
  282                   		#MACRO	DISPLAY
  283 MACRO             		LDA	DISPCTL_RAM
  284 MACRO             		STA	DISPCTL
  285 MACRO             		AND	#DISP_FLIP
  286 MACRO             		BEQ	??
  287 MACRO             		LDA	DisplayBuffer
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   26
                        6502:macros/display.mac         14:53:39  

  288 MACRO             		CLC
  289 MACRO             		ADC	#<DISPLAY_BUFSIZE-1
  290 MACRO             		TAX
  291 MACRO             		LDA	DisplayBuffer+1
  292 MACRO             		ADC	#>DISPLAY_BUFSIZE-1
  293 MACRO             		BRA	??2
  294 MACRO             ??
  295 MACRO             		LDX	DisplayBuffer
  296 MACRO             		LDA	DisplayBuffer+1
  297 MACRO             ??2
  298 MACRO             		DISP_AX
  299                   		#ENDMACRO
  300                   
  301                   
  302                   * The DISP_AX and DISP_AY macros set up the address co
  303                   * A (high-byte) and X or Y (low byte) as the next buff
  304                   * after the next end-of-frame
  305                   		#MACRO	DISP_AX
  306 MACRO             		PHP
  307 MACRO             		SEI
  308 MACRO             		STX	DISPADRL
  309 MACRO             		STA	DISPADRH
  310 MACRO             		PLP
  311                   		#ENDMACRO
  312                   
  313                   		#MACRO	DISP_AY
  314 MACRO             		PHP
  315 MACRO             		SEI
  316 MACRO             		STY	DISPADRL
  317 MACRO             		STA	DISPADRH
  318 MACRO             		PLP
  319                   		#ENDMACRO
  320                   
  321                   
  322                   
  323                   * The RGB_AXY macro presumes that you have Red, Green 
  324                   * registers A, X and Y respectively, and that you want
  325                   * to the color pen specified by the macro argument whe
  326                   * address of the GREEN register for the pen you want t
  327                   * Example setting pen 4 to yellow:
  328                   *     LDA     #$0F
  329                   *     LDX     #$0F
  330                   *     LDY     #$00
  331                   *     RGB_AXY GREEN4
  332                   		#MACRO	RGB_AXY
  333 MACRO             		STX	?0
  334 MACRO             		STA	sysptr
  335 MACRO             		TYA
  336 MACRO             		ASL
  337 MACRO             		ASL
  338 MACRO             		ASL
  339 MACRO             		ASL
  340 MACRO             		ORA	sysptr
  341 MACRO             		STA	?0+16
  342                   		#ENDMACRO
  343                   
  344                   
  345                   
  346                   * The RGB16 macros let you set up all the color regist
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   27
                        6502:macros/display.mac         14:53:39  

  347                   * One way or another, you supply to the macro with the
  348                   * that has an exact image of the sort of data that the
  349                   * registers expect, which is to say a table of 16 byte
  350                   * in the lower nybble your 16 green values,
  351                   * followed by a table of 16 bytes each with the upper 
  352                   * blue and the lower nybble containing red.
  353                   * The RGB16 macro expects an absolute address of the R
  354                   * The RGB16_I macro expects the address of a variable 
  355                   * the absolute address of the RGB table.
  356                   * Note that this macro presumes that 16 Green register
  357                   * sequentially by 16 BlueRed registers.
  358                   
  359                   		#MACRO	RGB16
  360 MACRO             		;------	Write the absolute address to sysptr
  361 MACRO             		LDA	#<?0
  362 MACRO             		STA	sysptr
  363 MACRO             		LDA	#>?0
  364 MACRO             		STA	sysptr+1
  365 MACRO             		;------	copy the palette
  366 MACRO             		LDY	#31
  367 MACRO             		LDA	(sysptr),Y
  368 MACRO             		STA	GREEN0,Y
  369 MACRO             		DEY
  370 MACRO             		BPL	*-6
  371                   		#ENDMACRO
  372                   
  373                   		#MACRO	RGB16_I
  374 MACRO             		LDA	?0
  375 MACRO             		STA	sysptr
  376 MACRO             		LDA	?0+1
  377 MACRO             		STA	sysptr+1
  378 MACRO             		;------	copy the palette
  379 MACRO             		LDY	#31
  380 MACRO             		LDA	(sysptr),Y
  381 MACRO             		STA	GREEN0,Y
  382 MACRO             		DEY
  383 MACRO             		BPL	*-6
  384                   		#ENDMACRO
  385                   
  386                   
  387                   
  388                   * The HOFF and VOFF macros set up the HOFF and VOFF fo
  389                   * display list rendering.
  390                   * HOFF8 and VOFF8 are used with 8-bit positioning wher
  391                   * is in A (the upper byte is set to zero for you)
  392                   *
  393                   * HOFF16 and VOFF16 are used with 16-bit positioning w
  394                   * your offset value is in A, the upper byte is in Y
  395                   		#MACRO	HOFF8
  396 MACRO             		STA	HOFFL
  397                   		#ENDMACRO
  398                   
  399                   		#MACRO	VOFF8
  400 MACRO             		STA	VOFFL
  401                   		#ENDMACRO
  402                   
  403                   		#MACRO	HOFF16
  404 MACRO             		STA	HOFFL
  405 MACRO             		STY	HOFFH
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   28
                        6502:macros/display.mac         14:53:39  

  406                   		#ENDMACRO
  407                   
  408                   		#MACRO	VOFF16
  409 MACRO             		STA	VOFFL
  410 MACRO             		STY	VOFFH
  411                   		#ENDMACRO
  412                   
  413                   
  414                   
  415                   * If AUTO_TIMEOUT_USER is defined, then add body to th
  416      FALSE        	  #IFDEF AUTO_TIMEOUT_USER
  445                   	  #ELSE
  446                   	    #MACRO TIMEOUT
  447                   	    #ENDM
  448                   	  #ENDIF
  449                   
  450                   
  451                   
   85                   	.IN 6502:macros/controls.mac
    1                   
    2                   * === controls.mac ===================================
    3                   * 
    4                   * Apple Joystick / Switches Input Macros  --  Handy So
    5                   * 
    6                   * Confidential and Proprietary
    7                   * Copyright (C) 1988, 1989, Epyx, Inc.
    8                   * 
    9                   * Date		Name		Description
   10                   * ---------	--------------	---------------------------
   11                   * 7-Feb-90	SHL		Removed Apple emulation compatibility
   12                   *				Removed GETINPUT
   13                   * 3 July 89	-RJ		The RESET_TIMEOUT logic is moved from
   14                   *				input macros to the display TIMEOUT macro
   15                   * 15 Jun 89	Carl Mey	Modified GETSWITCH to test PAUSE_
   16                   * 24 May 89	-RJ		Added AUTO_TIMEOUT_USER support code
   17                   *  2 Jan 89	-RJ		Added GETINPUT, which you must call b
   18                   *				GETJOY and/or GETSWITCH.
   19                   * Mid 88	=RJ Mical=	Created this file!
   20                   * 
   21                   * ====================================================
   22                   
   23                   
   24                   
   25                   	#MACRO GETJOY
   26 MACRO             	  LDA JOYSTICK
   27                   	#ENDMACRO
   28                   
   29                   
   30                   
   31                   	#MACRO GETSWITCH
   32 MACRO             	  LDA SWITCHES
   33                   	#ENDMACRO
   34                   
   35                   
   36                   
   86                   	.IN 6502:macros/handymath.mac
    1                   
    2                   * === handymath.mac ==================================
    3                   *
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   29
                        6502:macros/handymath.mac       14:53:39  

    4                   * Handy Math Macros  --  Handy Software
    5                   *
    6                   * Confidential and Proprietary
    7                   * Copyright (C) 1988, Epyx, Inc.
    8                   *
    9                   * Date		Name		Description
   10                   * ---------	--------------	---------------------------
   11                   * 9-Feb-90	SHL		Removed Apple emulation compatibility
   12                   *				Removed all references to HANDYMATH
   13                   * 2 Jan 89	-RJ		Changed HANDYMATH so that it must be d
   14                   *				0 = Handy hardware exists, so use it
   15                   *				1 = Use Handy math software
   16                   *				2 = Use math software with fast fat multiply
   17                   * 30-Dec-88	=RJ Mical=	Changed define throughout file 
   18                   *				HANDYMATH rather than HANDYIO to be defined
   19                   *				to use Handy math hardware or fake software
   20                   * Late 88	=RJ Mical=	Created this file!
   21                   *
   22                   * ====================================================
   23                   
   24                   
   25                   * The WAITMATH macro is used if you don't have anythin
   26                   * Suzy is executing your math.  You must wait for Suzy
   27                   * reading the results, but you don't have to wait if y
   28                   * else to do in the meanwhile.
   29                   	#MACRO WAITMATH
   30 MACRO             ??0	.= *
   31 MACRO             	BIT SPRSYS
   32 MACRO             	BMI ??0
   33                   	#ENDM
   34                   
   35                   
   36                   * If you are doing multiply-and-accumulate, you need t
   37                   * to some known state.  If you want the accumulator se
   38                   * the CLEARACCUM macro.  This macro is good because it
   39                   * the autoreset math register scheme when your code is
   40                   	#MACRO CLEARACCUM
   41 MACRO             	STZ MATHK
   42 MACRO             	STZ MATHM
   43                   	#ENDM
   44                   
   45                   
   46                   
   87                   	.IN 6502:macros/hprint.mac
    1                   
    2                   * === hprint.mac =====================================
    3                   *
    4                   * HandyPrint Macros  --  Handy Software
    5                   *
    6                   * Confidential and Proprietary
    7                   * Copyright (C) 1989, Epyx, Inc.
    8                   *
    9                   * Date		Name		Description
   10                   * ---------	--------------	---------------------------
   11                   * 26-Feb-90	SHL		Minor code tightening
   12                   * 29 May 89	Omi and Mical	Cleaned up to use new assemb
   13                   *				The new HPR_CHARSET macro is a laugh
   14                   * 17 Mar 89	-RJ		.CHARSET is .CSET when ASM.VERSION is
   15                   * 16 Mar 89	-RJ		Got rid of an extraneous #ENDIF in HP
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   30
                        6502:macros/hprint.mac          14:53:39  

   16                   * 8-Jan-89	=RJ Mical=	Created this file!
   17                   *
   18                   * ====================================================
   19                   
   20                   
   21                   
   22                   * The INITLIT macro initializes an Handy Print buffer 
   23                   * sprite bufer.  After this macro has been invoked, ea
   24                   * an offset to the next line of the buffer, and the la
   25                   * to 0.  The buffer is presumed to be Width (as specif
   26                   * FONT_HEIGHT plus 1 big.
   27                   * The first argument specifies the address of the buff
   28                   * The second argument specifies the byte-width of each
   29                   * NOTE:  the buffer line width includes the sprite dat
   30                   * which means that the number of characters you can pr
   31                   * buffer line width minus one.  For a full-screen widt
   32                   * width of 21 (20 characters * 8 per character equals 
   33                   	#MACRO INITLIT
   34 MACRO             	LDA #<?0
   35 MACRO             	LDX #>?0
   36 MACRO             	STA sysptr
   37 MACRO             	STX sysptr+1
   38 MACRO             	LDX #FONT_HEIGHT
   39 MACRO             ??	.= *
   40 MACRO             	  lda #?1
   41 MACRO             	  STA (sysptr)
   42 MACRO             	  CLC
   43 MACRO             	  ADC sysptr
   44 MACRO             	  STA sysptr
   45 MACRO             	  bcc ??1
   46 MACRO             	  inc sysptr+1
   47 MACRO             ??1	.= *
   48 MACRO             	  DEX
   49 MACRO             	 BNE ??
   50 MACRO             	LDA #0
   51 MACRO             	STA (sysptr)
   52                   	#ENDMACRO
   53                   
   54                   
   55                   
   56                   * The HPRFONT macro causes the FontBase variable to be
   57                   * the pieces of the desired font to be loaded.  If you
   58                   * HPRINT either you use HPRFONT or you take all the st
   59                   * The first argument should be a text string describin
   60                   * (the normal system font is named "plain").
   61                   * ??? NOTE:  currently only supports FONT_HEIGHT of 7
   62                   
   63                   	#MACRO HPRFONT
   64 MACRO             FontBase  ;-- Load in only the font pieces requested b
   65 MACRO             	    .IN 6502:fonts/?0_space7.src
   66 MACRO             	  #IF {FONT_TYPE&HPR_DIGIT} <> 0
   67 MACRO             	    .IN 6502:fonts/?0_digit7.src
   68 MACRO             	  #ENDIF
   69 MACRO             	  #IF {FONT_TYPE&HPR_UPPER} <> 0
   70 MACRO             	    .IN 6502:fonts/?0_upper7.src
   71 MACRO             	  #ENDIF
   72 MACRO             	  #IF {FONT_TYPE&HPR_LOWER} <> 0
   73 MACRO             	    .IN 6502:fonts/?0_lower7.src
   74 MACRO             	  #ENDIF
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   31
                        6502:macros/hprint.mac          14:53:39  

   75 MACRO             	  #IF {FONT_TYPE&HPR_PUNC} <> 0
   76 MACRO             	    .IN 6502:fonts/?0_punc7.src
   77 MACRO             	  #ENDIF
   78 MACRO             	  #IF {FONT_TYPE&HPR_OTHER} <> 0
   79 MACRO             	    .IN 6502:fonts/?0_other7.src
   80 MACRO             	  #ENDIF
   81 MACRO             	    .IN 6502:fonts/?0_nix7.src
   82                   	#ENDMACRO
   83                   
   84                   
   85                   
   86                   * The HPR_CHARSET macro is used to specify that you wa
   87                   * character set to be used for your ASCII characters. 
   88                   * character set will match the character positions gen
   89                   * call to the HPRFONT macro.
   90                   * Here, we load in a character set that contains the A
   91                   * according to the font requests of the user.  Note th
   92                   * ASCII is translated into the NIXFONT character
   93                   
   94                   	#MACRO HPR_CHARSET
   95 MACRO             	  #IF {FONT_TYPE&HPR_OTHER} != 0
   96 MACRO             	    #IF {FONT_TYPE&HPR_PUNC} != 0
   97 MACRO             	      #IF {FONT_TYPE&HPR_LOWER} != 0
   98 MACRO             	        #IF {FONT_TYPE&HPR_UPPER} != 0
   99 MACRO             	          #IF {FONT_TYPE&HPR_DIGIT} != 0
  100 MACRO             	            ;-- HPR_OTHER+HPR_PUNC+HPR_LOWER+HPR_UPPE
  101 MACRO             	            .CS 6502:fonts/cset_1f.src
  102 MACRO             	          #ELSE
  103 MACRO             	            ;-- HPR_OTHER+HPR_PUNC+HPR_LOWER+HPR_UPPE
  104 MACRO             	            .CS 6502:fonts/cset_1e.src
  105 MACRO             	          #ENDIF
  106 MACRO             	        #ELSE
  107 MACRO             	          #IF {FONT_TYPE&HPR_DIGIT} != 0
  108 MACRO             	            ;-- HPR_OTHER+HPR_PUNC+HPR_LOWER+HPR_DIGI
  109 MACRO             	            .CS 6502:fonts/cset_1d.src
  110 MACRO             	          #ELSE
  111 MACRO             	            ;-- HPR_OTHER+HPR_PUNC+HPR_LOWER
  112 MACRO             	            .CS 6502:fonts/cset_1c.src
  113 MACRO             	          #ENDIF
  114 MACRO             	        #ENDIF
  115 MACRO             	      #ELSE
  116 MACRO             	        #IF {FONT_TYPE&HPR_UPPER} != 0
  117 MACRO             	          #IF {FONT_TYPE&HPR_DIGIT} != 0
  118 MACRO             	            ;-- HPR_OTHER+HPR_PUNC+HPR_UPPER+HPR_DIGI
  119 MACRO             	            .CS 6502:fonts/cset_1b.src
  120 MACRO             	          #ELSE
  121 MACRO             	            ;-- HPR_OTHER+HPR_PUNC+HPR_UPPER
  122 MACRO             	            .CS 6502:fonts/cset_1a.src
  123 MACRO             	          #ENDIF
  124 MACRO             	        #ELSE
  125 MACRO             	          #IF {FONT_TYPE&HPR_DIGIT} != 0
  126 MACRO             	            ;-- HPR_OTHER+HPR_PUNC+HPR_DIGIT
  127 MACRO             	            .CS 6502:fonts/cset_19.src
  128 MACRO             	          #ELSE
  129 MACRO             	            ;-- HPR_OTHER+HPR_PUNC
  130 MACRO             	            .CS 6502:fonts/cset_18.src
  131 MACRO             	          #ENDIF
  132 MACRO             	        #ENDIF
  133 MACRO             	      #ENDIF
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   32
                        6502:macros/hprint.mac          14:53:39  

  134 MACRO             	    #ELSE
  135 MACRO             	      #IF {FONT_TYPE&HPR_LOWER} != 0
  136 MACRO             	        #IF {FONT_TYPE&HPR_UPPER} != 0
  137 MACRO             	          #IF {FONT_TYPE&HPR_DIGIT} != 0
  138 MACRO             	            ;-- HPR_OTHER+HPR_LOWER+HPR_UPPER+HPR_DIG
  139 MACRO             	            .CS 6502:fonts/cset_17.src
  140 MACRO             	          #ELSE
  141 MACRO             	            ;-- HPR_OTHER+HPR_LOWER+HPR_UPPER
  142 MACRO             	            .CS 6502:fonts/cset_16.src
  143 MACRO             	          #ENDIF
  144 MACRO             	        #ELSE
  145 MACRO             	          #IF {FONT_TYPE&HPR_DIGIT} != 0
  146 MACRO             	            ;-- HPR_OTHER+HPR_LOWER+HPR_DIGIT
  147 MACRO             	            .CS 6502:fonts/cset_15.src
  148 MACRO             	          #ELSE
  149 MACRO             	            ;-- HPR_OTHER+HPR_LOWER
  150 MACRO             	            .CS 6502:fonts/cset_14.src
  151 MACRO             	          #ENDIF
  152 MACRO             	        #ENDIF
  153 MACRO             	      #ELSE
  154 MACRO             	        #IF {FONT_TYPE&HPR_UPPER} != 0
  155 MACRO             	          #IF {FONT_TYPE&HPR_DIGIT} != 0
  156 MACRO             	            ;-- HPR_OTHER+HPR_UPPER+HPR_DIGIT
  157 MACRO             	            .CS 6502:fonts/cset_13.src
  158 MACRO             	          #ELSE
  159 MACRO             	            ;-- HPR_OTHER+HPR_UPPER
  160 MACRO             	            .CS 6502:fonts/cset_12.src
  161 MACRO             	          #ENDIF
  162 MACRO             	        #ELSE
  163 MACRO             	          #IF {FONT_TYPE&HPR_DIGIT} != 0
  164 MACRO             	            ;-- HPR_OTHER+HPR_DIGIT
  165 MACRO             	            .CS 6502:fonts/cset_11.src
  166 MACRO             	          #ELSE
  167 MACRO             	            ;-- HPR_OTHER
  168 MACRO             	            .CS 6502:fonts/cset_10.src
  169 MACRO             	          #ENDIF
  170 MACRO             	        #ENDIF
  171 MACRO             	      #ENDIF
  172 MACRO             	    #ENDIF
  173 MACRO             	  #ELSE ; no HPR_OTHER
  174 MACRO             	    #IF {FONT_TYPE&HPR_PUNC} != 0
  175 MACRO             	      #IF {FONT_TYPE&HPR_LOWER} != 0
  176 MACRO             	        #IF {FONT_TYPE&HPR_UPPER} != 0
  177 MACRO             	          #IF {FONT_TYPE&HPR_DIGIT} != 0
  178 MACRO             	            ;-- HPR_PUNC+HPR_LOWER+HPR_UPPER+HPR_DIGI
  179 MACRO             	            .CS 6502:fonts/cset_0f.src
  180 MACRO             	          #ELSE
  181 MACRO             	            ;-- HPR_PUNC+HPR_LOWER+HPR_UPPER
  182 MACRO             	            .CS 6502:fonts/cset_0e.src
  183 MACRO             	          #ENDIF
  184 MACRO             	        #ELSE
  185 MACRO             	          #IF {FONT_TYPE&HPR_DIGIT} != 0
  186 MACRO             	            ;-- HPR_PUNC+HPR_LOWER+HPR_DIGIT
  187 MACRO             	            .CS 6502:fonts/cset_0d.src
  188 MACRO             	          #ELSE
  189 MACRO             	            ;-- HPR_PUNC+HPR_LOWER
  190 MACRO             	            .CS 6502:fonts/cset_0c.src
  191 MACRO             	          #ENDIF
  192 MACRO             	        #ENDIF
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   33
                        6502:macros/hprint.mac          14:53:39  

  193 MACRO             	      #ELSE
  194 MACRO             	        #IF {FONT_TYPE&HPR_UPPER} != 0
  195 MACRO             	          #IF {FONT_TYPE&HPR_DIGIT} != 0
  196 MACRO             	            ;-- HPR_PUNC+HPR_UPPER+HPR_DIGIT
  197 MACRO             	            .CS 6502:fonts/cset_0b.src
  198 MACRO             	          #ELSE
  199 MACRO             	            ;-- HPR_PUNC+HPR_UPPER
  200 MACRO             	            .CS 6502:fonts/cset_0a.src
  201 MACRO             	          #ENDIF
  202 MACRO             	        #ELSE
  203 MACRO             	          #IF {FONT_TYPE&HPR_DIGIT} != 0
  204 MACRO             	            ;-- HPR_PUNC+HPR_DIGIT
  205 MACRO             	            .CS 6502:fonts/cset_09.src
  206 MACRO             	          #ELSE
  207 MACRO             	            ;-- HPR_PUNC
  208 MACRO             	            .CS 6502:fonts/cset_08.src
  209 MACRO             	          #ENDIF
  210 MACRO             	        #ENDIF
  211 MACRO             	      #ENDIF
  212 MACRO             	    #ELSE
  213 MACRO             	      #IF {FONT_TYPE&HPR_LOWER} != 0
  214 MACRO             	        #IF {FONT_TYPE&HPR_UPPER} != 0
  215 MACRO             	          #IF {FONT_TYPE&HPR_DIGIT} != 0
  216 MACRO             	            ;-- HPR_LOWER+HPR_UPPER+HPR_DIGIT
  217 MACRO             	            .CS 6502:fonts/cset_07.src
  218 MACRO             	          #ELSE
  219 MACRO             	            ;-- HPR_LOWER+HPR_UPPER
  220 MACRO             	            .CS 6502:fonts/cset_06.src
  221 MACRO             	          #ENDIF
  222 MACRO             	        #ELSE
  223 MACRO             	          #IF {FONT_TYPE&HPR_DIGIT} != 0
  224 MACRO             	            ;-- HPR_LOWER+HPR_DIGIT
  225 MACRO             	            .CS 6502:fonts/cset_05.src
  226 MACRO             	          #ELSE
  227 MACRO             	            ;-- HPR_LOWER
  228 MACRO             	            .CS 6502:fonts/cset_04.src
  229 MACRO             	          #ENDIF
  230 MACRO             	        #ENDIF
  231 MACRO             	      #ELSE
  232 MACRO             	        #IF {FONT_TYPE&HPR_UPPER} != 0
  233 MACRO             	          #IF {FONT_TYPE&HPR_DIGIT} != 0
  234 MACRO             	            ;-- HPR_UPPER+HPR_DIGIT
  235 MACRO             	            .CS 6502:fonts/cset_03.src
  236 MACRO             	          #ELSE
  237 MACRO             	            ;-- HPR_UPPER
  238 MACRO             	            .CS 6502:fonts/cset_02.src
  239 MACRO             	          #ENDIF
  240 MACRO             	        #ELSE
  241 MACRO             	          #IF {FONT_TYPE&HPR_DIGIT} != 0
  242 MACRO             	            ;-- HPR_DIGIT
  243 MACRO             	            .CS 6502:fonts/cset_01.src
  244 MACRO             	          #ELSE
  245 MACRO             	            .ECHO ""
  246 MACRO             	            .ECHO "ERROR:  No font FONT_TYPES flags s
  247 MACRO             	            .ECHO ""
  248 MACRO             	          #ENDIF
  249 MACRO             	        #ENDIF
  250 MACRO             	      #ENDIF
  251 MACRO             	    #ENDIF
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   34
                        6502:macros/hprint.mac          14:53:39  

  252 MACRO             	  #ENDIF
  253                   	#ENDMACRO
  254                   
  255                   
  256                   * The HPRINT macro causes your text to be printed
  257                   * The first arg is the text pointer, which can point t
  258                   * depending on the value of the second arg.
  259                   * The second arg should be 0 or 1, standing for:
  260                   *     0 = first arg is the address of the text
  261                   *     1 = first arg is the address of a variable point
  262                   * The third arg is the address of your buffer, which s
  263                   * initialized as a completely-literal sprite buffer (s
  264                   
  265                   	#MACRO HPRINT
  266 MACRO             
  267 MACRO             	  #IF	?1 = 1
  268 MACRO             	    LDA ?0
  269 MACRO             	    STA	sysptr
  270 MACRO             	    LDA ?0+1
  271 MACRO             	    STA sysptr+1
  272 MACRO             	  #ELSE
  273 MACRO             	    LDA #<?0
  274 MACRO             	    STA sysptr
  275 MACRO             	    LDA #>?0
  276 MACRO             	    STA sysptr+1
  277 MACRO             	  #ENDIF
  278 MACRO             
  279 MACRO             	  LDA #<?2
  280 MACRO             	  STA TextPtr
  281 MACRO             	  LDA #>?2
  282 MACRO             	  STA TextPtr+1
  283 MACRO             	  JSR HandyPrint
  284 MACRO             
  285                   	#ENDMACRO
  286                   
  287                   
  288                   
   88                   
   89                   
   90                   ;=====================================================
   91                   
   92                   ; Absolute equates
   93                   
   94      0100         COUNTMAX .EQ 256		; initial value for iteration depth
   95                   
   96                   
   97                   ;=====================================================
   98                   
   99                   ; useful code macros
  100                   
  101                   	#MACRO STRUCT		; reset PC for structure template defi
  102 MACRO             LTemp	.= *
  103 MACRO             	.ORG 0
  104                   	#ENDM
  105                   
  106                   	#MACRO ENDSTRUCT	; restore PC after structure definit
  107 MACRO             	.ORG LTemp
  108                   	#ENDM
  109                   
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   35
                                                        14:53:39  

  110                   ;=====================================================
  111                   
  112                   ; Zero page variables
  113                   
  114                   
  115                   	BEGIN_ZPAGE
    1      FFFE       + TEMPORG	  .= *
    2 FFFE:           + 	  .ORG NEXTZPG
    3                 + 
  116                   
  117 0006:             MYZPSTART
  118                   
  119 0006:             ind0		.DS 2	; general indirects
  120 0008:             ind1		.DS 2
  121                   
  122 000A:             temp0		.DS 1	; general temporaries
  123 000B:             temp1		.DS 1
  124                   
  125 000C:             stick		.DS 1	; current reading of joystick
  126 000D:             edgestick	.DS 1	; current positive edge transitions of
  127 000E:             switch		.DS 1	; current reading of switches
  128                   
  129 000F:             xpos		.DS 1	; screen coordinate of zoom frame
  130 0010:             ypos		.DS 1
  131                   
  132 0011:             xindex		.DS 1	; screen coordinate of current pixel bei
  133 0012:             yindex		.DS 1
  134                   
  135 0013:             count		.DS 2	; current iteration depth count
  136 0015:             countmod15	.DS 1	; current depth count mod 15
  137 0016:             depth		.DS 2	; depth to which calculations are carried
  138                   
  139 0018:             x0		.DS 6	; Mandelbrot coordinate of current working p
  140 001E:             y0		.DS 6
  141 0024:             xn		.DS 6	; current calculation of Mandelbrot iteratio
  142 002A:             yn		.DS 6
  143 0030:             xsquare		.DS 6	; intermediate calculation values
  144 0036:             ysquare		.DS 6
  145                   
  146 003C:             factor1		.DS 6	; parameters for the 48x48 multiply rou
  147 0042:             factor2		.DS 6
  148 0048:             product		.DS 12
  149 0054:             negflag		.DS 1	; internal flag for multiply routine
  150                   
  151 0055:             acorner		.DS 6	; Mandelbrot coordinate of upper-left c
  152 005B:             bcorner		.DS 6
  153 0061:             step		.DS 6	; coordinate step increment between pixels
  154 0067:             xjul		.DS 6	; Julian set determinate
  155 006D:             yjul		.DS 6
  156                   
  157 0073:             juliaflag	.DS 1	; flag for whether we're in Mandelbrot
  158                   
  159 0074:             input		.DS 1	; joystick inputs monitored by EOF interr
  160 0075:             edgeinput	.DS 1
  161 0076:             edgeinputlatch	.DS 1
  162                   
  163 0077:             modeflag	.DS 1	; flag to signal return to calculation 
  164                   
  165 0078:             cyclemode	.DS 1	; color cycling mode
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   36
                                                        14:53:39  

  166 0079:             cyclemodesave	.DS 1	; backup of cyclemode
  167 007A:             cyclecount	.DS 1	; countdown register for color cyclin
  168 007B:             cyclerate	.DS 1	; speed of color cycling
  169                   
  170 007C:             frame		.DS 1	; vblank frame count
  171                   
  172 007D:             updateflag	.DS 1	; countdown flag, signals time to upa
  173                   
  174 007E:             palettenum	.DS 1	; which palette we are using
  175                   
  176 007F:             whichdigit	.DS 1	; which digit is the menu currently o
  177                   
  178 0080:             MYZPEND
  179                   
  180                   
  181                   	END_ZPAGE
    1      0080       + NEXTZPG	  .= *
    2      FALSE        	  #IF NEXTZPG > $0100
    4                 + 	  #ENDIF
    5 0080:           + 	  .ORG TEMPORG
    6                 + 
  182                   
  183                   ;=====================================================
  184                   
  185 FFFE:             	.OR $0200
  186                   
  187                   ;=====================================================
  188                   
  189                   ; Absolute address variables
  190                   
  191                   
  192 0200:             	.ALIGN 4
  193 0200:             screen0		.DS DISPLAY_BUFSIZE	; screen buffers
  194 21E0:             screen1		.DS DISPLAY_BUFSIZE
  195                   
  196                   
  197 41C0:             interrupt_buffer .DS 16			; timer interrupt vectors
  198                   
  199 41D0:             bigsprite	.DS 82*102+1		; screen sized literal sprite
  200                   
  201 627D:             textbuffer	.DS 20*FONT_HEIGHT+1	; literal text sprite 
  202                   
  203                   
  204 630A:             AbsVarsEnd
  205                   
  206                   ;=====================================================
  207                   
  208                   
  209                   start	.RUN
  210 630A:4C ** **     	jmp begin
  211                   
  212                   
  213                   ;=====================================================
  214                   
  215                   ; Standard handy source include files
  216                   
  217                   	.IN 6502:src/sysdata.src
    1                   ; Tuesday 27-Mar-90 10:58:04
    2                   * === sysdata.src ====================================
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   37
                        6502:src/sysdata.src            14:53:39  

    3                   * 
    4                   * System Data Allocations  --  the 6502 Side of Handy
    5                   * 
    6                   * Copyright (c) 1988,1990 Epyx, Inc.
    7                   * All Rights Reserved
    8                   * CONFIDENTIAL and PROPRIETARY
    9                   * 
   10                   * Date		Name		Description
   11                   * ---------	--------------	---------------------------
   12                   * 27-Mar-90	SHL		Removed BufferAddrL, BufferAddrH
   13                   * 22-Mar-90	SHL		Added INTSET_RAM shadow for IRQs
   14                   * 9-Feb-90	SHL		Removed Apple emulation compatibility
   15                   * 30 May 89	-RJ		Added IODAT_RAM
   16                   * 24 May 89	-RJ		Added AUTO_TIMEOUT_USER support code
   17                   * 20 Apr 89	-RJ		Added IODIR_RAM
   18                   * 19 Apr 89	-RJ		Moved DisplayFrameCount to display.sr
   19                   * 20 Mar 89	-RJ		Added DisplayFrameCount
   20                   * 13 Feb 89	-RJ		Added DisplayBuffer
   21                   * 26 Jan 88	-RJ		Ended Interruptus
   22                   * 24 Dec 88	-RJ		Added Interruptus
   23                   * 22 Dec 88	-RJ		Added DISPCTL_RAM, RenderBuffer, 
   24                   *				BufferAddrL/H, and DisplayFlags with its defs
   25                   *				Added note about .ORGing to non-zpage
   26                   * Early 88	=RJ Mical=	Created this file!
   27                   * 
   28                   * ====================================================
   29                   
   30                   
   31                   * NOTE  NOTE  NOTE  NOTE  NOTE  NOTE  NOTE  NOTE  NOTE
   32                   * 
   33                   * This file should be included before any of the 6502:
   34                   * 
   35                   * Note that you should .ORG to a non-zero page address
   36                   * this file.  This is because this file includes data 
   37                   * don't need to be in zero-page memory.
   38                   * 
   39                   * NOTE  NOTE  NOTE  NOTE  NOTE  NOTE  NOTE  NOTE  NOTE
   40                   
   41                   
   42                   * Here are the declarations of the local copies of wri
   43                   * (and read-doesn't-equal-write registers such as SPRS
   44                   * Whenever you want to make a change to one of the har
   45                   * that's write-only, you should read from this RAM cop
   46                   * and then write the value out to both the RAM copy an
   47 630D:             SPRSYS_RAM	.DS 1
   48 630E:             DISPCTL_RAM	.DS 1
   49 630F:             IODAT_RAM	.DS 1
   50 6310:             IODIR_RAM	.DS 1
   51                   
   52                   
   53                   * Display buffer pointers for use by the system displa
   54 6311:             RenderBuffer	.DS 2
   55 6313:             DisplayBuffer	.DS 2
   56                   
   57                   * Shadow of INTSET used in IRQ handler
   58 6315:             INTSET_RAM	.DS 1
   59                   
   60                   
   61      FALSE        	#IFDEF AUTO_TIMEOUT_USER
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   38
                        6502:src/sysdata.src            14:53:39  

   63                   	#ENDIF
   64                   
   65                   
   66                   * The DisplayFlags field is a field that may enjoy mul
   67                   * read-modify-write operations peformed by both interr
   68                   * Because of this, any code must make sure that interr
   69                   * beginning a read-modify-write cycle, or use the TSB/
   70 6316:             DisplayFlags	.DS	1
   71                   * Here's the definitions of DisplayFlags
   72      0080         DISPLAY_EOFFLAG		.EQ $80	; Set every EOF
   73      0040         DISPLAY_EOLFLAG		.EQ $40	; Set every EOL
   74                   
   75                   
   76                   
  218                   	.IN 6502:src/hprint.src
    1                   ; Monday 30-Jul-90 15:22:29
    2                   * == hprint.src ======================================
    3                   *
    4                   * HandyPrint Routines  --  Handy Software
    5                   *
    6                   * Confidential and Proprietary
    7                   * Copyright (C) 1989, Epyx, Inc.
    8                   *
    9                   * Date		Name		Description
   10                   * ---------	--------------	---------------------------
   11                   * 30-Jul-90	SHL		Added HprFontLo and HprFontHi labels 
   12                   *				patching of FontBase
   13                   * 7-Feb-90	SHL		Removed Apple emulation compatibility
   14                   * 18 Apr 89	SHL		Fixed a bug in Omi's bug-fix to MATHC
   15                   * 31-Mar-89	Greg Omi	Fixed hardware bug with MATHC for
   16                   * 9-Feb-89	=RJ Mical=	Created this file!
   17                   *
   18                   * ====================================================
   19                   
   20                   
   21 6317:             TextPtr		.DS	2
   22 6319:             TextWidth	.DS	1
   23 631A:             TextRemaining	.DS	1
   24                   
   25                   
   26                   
   27 631B:             HandyPrint
   28                   * This routine prints the text pointed to by sysptr in
   29                   * to by TextBuffer.  Expects TextBuffer to be a well-f
   30                   * sprite data buffer (you can create one using the INI
   31                   * HandyPrint currently always fills to the end of the 
   32                   
   33                   		;------	Get a copy of the text buffer pointer, and u
   34                   		;------	first value of the buffer (the sprite data's
   35                   		;------	offset-to-next byte) as the buffer width val
   36 631B:AD 17 63     		LDA	TextPtr
   37 631E:85 02        		STA	sysptr2
   38 6320:AD 18 63     		LDA	TextPtr+1
   39 6323:85 03        		STA	sysptr2+1
   40 6325:B2 02        		LDA	(sysptr2)
   41 6327:8D 19 63     		STA	TextWidth
   42 632A:3A           		DEC
   43 632B:8D 1A 63     		STA	TextRemaining	; Also, stash length for blank pad
   44                   
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   39
                        6502:src/hprint.src             14:53:39  

   45 632E:             hprintLoop
   46                   		;------	Calculate the address of this character's da
   47 632E:B2 00        		LDA	(sysptr)	; Get the next character
   48 6330:D0 **        		BNE	.10		; If non-null, use it!
   49 6332:9C 61 FC     		STZ	MATHG		; else set up for shortcut math
   50 6335:AE 1A 63     		LDX	TextRemaining	; Any room left in the buffer?
   51 6338:D0 **        		BNE	.18		; Branch if so to shortcut math
   52 633A:60           		RTS
   53                   
   54 633B:             .10		;------	We got a real character.  Set up to get i
   55 633B:3A           		DEC		; Decrement to real offset
   56 633C:8D 54 FC     		STA	MATHB	; Set up for math call
   57 633F:A9 07        		LDA	#FONT_HEIGHT
   58 6341:8D 52 FC     		STA	MATHD
   59 6344:9C 53 FC     		STZ	MATHC	; Clear in case of signed math
   60 6347:9C 55 FC     		STZ	MATHA	; MULTIPLY
   61                   
   62                   		;------	Bump the text pointer to next character
   63 634A:E6 00        		INC	sysptr
   64 634C:D0 **        		BNE	.14
   65 634E:E6 01        		INC	sysptr+1
   66 6350:             .14
   67                   		;------	Wait 'til the multiply is done (should be no
   68                   		WAITMATH
    1      6350       + WAITMATH.00050	.= *
    2 6350:2C 92 FC   + 	BIT SPRSYS
    3 6353:30 FB      + 	BMI WAITMATH.00050
    4                 + 
   69 6355:AD 60 FC     		LDA	MATHH	; And get the low byte of the offset
   70                   
   71                   		;------	Use low byte of offset added to FontBase to
   72                   		;------	create address of character data
   73 6358:18           .18		CLC
   74      635A         HprFontLo	.EQ *+1
   75 6359:69 **        		ADC	#<FontBase
   76 635B:85 04        		STA	sysptr3
   77 635D:AD 61 FC     		LDA	MATHG
   78      6361         HprFontHi	.EQ *+1
   79 6360:69 **        		ADC	#>FontBase
   80 6362:85 05        		STA	sysptr3+1
   81                   
   82                   		;------	Increment the TextPtr to next byte of output
   83 6364:EE 17 63     		INC	TextPtr
   84 6367:D0 **        		BNE	.20
   85 6369:EE 18 63     		INC	TextPtr+1
   86 636C:             .20
   87                   
   88                   		;------	Grab a work copy of the TextPtr
   89 636C:AD 17 63     		LDA	TextPtr
   90 636F:85 02        		STA	sysptr2
   91 6371:AD 18 63     		LDA	TextPtr+1
   92 6374:85 03        		STA	sysptr2+1
   93                   
   94                   		;------	Set up for character data looping
   95 6376:A0 06        		LDY	#FONT_HEIGHT-1
   96                   
   97 6378:             hprintCharLoop
   98                   		;------	Copy this character's data into the output b
   99 6378:B1 04        		LDA	(sysptr3),Y
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   40
                        6502:src/hprint.src             14:53:39  

  100 637A:92 02        		STA	(sysptr2)
  101 637C:A5 02        		LDA	sysptr2
  102 637E:18           		CLC
  103 637F:6D 19 63     		ADC	TextWidth
  104 6382:85 02        		STA	sysptr2
  105 6384:A5 03        		LDA	sysptr2+1
  106 6386:69 00        		ADC	#0
  107 6388:85 03        		STA	sysptr2+1
  108 638A:88           		DEY
  109 638B:10 EB        		BPL	hprintCharLoop
  110                   
  111                   		;------	Decrement number of available positions
  112 638D:CE 1A 63     		DEC	TextRemaining
  113 6390:4C 2E 63     		JMP	hprintLoop
  114                   
  115                   
  116                   
  117                   
  219                   	.IN 6502:src/sys.src
    1                   ; Tue Sep 18 17:43:25 1990
    2                   * === sys.src ========================================
    3                   *
    4                   * General System Source Code  --  Handy Software
    5                   *
    6                   * Confidential and Proprietary
    7                   * Copyright (c) 1989,1990 Epyx, Inc.
    8                   *
    9                   * Date		Name		Description
   10                   * ---------	--------------	---------------------------
   11                   * 28-Mar-90	SHL		IRQ handler quick checks for serial I
   12                   *				if SERIALPORT_USER defined now.
   13                   * 22-Mar-90	SHL		IRQ handler only touches 1 IRQ at a t
   14                   *				Individual handlers need not preserve X and A
   15                   *				IRQ handlers now required to PLX PLA RTI
   16                   *				instead of RTS
   17                   *				Renamed SafeIntRts to IntReturn, which now
   18                   *				does PLX PLA RTI
   19                   * 16-Mar-90	SHL		Modified BRK detect for 1 cycle impro
   20                   *				in the case of IRQ
   21                   * 15-Mar-90	SHL		Provided faster vector to Redeye inte
   22                   *				Serial interrupts now must PLX PLA RTI to
   23                   *				exit.
   24                   * 14-Mar-90	SHL		Added SafeIntRts
   25                   *				INITINT now vectors all IRQS to SafeIntRts
   26                   *				instead of user supplied RTS
   27                   * 26-Feb-90	SHL		Minor code tightening
   28                   * 9-Feb-90	SHL		INITINT is now required before any use
   29                   *				INITEOF, INITEOL or SET_DISPLAY... macros
   30                   *				This file can now be included before user
   31                   *				calls INITINT
   32                   * 7-Feb-90	SHL		Modified BRK_USER to force Howard Brea
   33                   * 31 May 89	-RJ		Added BRK_USER support code to UserIn
   34                   *				Removed InitSys routine
   35                   * 6 Apr 89	=RJ Mical=	Created this file!
   36                   *
   37                   * ====================================================
   38                   
   39                   
   40                   * This code is called whenever a non-NMI interrupt occ
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   41
                        6502:src/sys.src                14:53:39  

   41                   * interrupt or execution of a software BRK).
   42                   
   43 6393:             UserIntHandler
   44 6393:48           		PHA
   45 6394:DA           		PHX
   46                   
   47      TRUE         	  #IFDEF BRK_USER
   48                   	  ;-- Check if we got here because of a BRK instructi
   49                   	  ;-- the BRK routine if so, else branch to the inter
   50 6395:BA           		TSX
   51 6396:E8           		INX
   52 6397:E8           		INX
   53 6398:E8           		INX
   54 6399:BD 00 01     		LDA $0100,X		; Get a copy of the status byte
   55 639C:89 10        		bit #$10		; Check break bit
   56 639E:D0 **        		BNE brkInt		; and branch if clear (hardware int)
   57                   	  #ENDIF ; of #IFDEF BRK_USER
   58                   
   59 63A0:             hardInt
   60                   		;------	We had a hardware interrupt.
   61                   		;------	Get the interrupt flags value, reset the bit
   62 63A0:AD 81 FD     		LDA INTSET		; This gets the bits
   63                   
   64      FALSE        	  #IFDEF SERIALPORT_USER
   68                   	  #ENDIF
   69                   
   70 63A3:8D 15 63     .02		STA INTSET_RAM
   71                   
   72                   		;------	For least set bit in the interrupt value,
   73                   		;------	vector to the routine
   74 63A6:A2 00        		LDX #0
   75 63A8:A9 01        		lda #1
   76 63AA:2C 15 63     .00		  bit INTSET_RAM
   77 63AD:D0 **        		  bne jumpIntTable
   78 63AF:E8           		  INX
   79 63B0:E8           		  INX
   80 63B1:0A           		  asl a
   81 63B2:D0 F6        		 bne .00
   82 63B4:             IntReturn
   83                   		;------	At end of interrupt processing, restore the
   84                   		;------	registers and return from interrupt
   85                   
   86 63B4:FA           		PLX
   87 63B5:68           		PLA
   88 63B6:40           		RTI
   89                   
   90                   
   91                   
   92                   
   93                   * The above interrupt dispatcher does a JSR to this li
   94                   * This code jumps to the particular handler.  The inte
   95                   * should end with an RTS, which will return control to
   96                   
   97 63B7:             jumpIntTable
   98 63B7:8D 80 FD     		sta INTRST	; clear interrupt we're processing
   99 63BA:7C ** **     		JMP	(sysIntTable,X)
  100                   
  101                   
  102      TRUE         	  #IFDEF BRK_USER
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   42
                        6502:src/sys.src                14:53:39  

  103 63BD:             brkInt
  104 63BD:FA           		PLX
  105 63BE:68           		PLA
  106                   BRK_vector	HBRK			; force BRK on Howard board
    1 63BF:13         + 	.HS 13
    2                 + 
  107 63C0:4C BF 63     		JMP BRK_vector		; Will be modified by INITINT call
  108                   	  #ENDIF ; of #IFDEF BRK_USER
  109                   
  110                   
  111                   
  220                   	.IN 6502:src/display.src
    1                   ; Tue Sep 18 17:51:17 1990
    2                   * === display.src ====================================
    3                   *
    4                   * Display and Color IO Routines --  the 6502 Side of H
    5                   *
    6                   * Copyright (C) 1988,1989,1990 Epyx, Inc.
    7                   * All Rights Reserved
    8                   * CONFIDENTIAL and PROPRIETARY
    9                   *
   10                   * Date		Name		Description
   11                   * ---------	--------------	---------------------------
   12                   * 18-Sep-90	SHL		Added code to work around RICOH bug
   13                   *				and support for the NO_RICOH_PATCH switch
   14                   * 22-Mar-90	SHL		Removed PHA PHX and PLX PLA from IRQ 
   15                   * 20-Mar-90	SHL		Removed SEI, CLI from InitDisplayer, 
   16                   *				InitEOL
   17                   * 7-Feb-90	SHL		Apple compatibility removed
   18                   *				TIMEOUT macro moved to display.mac
   19                   *				General cleanup and prettification
   20                   * 3 July 89	-RJ		The RESET_TIMEOUT logic is moved from
   21                   *				input macros to the TIMEOUT macro here
   22                   * 16 Jun 89	Peter Engelbrite Timeout constant set to 1
   23                   * 24 May 89	-RJ		Added AUTO_TIMEOUT_USER support code
   24                   * 1 May 89	-RJ		Changed all IntTable references to sys
   25                   *				which is defined now in the sys.mac file
   26                   * 20 Apr 89	-RJ		Changed DisplayFrameCount so that it'
   27                   *				included and incremented if FRAMECOUNT_UP is
   28                   *				defined, included and decremented if
   29                   *				FRAMECOUNT_DOWN is defined, else nothing.
   30                   *				Moved DisplayFrameCount to this file.
   31                   * 20 Mar 89	-RJ		Added increment of DisplayFrameCount 
   32                   *				handler that's included for EOF_USER's
   33                   * 13 Feb 89	-RJ		Added InitDisplayer routine.  Added i
   34                   *				of DISPLAY to normal EOF handler (FrameEnd).
   35                   * 12 Feb 89	-RJ		EOF and EOL code save and restore A
   36                   * 26-Dec-88	-RJ		Added EOL code
   37                   * 23-Dec-88	-RJ		Added EOF code
   38                   * Early 88	=RJ Mical=	Created this file!
   39                   *
   40                   * ====================================================
   41                   
   42                   
   43                   
   44                   * If either FRAMECOUNT_UP or _DOWN is defined, then de
   45      FALSE        	#IFDEF	FRAMECOUNT_UP | FRAMECOUNT_DOWN
   47                   	#ENDIF
   48                   
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   43
                        6502:src/display.src            14:53:39  

   49                   
   50      TRUE         	#IFDEF EOF_USER
   51                   * - - - - - - - - - - - - -  - - - - - - - - - - - - -
   52                   * - - - - - - - - - - - - -  - - - - - - - - - - - - -
   53                   * - - - - - - - - - - - - -  - - - - - - - - - - - - -
   54                   	;------	If an EOF user, create the elaborate version 
   55                   	;------	end-of-frame handler
   56                   
   57 63C3:             InitEOF
   58                   		;------	Copy old vector into our exit JMP instructio
   59 63C3:AD ** **     		LDA	sysIntTable+{2*2}
   60 63C6:8D ** **     		STA	FrameEndExit+1
   61 63C9:AD ** **     		LDA	sysIntTable+{2*2}+1
   62 63CC:8D ** **     		STA	FrameEndExit+2
   63                   		;------	Install our vector into the interrupt table
   64 63CF:A9 **        		LDA	#<FrameEnd
   65 63D1:8D ** **     		STA	sysIntTable+{2*2}
   66 63D4:A9 **        		LDA	#>FrameEnd
   67 63D6:8D ** **     		STA	sysIntTable+{2*2}+1
   68 63D9:60           		RTS
   69                   
   70 63DA:             FrameEnd
   71                   * End-of-Frame handler
   72 63DA:5A           		PHY
   73                   
   74                   		;------	The TIMEOUT macro will do nothing unless
   75                   		;------ AUTO_TIMEOUT_USER has been defined in which 
   76                   		;------	system will turn off after a given amount of
   77      TRUE         	  #IFNDEF NO_RICOH_PATCH
   78 63DB:AD F9 FF     		lda MAPCTL
   79 63DE:48           		pha
   80 63DF:09 01        		 ora #SUZY_SPACE
   81 63E1:8D F9 FF     		 sta MAPCTL
   82                   		 TIMEOUT
    1                 + 
   83 63E4:68           		pla
   84 63E5:8D F9 FF     		sta MAPCTL
   85                   	  #ELSE
   87                   	  #ENDIF ;NDEF NO_RICOH_PATCH
   88                   
   89                   		;------	Turn on the display, and then EOF flag
   90                   ;!!! New:  invoke the DISPLAY macro here during EOF pr
   91                   		DISPLAY
    1 63E8:AD 0E 63   + 		LDA	DISPCTL_RAM
    2 63EB:8D 92 FD   + 		STA	DISPCTL
    3 63EE:29 02      + 		AND	#DISP_FLIP
    4 63F0:F0 **      + 		BEQ	DISPLAY.0008
    5 63F2:AD 13 63   + 		LDA	DisplayBuffer
    6 63F5:18         + 		CLC
    7 63F6:69 DF      + 		ADC	#<DISPLAY_BUFSIZE-1
    8 63F8:AA         + 		TAX
    9 63F9:AD 14 63   + 		LDA	DisplayBuffer+1
   10 63FC:69 1F      + 		ADC	#>DISPLAY_BUFSIZE-1
   11 63FE:80 **      + 		BRA	DISPLAY.00082
   12 6400:           + DISPLAY.0008
   13 6400:AE 13 63   + 		LDX	DisplayBuffer
   14 6403:AD 14 63   + 		LDA	DisplayBuffer+1
   15 6406:           + DISPLAY.00082
   16                   		DISP_AX
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   44
                        6502:src/display.src            14:53:39  

    1 6406:08         + 		PHP
    2 6407:78         + 		SEI
    3 6408:8E 94 FD   + 		STX	DISPADRL
    4 640B:8D 95 FD   + 		STA	DISPADRH
    5 640E:28         + 		PLP
    6                 + 
   17                 + 
   92                   
   93      FALSE        	  #IFDEF FRAMECOUNT_UP
   96                   	  #ELSE ; put this #ELSE here to avoid both UP and DO
   97      FALSE        	    #IFDEF FRAMECOUNT_DOWN
  103                   	    #ENDIF
  104                   	  #ENDIF
  105                   
  106 640F:AD 16 63     		LDA	DisplayFlags
  107 6412:09 80        		ORA	#DISPLAY_EOFFLAG
  108 6414:8D 16 63     		STA	DisplayFlags
  109                   
  110 6417:7A           		PLY
  111 6418:             FrameEndExit
  112                   		;------	This vector ought to be patched by the Init 
  113 6418:4C B4 63     		JMP	IntReturn
  114                   
  115                   
  116                   	#ELSE ; of #IFDEF EOF_USER
  160                   	#ENDIF	; of #IFDEF EOF_USER
  161                   
  162                   * - - - - - - - - - - - - -  - - - - - - - - - - - - -
  163                   
  164                   
  165                   
  166                   
  167      FALSE        	#IFDEF	EOL_USER
  192                   	#ENDIF	; of #IFDEF EOL_USER
  193                   
  194                   
  195                   
  196                   
  221                   
  222                   
  223                   ;=====================================================
  224                   
  225                   ; Handy system character set stuff
  226                   
  227                   	HPRFONT plain
    1 641B:           + FontBase
    2                   	    .IN 6502:fonts/plain_space7.src
    1                   
    2                   * === space7font.src =================================
    3                   * 
    4                   * HandyPrint Space Character 7-Height Font  --  Handy 
    5                   * 
    6                   * Confidential and Proprietary
    7                   * Copyright (C) 1989, Epyx, Inc.
    8                   * 
    9                   * Date       Name              Description
   10                   * ---------  ----------------  -----------------------
   11                   * 13-Feb-89   =RJ Mical=        Created this file!
   12                   * 
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   45
                        6502:fonts/plain_space7.src     14:53:39  

   13                   * ====================================================
   14                   
   15 641B:00           	.BY %00000000
   16 641C:00           	.BY %00000000
   17 641D:00           	.BY %00000000
   18 641E:00           	.BY %00000000
   19 641F:00           	.BY %00000000
   20 6420:00           	.BY %00000000
   21 6421:00           	.BY %00000000
   22                   
   23                   	.END
    3      TRUE       + 	  #IF {FONT_TYPE&HPR_DIGIT} <> 0
    4                   	    .IN 6502:fonts/plain_digit7.src
    1                   
    2                   * === digit7font.src =================================
    3                   * 
    4                   * HandyPrint Digits 7-Height Font  --  Handy Software
    5                   * 
    6                   * Confidential and Proprietary
    7                   * Copyright (C) 1989, Epyx, Inc.
    8                   * 
    9                   * Date       Name              Description
   10                   * ---------  ----------------  -----------------------
   11                   * 13-Feb-89   =RJ Mical=        Created this file!
   12                   * 
   13                   * ====================================================
   14                   
   15                   
   16 6422:7C           	.BY %01111100
   17 6423:C6           	.BY %11000110
   18 6424:C6           	.BY %11000110
   19 6425:C6           	.BY %11000110
   20 6426:C6           	.BY %11000110
   21 6427:C6           	.BY %11000110
   22 6428:7C           	.BY %01111100
   23                   
   24 6429:FE           	.BY %11111110
   25 642A:18           	.BY %00011000
   26 642B:18           	.BY %00011000
   27 642C:18           	.BY %00011000
   28 642D:78           	.BY %01111000
   29 642E:38           	.BY %00111000
   30 642F:18           	.BY %00011000
   31                   
   32 6430:FE           	.BY %11111110
   33 6431:30           	.BY %00110000
   34 6432:18           	.BY %00011000
   35 6433:0C           	.BY %00001100
   36 6434:06           	.BY %00000110
   37 6435:C6           	.BY %11000110
   38 6436:7C           	.BY %01111100
   39                   
   40 6437:7C           	.BY %01111100
   41 6438:C6           	.BY %11000110
   42 6439:06           	.BY %00000110
   43 643A:0C           	.BY %00001100
   44 643B:06           	.BY %00000110
   45 643C:C6           	.BY %11000110
   46 643D:7C           	.BY %01111100
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   46
                        6502:fonts/plain_digit7.src     14:53:39  

   47                   
   48 643E:0C           	.BY %00001100
   49 643F:0C           	.BY %00001100
   50 6440:FE           	.BY %11111110
   51 6441:CC           	.BY %11001100
   52 6442:6C           	.BY %01101100
   53 6443:3C           	.BY %00111100
   54 6444:1C           	.BY %00011100
   55                   
   56 6445:FC           	.BY %11111100
   57 6446:06           	.BY %00000110
   58 6447:06           	.BY %00000110
   59 6448:FC           	.BY %11111100
   60 6449:C0           	.BY %11000000
   61 644A:C0           	.BY %11000000
   62 644B:FC           	.BY %11111100
   63                   
   64 644C:7C           	.BY %01111100
   65 644D:C6           	.BY %11000110
   66 644E:C6           	.BY %11000110
   67 644F:FC           	.BY %11111100
   68 6450:C0           	.BY %11000000
   69 6451:C0           	.BY %11000000
   70 6452:7C           	.BY %01111100
   71                   
   72 6453:C0           	.BY %11000000
   73 6454:60           	.BY %01100000
   74 6455:30           	.BY %00110000
   75 6456:18           	.BY %00011000
   76 6457:0C           	.BY %00001100
   77 6458:06           	.BY %00000110
   78 6459:FE           	.BY %11111110
   79                   
   80 645A:7C           	.BY %01111100
   81 645B:C6           	.BY %11000110
   82 645C:C6           	.BY %11000110
   83 645D:7C           	.BY %01111100
   84 645E:C6           	.BY %11000110
   85 645F:C6           	.BY %11000110
   86 6460:7C           	.BY %01111100
   87                   
   88 6461:7C           	.BY %01111100
   89 6462:06           	.BY %00000110
   90 6463:06           	.BY %00000110
   91 6464:7E           	.BY %01111110
   92 6465:C6           	.BY %11000110
   93 6466:C6           	.BY %11000110
   94 6467:7C           	.BY %01111100
   95                   
   96                   	.END
    5                 + 	  #ENDIF
    6      TRUE       + 	  #IF {FONT_TYPE&HPR_UPPER} <> 0
    7                   	    .IN 6502:fonts/plain_upper7.src
    1                   
    2                   * === upper7font.src =================================
    3                   * 
    4                   * HandyPrint Uppercase Alphaetic 7-Height Font  --  Ha
    5                   * 
    6                   * Confidential and Proprietary
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   47
                        6502:fonts/plain_upper7.src     14:53:39  

    7                   * Copyright (C) 1989, Epyx, Inc.
    8                   * 
    9                   * Date       Name              Description
   10                   * ---------  ----------------  -----------------------
   11                   * 13-Feb-89   =RJ Mical=        Created this file!
   12                   * 
   13                   * ====================================================
   14                   
   15 6468:C6           	.BY %11000110
   16 6469:C6           	.BY %11000110
   17 646A:C6           	.BY %11000110
   18 646B:FE           	.BY %11111110
   19 646C:C6           	.BY %11000110
   20 646D:6C           	.BY %01101100
   21 646E:38           	.BY %00111000
   22                   
   23 646F:FC           	.BY %11111100
   24 6470:C6           	.BY %11000110
   25 6471:C6           	.BY %11000110
   26 6472:FC           	.BY %11111100
   27 6473:C6           	.BY %11000110
   28 6474:C6           	.BY %11000110
   29 6475:FC           	.BY %11111100
   30                   
   31 6476:7C           	.BY %01111100
   32 6477:C6           	.BY %11000110
   33 6478:C0           	.BY %11000000
   34 6479:C0           	.BY %11000000
   35 647A:C0           	.BY %11000000
   36 647B:C6           	.BY %11000110
   37 647C:7C           	.BY %01111100
   38                   
   39 647D:FC           	.BY %11111100
   40 647E:C6           	.BY %11000110
   41 647F:C6           	.BY %11000110
   42 6480:C6           	.BY %11000110
   43 6481:C6           	.BY %11000110
   44 6482:C6           	.BY %11000110
   45 6483:FC           	.BY %11111100
   46                   
   47 6484:FE           	.BY %11111110
   48 6485:C0           	.BY %11000000
   49 6486:C0           	.BY %11000000
   50 6487:F8           	.BY %11111000
   51 6488:C0           	.BY %11000000
   52 6489:C0           	.BY %11000000
   53 648A:FE           	.BY %11111110
   54                   
   55 648B:C0           	.BY %11000000
   56 648C:C0           	.BY %11000000
   57 648D:C0           	.BY %11000000
   58 648E:F8           	.BY %11111000
   59 648F:C0           	.BY %11000000
   60 6490:C0           	.BY %11000000
   61 6491:FE           	.BY %11111110
   62                   
   63 6492:7E           	.BY %01111110
   64 6493:C6           	.BY %11000110
   65 6494:C6           	.BY %11000110
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   48
                        6502:fonts/plain_upper7.src     14:53:39  

   66 6495:CE           	.BY %11001110
   67 6496:C0           	.BY %11000000
   68 6497:C6           	.BY %11000110
   69 6498:7C           	.BY %01111100
   70                   
   71 6499:C6           	.BY %11000110
   72 649A:C6           	.BY %11000110
   73 649B:C6           	.BY %11000110
   74 649C:FE           	.BY %11111110
   75 649D:C6           	.BY %11000110
   76 649E:C6           	.BY %11000110
   77 649F:C6           	.BY %11000110
   78                   
   79 64A0:7E           	.BY %01111110
   80 64A1:18           	.BY %00011000
   81 64A2:18           	.BY %00011000
   82 64A3:18           	.BY %00011000
   83 64A4:18           	.BY %00011000
   84 64A5:18           	.BY %00011000
   85 64A6:7E           	.BY %01111110
   86                   
   87 64A7:7C           	.BY %01111100
   88 64A8:C6           	.BY %11000110
   89 64A9:06           	.BY %00000110
   90 64AA:06           	.BY %00000110
   91 64AB:06           	.BY %00000110
   92 64AC:06           	.BY %00000110
   93 64AD:7E           	.BY %01111110
   94                   
   95 64AE:C6           	.BY %11000110
   96 64AF:CC           	.BY %11001100
   97 64B0:D8           	.BY %11011000
   98 64B1:F0           	.BY %11110000
   99 64B2:D8           	.BY %11011000
  100 64B3:CC           	.BY %11001100
  101 64B4:C6           	.BY %11000110
  102                   
  103 64B5:FE           	.BY %11111110
  104 64B6:C0           	.BY %11000000
  105 64B7:C0           	.BY %11000000
  106 64B8:C0           	.BY %11000000
  107 64B9:C0           	.BY %11000000
  108 64BA:C0           	.BY %11000000
  109 64BB:C0           	.BY %11000000
  110                   
  111 64BC:C6           	.BY %11000110
  112 64BD:C6           	.BY %11000110
  113 64BE:C6           	.BY %11000110
  114 64BF:D6           	.BY %11010110
  115 64C0:FE           	.BY %11111110
  116 64C1:EE           	.BY %11101110
  117 64C2:C6           	.BY %11000110
  118                   
  119 64C3:C6           	.BY %11000110
  120 64C4:C6           	.BY %11000110
  121 64C5:CE           	.BY %11001110
  122 64C6:DE           	.BY %11011110
  123 64C7:F6           	.BY %11110110
  124 64C8:E6           	.BY %11100110
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   49
                        6502:fonts/plain_upper7.src     14:53:39  

  125 64C9:C6           	.BY %11000110
  126                   
  127 64CA:7C           	.BY %01111100
  128 64CB:C6           	.BY %11000110
  129 64CC:C6           	.BY %11000110
  130 64CD:C6           	.BY %11000110
  131 64CE:C6           	.BY %11000110
  132 64CF:C6           	.BY %11000110
  133 64D0:7C           	.BY %01111100
  134                   
  135 64D1:C0           	.BY %11000000
  136 64D2:C0           	.BY %11000000
  137 64D3:C0           	.BY %11000000
  138 64D4:FC           	.BY %11111100
  139 64D5:C6           	.BY %11000110
  140 64D6:C6           	.BY %11000110
  141 64D7:FC           	.BY %11111100
  142                   
  143 64D8:7A           	.BY %01111010
  144 64D9:CE           	.BY %11001110
  145 64DA:D6           	.BY %11010110
  146 64DB:C6           	.BY %11000110
  147 64DC:C6           	.BY %11000110
  148 64DD:C6           	.BY %11000110
  149 64DE:7C           	.BY %01111100
  150                   
  151 64DF:C6           	.BY %11000110
  152 64E0:CC           	.BY %11001100
  153 64E1:D8           	.BY %11011000
  154 64E2:FC           	.BY %11111100
  155 64E3:C6           	.BY %11000110
  156 64E4:C6           	.BY %11000110
  157 64E5:FC           	.BY %11111100
  158                   
  159 64E6:7C           	.BY %01111100
  160 64E7:C6           	.BY %11000110
  161 64E8:06           	.BY %00000110
  162 64E9:7C           	.BY %01111100
  163 64EA:C0           	.BY %11000000
  164 64EB:C6           	.BY %11000110
  165 64EC:7C           	.BY %01111100
  166                   
  167 64ED:18           	.BY %00011000
  168 64EE:18           	.BY %00011000
  169 64EF:18           	.BY %00011000
  170 64F0:18           	.BY %00011000
  171 64F1:18           	.BY %00011000
  172 64F2:18           	.BY %00011000
  173 64F3:7E           	.BY %01111110
  174                   
  175 64F4:7C           	.BY %01111100
  176 64F5:C6           	.BY %11000110
  177 64F6:C6           	.BY %11000110
  178 64F7:C6           	.BY %11000110
  179 64F8:C6           	.BY %11000110
  180 64F9:C6           	.BY %11000110
  181 64FA:C6           	.BY %11000110
  182                   
  183 64FB:38           	.BY %00111000
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   50
                        6502:fonts/plain_upper7.src     14:53:39  

  184 64FC:38           	.BY %00111000
  185 64FD:6C           	.BY %01101100
  186 64FE:6C           	.BY %01101100
  187 64FF:6C           	.BY %01101100
  188 6500:C6           	.BY %11000110
  189 6501:C6           	.BY %11000110
  190                   
  191 6502:6C           	.BY %01101100
  192 6503:D6           	.BY %11010110
  193 6504:D6           	.BY %11010110
  194 6505:D6           	.BY %11010110
  195 6506:C6           	.BY %11000110
  196 6507:C6           	.BY %11000110
  197 6508:C6           	.BY %11000110
  198                   
  199 6509:C6           	.BY %11000110
  200 650A:C6           	.BY %11000110
  201 650B:6C           	.BY %01101100
  202 650C:38           	.BY %00111000
  203 650D:6C           	.BY %01101100
  204 650E:C6           	.BY %11000110
  205 650F:C6           	.BY %11000110
  206                   
  207 6510:18           	.BY %00011000
  208 6511:18           	.BY %00011000
  209 6512:18           	.BY %00011000
  210 6513:18           	.BY %00011000
  211 6514:3C           	.BY %00111100
  212 6515:66           	.BY %01100110
  213 6516:66           	.BY %01100110
  214                   
  215 6517:FE           	.BY %11111110
  216 6518:C0           	.BY %11000000
  217 6519:60           	.BY %01100000
  218 651A:30           	.BY %00110000
  219 651B:18           	.BY %00011000
  220 651C:0C           	.BY %00001100
  221 651D:FE           	.BY %11111110
  222                   
  223                   	.END
    8                 + 	  #ENDIF
    9      FALSE        	  #IF {FONT_TYPE&HPR_LOWER} <> 0
   11                 + 	  #ENDIF
   12      TRUE       + 	  #IF {FONT_TYPE&HPR_PUNC} <> 0
   13                   	    .IN 6502:fonts/plain_punc7.src
    1                   
    2                   * === punc7font.src ==================================
    3                   * 
    4                   * HandyPrint Punctuation 7-Height Font  --  Handy Soft
    5                   * 
    6                   * Confidential and Proprietary
    7                   * Copyright (C) 1989, Epyx, Inc.
    8                   * 
    9                   * Date       Name              Description
   10                   * ---------  ----------------  -----------------------
   11                   * 13-Feb-89   =RJ Mical=        Created this file!
   12                   * 
   13                   * ====================================================
   14                   
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   51
                        6502:fonts/plain_punc7.src      14:53:39  

   15                   
   16                   ; Defines these characters:  !"'(),-.:;?
   17                   
   18 651E:18           	.BY %00011000
   19 651F:00           	.BY %00000000
   20 6520:18           	.BY %00011000
   21 6521:3C           	.BY %00111100
   22 6522:3C           	.BY %00111100
   23 6523:3C           	.BY %00111100
   24 6524:18           	.BY %00011000
   25                   
   26 6525:00           	.BY %00000000
   27 6526:00           	.BY %00000000
   28 6527:00           	.BY %00000000
   29 6528:00           	.BY %00000000
   30 6529:66           	.BY %01100110
   31 652A:66           	.BY %01100110
   32 652B:66           	.BY %01100110
   33                   
   34 652C:00           	.BY %00000000
   35 652D:00           	.BY %00000000
   36 652E:00           	.BY %00000000
   37 652F:00           	.BY %00000000
   38 6530:30           	.BY %00110000
   39 6531:18           	.BY %00011000
   40 6532:18           	.BY %00011000
   41                   
   42 6533:0C           	.BY %00001100
   43 6534:18           	.BY %00011000
   44 6535:30           	.BY %00110000
   45 6536:30           	.BY %00110000
   46 6537:30           	.BY %00110000
   47 6538:18           	.BY %00011000
   48 6539:0C           	.BY %00001100
   49                   
   50 653A:30           	.BY %00110000
   51 653B:18           	.BY %00011000
   52 653C:0C           	.BY %00001100
   53 653D:0C           	.BY %00001100
   54 653E:0C           	.BY %00001100
   55 653F:18           	.BY %00011000
   56 6540:30           	.BY %00110000
   57                   
   58 6541:30           	.BY %00110000
   59 6542:18           	.BY %00011000
   60 6543:18           	.BY %00011000
   61 6544:00           	.BY %00000000
   62 6545:00           	.BY %00000000
   63 6546:00           	.BY %00000000
   64 6547:00           	.BY %00000000
   65                   
   66 6548:00           	.BY %00000000
   67 6549:00           	.BY %00000000
   68 654A:00           	.BY %00000000
   69 654B:3C           	.BY %00111100
   70 654C:00           	.BY %00000000
   71 654D:00           	.BY %00000000
   72 654E:00           	.BY %00000000
   73                   
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   52
                        6502:fonts/plain_punc7.src      14:53:39  

   74 654F:18           	.BY %00011000
   75 6550:18           	.BY %00011000
   76 6551:00           	.BY %00000000
   77 6552:00           	.BY %00000000
   78 6553:00           	.BY %00000000
   79 6554:00           	.BY %00000000
   80 6555:00           	.BY %00000000
   81                   
   82 6556:00           	.BY %00000000
   83 6557:18           	.BY %00011000
   84 6558:18           	.BY %00011000
   85 6559:00           	.BY %00000000
   86 655A:18           	.BY %00011000
   87 655B:18           	.BY %00011000
   88 655C:00           	.BY %00000000
   89                   
   90 655D:30           	.BY %00110000
   91 655E:18           	.BY %00011000
   92 655F:18           	.BY %00011000
   93 6560:00           	.BY %00000000
   94 6561:18           	.BY %00011000
   95 6562:18           	.BY %00011000
   96 6563:00           	.BY %00000000
   97                   
   98 6564:18           	.BY %00011000
   99 6565:00           	.BY %00000000
  100 6566:18           	.BY %00011000
  101 6567:0C           	.BY %00001100
  102 6568:06           	.BY %00000110
  103 6569:C6           	.BY %11000110
  104 656A:7C           	.BY %01111100
  105                   
  106                   	.END
   14                 + 	  #ENDIF
   15      FALSE        	  #IF {FONT_TYPE&HPR_OTHER} <> 0
   17                 + 	  #ENDIF
   18                   	    .IN 6502:fonts/plain_nix7.src
    1                   
    2                   * === nix7font.src ===================================
    3                   * 
    4                   * HandyPrint Nix-Character 7-Height Font  --  Handy So
    5                   * 
    6                   * Confidential and Proprietary
    7                   * Copyright (C) 1989, Epyx, Inc.
    8                   * 
    9                   * Date       Name              Description
   10                   * ---------  ----------------  -----------------------
   11                   * 13-Feb-89   =RJ Mical=        Created this file!
   12                   * 
   13                   * ====================================================
   14                   
   15 656B:A5           	.BY %10100101
   16 656C:5A           	.BY %01011010
   17 656D:A5           	.BY %10100101
   18 656E:5A           	.BY %01011010
   19 656F:A5           	.BY %10100101
   20 6570:5A           	.BY %01011010
   21 6571:A5           	.BY %10100101
   22                   
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   53
                        6502:fonts/plain_nix7.src       14:53:39  

   23                   	.END
   19                 + 
  228                   
  229                   	HPR_CHARSET
    1      FALSE        	  #IF {FONT_TYPE&HPR_OTHER} != 0
   63                 + 	  #ELSE 
   64      TRUE       + 	    #IF {FONT_TYPE&HPR_PUNC} != 0
   65      FALSE        	      #IF {FONT_TYPE&HPR_LOWER} != 0
   79                 + 	      #ELSE
   80      TRUE       + 	        #IF {FONT_TYPE&HPR_UPPER} != 0
   81      TRUE       + 	          #IF {FONT_TYPE&HPR_DIGIT} != 0
   82                 + 	            .CS 6502:fonts/cset_0b.src
   83                   	          #ELSE
   85                 + 	          #ENDIF
   86                   	        #ELSE
   92                 + 	        #ENDIF
   93                 + 	      #ENDIF
   94                   	    #ELSE
  126                 + 	    #ENDIF
  127                 + 	  #ENDIF
  128                 + 
  230                   
  231                   ;=====================================================
  232                   
  233                   ; Code segment
  234                   
  235                   
  236                   
  237 6572:             begin
  238 6572:78           	sei
  239 6573:D8           	cld
  240 6574:A2 FF        	ldx #$ff
  241 6576:9A           	txs
  242                   
  243 6577:20 ** **     	jsr erasezpage
  244                   
  245 657A:20 ** **     	jsr setpalette
  246                   
  247                   	INITSYS
    1 657D:A9 0D      + 	LDA #DISP_COLOR+DISP_FOURBIT+DMA_ENABLE
    2 657F:8D 0E 63   + 	STA DISPCTL_RAM
    3 6582:A9 08      + 	LDA #LEFTHAND		
    4 6584:8D 0D 63   + 	STA SPRSYS_RAM
    5 6587:8D 92 FC   + 	STA SPRSYS
    6 658A:A9 08      + 	LDA #VECTOR_SPACE	
    7 658C:8D F9 FF   + 	STA MAPCTL
    8      FALSE         #IFDEF RAMCART_USER
   10                 +  #ELSE
   11 658F:A9 0A      + 	LDA #CART_ADDR_DATA+RESTLESS
   12                 +  #ENDIF
   13 6591:8D 0F 63   + 	STA IODAT_RAM
   14 6594:8D 8B FD   + 	STA IODAT
   15 6597:8D 10 63   + 	STA IODIR_RAM
   16 659A:8D 8A FD   + 	STA IODIR
   17 659D:A9 04      + 	LDA #TXOPEN	
   18 659F:8D 8C FD   + 	STA SERCTL	
   19      FALSE        	  #IFDEF AUTO_TIMEOUT_USER
   22                 + 	  #ENDIF
   23                 + 
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   54
                                                        14:53:39  

  248                   
  249                   	INITINT	interrupt_buffer,rts0	; for when we want our 
    1      41C0       + sysIntTable	.EQ interrupt_buffer
    2 65A2:A9 93      + 		LDA #<UserIntHandler
    3 65A4:8D FE FF   + 		STA CPU_IRQ
    4 65A7:A9 63      + 		LDA #>UserIntHandler
    5 65A9:8D FF FF   + 		STA CPU_IRQ+1
    6 65AC:A2 0F      + 		LDX #8*2-1
    7      65AE       + INITINT.000D	.= *
    8 65AE:A9 63      + 		  LDA #>IntReturn
    9 65B0:9D C0 41   + 		  STA interrupt_buffer,X
   10 65B3:CA         + 		  DEX
   11 65B4:A9 B4      + 		  LDA #<IntReturn
   12 65B6:9D C0 41   + 		  STA interrupt_buffer,X
   13 65B9:CA         + 		  DEX
   14 65BA:10 F2      + 		 BPL INITINT.000D
   15      TRUE       + 	  #IFDEF BRK_USER
   16 65BC:AD FA FF   + 		LDA CPU_NMI
   17 65BF:8D C1 63   + 		STA BRK_vector+2
   18 65C2:AD FB FF   + 		LDA CPU_NMI+1
   19 65C5:8D C2 63   + 		STA BRK_vector+3
   20                 + 	  #ENDIF 
   21      FALSE        	  #IFDEF SERIALPORT_USER
   26                 + 	  #ENDIF
   27                 + 
  250                   
  251 65C8:A9 00        	lda #<$3000		; for Howard board
  252 65CA:8D FA FF     	sta $fffa
  253 65CD:A9 30        	lda #>$3000
  254 65CF:8D FB FF     	sta $fffb
  255                   
  256                   	SETDBUF screen0,screen1
    1 65D2:A9 00      + 		LDA	#<screen0
    2 65D4:8D 11 63   + 		STA	RenderBuffer
    3 65D7:A9 02      + 		LDA	#>screen0
    4 65D9:8D 12 63   + 		STA	RenderBuffer+1
    5 65DC:A9 E0      + 		LDA	#<screen1
    6 65DE:8D 13 63   + 		STA	DisplayBuffer
    7 65E1:A9 21      + 		LDA	#>screen1
    8 65E3:8D 14 63   + 		STA	DisplayBuffer+1
    9 65E6:9C 16 63   + 		STZ	DisplayFlags
   10                 + 
  257                   	SETDISP_60
    1                   		SETDISP	$9E,$98,$68,$9F,$29
    1 65E9:A9 9E      + 		LDA	#$9E
    2 65EB:8D 00 FD   + 		STA	HCOUNT+TIM_BACKUP
    3      FALSE        	#IFDEF EOL_USER
    5                 + 	#ELSE
    6 65EE:A9 18      + 		lda #$98&%01111111
    7                 + 	#ENDIF
    8 65F0:8D 01 FD   + 		STA	HCOUNT+TIM_CONTROLA
    9 65F3:A9 68      + 		LDA	#$68
   10 65F5:8D 08 FD   + 		STA	VCOUNT+TIM_BACKUP
   11 65F8:A9 9F      + 		lda #$9F|%10000000
   12 65FA:8D 09 FD   + 		STA	VCOUNT+TIM_CONTROLA
   13 65FD:A9 29      + 		LDA	#$29
   14 65FF:8D 93 FD   + 		STA	PBKUP
   15      FALSE        	#IFNDEF	EOF_USER
   17                 + 	#ENDIF
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   55
                        mandel.src                      14:53:39  

   18                 + 
    2                 + 
  258                   	INITEOF
    1 6602:20 C3 63   + 		JSR	InitEOF
    2                 + 
  259                   
  260 6605:AD 19 64     	lda FrameEndExit+1
  261 6608:8D ** **     	sta myeofendexit+1
  262 660B:AD 1A 64     	lda FrameEndExit+2
  263 660E:8D ** **     	sta myeofendexit+2
  264                   
  265 6611:A9 **        	lda #<myeof
  266 6613:8D 19 64     	sta FrameEndExit+1
  267 6616:A9 **        	lda #>myeof
  268 6618:8D 1A 64     	sta FrameEndExit+2
  269                   
  270 661B:A9 F3        	lda #$f3		; replaces what was in INITSUZY
  271 661D:8D 83 FC     	sta SPRINIT
  272 6620:A9 80        	lda #$80
  273 6622:8D 28 FC     	sta HSIZOFFL
  274 6625:9C 29 FC     	stz HSIZOFFH
  275 6628:8D 2A FC     	sta VSIZOFFL
  276 662B:9C 2B FC     	stz VSIZOFFH
  277 662E:A9 01        	lda #1
  278 6630:8D 90 FC     	sta SUZYBUSEN
  279 6633:9C 90 FD     	stz SDONEACK
  280                   
  281 6636:A9 00        	lda #0
  282                   	HOFF8
    1 6638:8D 04 FC   + 		STA	HOFFL
    2                 + 
  283                   	VOFF8
    1 663B:8D 06 FC   + 		STA	VOFFL
    2                 + 
  284                   
  285 663E:AD 0D 63     	lda SPRSYS_RAM
  286 6641:09 60        	ora #NO_COLLIDE+ACCUMULATE
  287 6643:29 7F        	and #<~SIGNMATH
  288 6645:8D 0D 63     	sta SPRSYS_RAM
  289 6648:8D 92 FC     	sta SPRSYS
  290                   
  291 664B:20 ** **     	jsr initbigsprite
  292                   
  293 664E:20 ** **     	jsr do.dbuf
  294                   
  295                   	INITLIT textbuffer,20
    1 6651:A9 7D      + 	LDA #<textbuffer
    2 6653:A2 62      + 	LDX #>textbuffer
    3 6655:85 00      + 	STA sysptr
    4 6657:86 01      + 	STX sysptr+1
    5 6659:A2 07      + 	LDX #FONT_HEIGHT
    6      665B       + INITLIT.0014	.= *
    7 665B:A9 14      + 	  lda #20
    8 665D:92 00      + 	  STA (sysptr)
    9 665F:18         + 	  CLC
   10 6660:65 00      + 	  ADC sysptr
   11 6662:85 00      + 	  STA sysptr
   12 6664:90 **      + 	  bcc INITLIT.00141
   13 6666:E6 01      + 	  inc sysptr+1
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   56
                        mandel.src                      14:53:39  

   14      6668       + INITLIT.00141	.= *
   15 6668:CA         + 	  DEX
   16 6669:D0 F0      + 	 BNE INITLIT.0014
   17 666B:A9 00      + 	LDA #0
   18 666D:92 00      + 	STA (sysptr)
   19                 + 
  296                   
  297 666F:58           	cli
  298                   
  299 6670:20 ** **     	jsr initbrot
  300                   
  301 6673:             loop
  302 6673:20 ** **     	  jsr dopoint		; normal mode loop
  303 6676:20 ** **     	  jsr incpoint
  304                   
  305 6679:A5 7D        	  lda updateflag
  306 667B:D0 **        	  bne .0
  307                   
  308 667D:20 ** **     	  jsr showbigsprite
  309 6680:20 ** **     	  jsr do.dbuf
  310 6683:A9 10        	  lda #16
  311 6685:85 7D        	  sta updateflag
  312                   
  313 6687:A5 76        .0	  lda edgeinputlatch
  314 6689:F0 E8        	 beq loop
  315                   
  316 668B:A9 FF        	lda #$ff
  317 668D:85 0C        	sta stick
  318 668F:64 77        	stz modeflag
  319                   
  320 6691:             loop1
  321                   	  GETSWITCH		; zoom box mode loop
    1 6691:AD B1 FC   + 	  LDA SWITCHES
    2                 + 
  322 6694:89 01        	  bit #PAUSE_SWITCH
  323 6696:D0 **        	  bne .0
  324 6698:E6 77        	  inc modeflag
  325 669A:20 ** **     	  jsr getinput
  326 669D:20 ** **     	  jsr showresult
  327                   
  328 66A0:20 ** **     	  jsr do.dbuf
  329                   	  WAITEOF
    1 66A3:A9 80      + 		LDA	#DISPLAY_EOFFLAG
    2 66A5:1C 16 63   + 		TRB	DisplayFlags
    3      66A8       + systemp		.=	*
    4 66A8:2C 16 63   + 		BIT	DisplayFlags
    5 66AB:F0 FB      + 		BEQ	systemp
    6                 + 
  330 66AD:A5 77        	  lda modeflag
  331 66AF:D0 E0        	 bne loop1
  332                   
  333 66B1:64 76        	stz edgeinputlatch
  334 66B3:80 BE        	bra loop
  335                   
  336 66B5:64 77        .0	stz modeflag
  337 66B7:A5 78        	lda cyclemode
  338 66B9:85 79        	sta cyclemodesave
  339                   
  340 66BB:             loop2
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   57
                                                        14:53:39  

  341 66BB:E6 77        	  inc modeflag		; menu mode loop
  342 66BD:20 ** **     	  jsr menuinput
  343 66C0:20 ** **     	  jsr showmenu
  344                   
  345 66C3:20 ** **     	  jsr do.dbuf
  346                   	  WAITEOF
    1 66C6:A9 80      + 		LDA	#DISPLAY_EOFFLAG
    2 66C8:1C 16 63   + 		TRB	DisplayFlags
    3      66CB       + systemp		.=	*
    4 66CB:2C 16 63   + 		BIT	DisplayFlags
    5 66CE:F0 FB      + 		BEQ	systemp
    6                 + 
  347 66D0:A5 77        	  lda modeflag
  348 66D2:D0 E7        	 bne loop2
  349                   
  350 66D4:64 76        	stz edgeinputlatch
  351 66D6:A5 79        	lda cyclemodesave
  352 66D8:85 78        	sta cyclemode
  353 66DA:80 97        	bra loop
  354                   
  355                   
  356                   
  357 66DC:             erasezpage
  358 66DC:A2 06        	ldx #MYZPSTART
  359 66DE:74 00        .0	  stz 0,x
  360 66E0:E8           	  inx
  361 66E1:E0 80        	  cpx #MYZPEND
  362 66E3:D0 F9        	 bne .0
  363                   
  364 66E5:60           	rts
  365                   
  366                   
  367 66E6:             do.dbuf
  368                   	DBUF_DISPLAY
    1 66E6:08         + 		PHP
    2 66E7:78         + 		SEI
    3 66E8:AD 11 63   + 		LDA	RenderBuffer
    4 66EB:AE 13 63   + 		ldx	DisplayBuffer
    5 66EE:8D 13 63   + 		STA	DisplayBuffer
    6 66F1:8E 11 63   + 		stx	RenderBuffer
    7 66F4:AD 12 63   + 		LDA	RenderBuffer+1
    8 66F7:AE 14 63   + 		ldx	DisplayBuffer+1
    9 66FA:8D 14 63   + 		STA	DisplayBuffer+1
   10 66FD:8E 12 63   + 		stx	RenderBuffer+1
   11 6700:28         + 		PLP
   12                 + 
  369 6701:60           	rts
  370                   
  371                   
  372 6702:             getinput
  373                   	GETJOY
    1 6702:AD B0 FC   + 	  LDA JOYSTICK
    2                 + 
  374 6705:A8           	tay
  375 6706:49 FF        	eor #$ff
  376 6708:05 0C        	ora stick
  377 670A:49 FF        	eor #$ff
  378 670C:85 0D        	sta edgestick
  379 670E:98           	tya
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   58
                                                        14:53:39  

  380 670F:85 0C        	sta stick
  381                   
  382                   ;	lda stick
  383 6711:F0 **        	beq .aa
  384 6713:A9 01        	lda #1
  385 6715:85 77        	sta modeflag
  386                   
  387 6717:A6 0F        .aa	ldx xpos
  388 6719:A4 10        	ldy ypos
  389                   
  390 671B:A5 0C        	lda stick
  391 671D:89 10        	bit #JOY_LEFT
  392 671F:F0 **        	beq .00
  393 6721:CA           	dex
  394 6722:10 **        	bpl .00
  395 6724:A2 00        	ldx #0
  396                   
  397 6726:89 20        .00	bit #JOY_RIGHT
  398 6728:F0 **        	beq .10
  399 672A:E8           	inx
  400 672B:E0 50        	cpx #160-80
  401 672D:90 **        	bcc .10
  402 672F:A2 50        	ldx #160-80
  403                   
  404 6731:89 40        .10	bit #JOY_UP
  405 6733:F0 **        	beq .20
  406 6735:88           	dey
  407 6736:10 **        	bpl .20
  408 6738:A0 00        	ldy #0
  409                   
  410 673A:89 80        .20	bit #JOY_DOWN
  411 673C:F0 **        	beq .30
  412 673E:C8           	iny
  413 673F:C0 33        	cpy #102-51
  414 6741:90 **        	bcc .30
  415 6743:A0 33        	ldy #102-51
  416                   
  417 6745:86 0F        .30	stx xpos
  418 6747:84 10        	sty ypos
  419                   
  420 6749:A5 0D        	lda edgestick
  421 674B:89 08        	bit #OPTION1_BUTTON	; if user hits option1, cancel
  422 674D:F0 **        	beq .40
  423 674F:64 77        	stz modeflag
  424                   
  425 6751:89 04        .40	bit #OPTION2_BUTTON
  426 6753:F0 **        	beq .50
  427 6755:E6 78        	inc cyclemode
  428 6757:A6 78        	ldx cyclemode
  429 6759:E0 03        	cpx #3
  430 675B:90 **        	bcc .50
  431 675D:20 ** **     	jsr setpalette
  432                   
  433 6760:A5 0D        .50	lda edgestick
  434 6762:89 01        	bit #OUTER_BUTTON	; if user hits outer button, zoom i
  435 6764:F0 **        	beq .60
  436 6766:20 ** **     	jsr zoom.in
  437                   
  438 6769:A5 0D        .60	lda edgestick
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   59
                                                        14:53:39  

  439 676B:89 02        	bit #INNER_BUTTON	; if user hits inner button, zoom o
  440 676D:F0 **        	beq .70
  441 676F:20 ** **     	jsr zoom.out
  442                   
  443 6772:             .70
  444                   
  445                   
  446 6772:60           rts0	rts
  447                   
  448                   
  449 6773:             zoom.in
  450 6773:A5 61        	lda step		; if already at minimum step size, don't do
  451 6775:29 FE        	and #<{~1}
  452 6777:05 62        	ora step+1
  453 6779:05 63        	ora step+2
  454 677B:05 64        	ora step+3
  455 677D:05 65        	ora step+4
  456 677F:05 66        	ora step+5
  457 6781:D0 **        	bne .0
  458 6783:60           	rts
  459                   
  460 6784:A9 00        .0	lda #0
  461 6786:85 0A        .1	  sta temp0
  462 6788:0A           	  asl a
  463 6789:AA           	  tax
  464 678A:BD ** **     	  lda scales,x
  465 678D:8D ** **     	  sta bigscb2+SCB_HSIZE
  466 6790:8D ** **     	  sta bigscb2+SCB_VSIZE
  467 6793:BD ** **     	  lda scales+1,x
  468 6796:1A           	  inc a
  469 6797:8D ** **     	  sta bigscb2+SCB_HSIZE+1
  470 679A:8D ** **     	  sta bigscb2+SCB_VSIZE+1
  471 679D:BD ** **     	  lda scales,x
  472 67A0:0A           	  asl a
  473 67A1:8D 52 FC     	  sta MATHD
  474 67A4:BD ** **     	  lda scales+1,x
  475 67A7:2A           	  rol a
  476 67A8:8D 53 FC     	  sta MATHC
  477                   
  478 67AB:A5 0F        	  lda xpos
  479 67AD:8D 54 FC     	  sta MATHB
  480 67B0:9C 55 FC     	  stz MATHA	; MULTIPLY
  481                   
  482 67B3:38           	  sec
  483 67B4:A9 00        	  lda #0
  484                   	  WAITMATH
    1      67B6       + WAITMATH.001A0	.= *
    2 67B6:2C 92 FC   + 	BIT SPRSYS
    3 67B9:30 FB      + 	BMI WAITMATH.001A0
    4                 + 
  485 67BB:ED 61 FC     	  sbc MATHG
  486 67BE:8D ** **     	  sta bigscb2+SCB_HPOS
  487 67C1:A9 00        	  lda #0
  488 67C3:ED 62 FC     	  sbc MATHF
  489 67C6:8D ** **     	  sta bigscb2+SCB_HPOS+1
  490                   
  491 67C9:A5 10        	  lda ypos
  492 67CB:8D 54 FC     	  sta MATHB
  493 67CE:9C 55 FC     	  stz MATHA	; MULTIPLY
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   60
                                                        14:53:39  

  494                   
  495 67D1:38           	  sec
  496 67D2:A9 00        	  lda #0
  497                   	  WAITMATH
    1      67D4       + WAITMATH.001B0	.= *
    2 67D4:2C 92 FC   + 	BIT SPRSYS
    3 67D7:30 FB      + 	BMI WAITMATH.001B0
    4                 + 
  498 67D9:ED 61 FC     	  sbc MATHG
  499 67DC:8D ** **     	  sta bigscb2+SCB_VPOS
  500 67DF:A9 00        	  lda #0
  501 67E1:ED 62 FC     	  sbc MATHF
  502 67E4:8D ** **     	  sta bigscb2+SCB_VPOS+1
  503                   
  504 67E7:A5 7D        .1a	    lda updateflag
  505 67E9:D0 FC        	   bne .1a
  506 67EB:20 ** **     	  jsr showbigscb2
  507 67EE:A9 01        	  lda #1
  508 67F0:85 7D        	  sta updateflag
  509                   
  510 67F2:E6 0A        	  inc temp0
  511 67F4:A5 0A        	  lda temp0
  512 67F6:C9 **        	  cmp #NUMSCALES
  513 67F8:90 8C        	 bcc .1
  514                   
  515 67FA:20 ** **     	jsr showbigscb2
  516 67FD:20 ** **     	jsr screentobigsprite
  517                   
  518 6800:A5 61        	lda step
  519 6802:85 3C        	sta factor1
  520 6804:A5 62        	lda step+1
  521 6806:85 3D        	sta factor1+1
  522 6808:A5 63        	lda step+2
  523 680A:85 3E        	sta factor1+2
  524 680C:A5 64        	lda step+3
  525 680E:85 3F        	sta factor1+3
  526 6810:A5 65        	lda step+4
  527 6812:85 40        	sta factor1+4
  528 6814:A5 66        	lda step+5
  529 6816:85 41        	sta factor1+5
  530 6818:A5 0F        	lda xpos
  531 681A:85 42        	sta factor2
  532 681C:64 43        	stz factor2+1
  533 681E:64 44        	stz factor2+2
  534 6820:64 45        	stz factor2+3
  535 6822:64 46        	stz factor2+4
  536 6824:64 47        	stz factor2+5
  537 6826:20 ** **     	jsr domultiply
  538                   
  539 6829:18           	clc
  540 682A:A5 55        	lda acorner
  541 682C:65 48        	adc product
  542 682E:85 55        	sta acorner
  543 6830:A5 56        	lda acorner+1
  544 6832:65 49        	adc product+1
  545 6834:85 56        	sta acorner+1
  546 6836:A5 57        	lda acorner+2
  547 6838:65 4A        	adc product+2
  548 683A:85 57        	sta acorner+2
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   61
                                                        14:53:39  

  549 683C:A5 58        	lda acorner+3
  550 683E:65 4B        	adc product+3
  551 6840:85 58        	sta acorner+3
  552 6842:A5 59        	lda acorner+4
  553 6844:65 4C        	adc product+4
  554 6846:85 59        	sta acorner+4
  555 6848:A5 5A        	lda acorner+5
  556 684A:65 4D        	adc product+5
  557 684C:85 5A        	sta acorner+5
  558                   
  559 684E:A5 10        	lda ypos
  560 6850:85 42        	sta factor2
  561 6852:20 ** **     	jsr domultiply
  562                   
  563 6855:18           	clc
  564 6856:A5 5B        	lda bcorner
  565 6858:65 48        	adc product
  566 685A:85 5B        	sta bcorner
  567 685C:A5 5C        	lda bcorner+1
  568 685E:65 49        	adc product+1
  569 6860:85 5C        	sta bcorner+1
  570 6862:A5 5D        	lda bcorner+2
  571 6864:65 4A        	adc product+2
  572 6866:85 5D        	sta bcorner+2
  573 6868:A5 5E        	lda bcorner+3
  574 686A:65 4B        	adc product+3
  575 686C:85 5E        	sta bcorner+3
  576 686E:A5 5F        	lda bcorner+4
  577 6870:65 4C        	adc product+4
  578 6872:85 5F        	sta bcorner+4
  579 6874:A5 60        	lda bcorner+5
  580 6876:65 4D        	adc product+5
  581 6878:85 60        	sta bcorner+5
  582                   
  583 687A:46 66        	lsr step+5
  584 687C:66 65        	ror step+4
  585 687E:66 64        	ror step+3
  586 6880:66 63        	ror step+2
  587 6882:66 62        	ror step+1
  588 6884:66 61        	ror step
  589                   
  590 6886:64 77        	stz modeflag
  591 6888:20 ** **     	jsr resetpoint
  592                   
  593 688B:60           	rts
  594                   
  595                   
  596 688C:             zoom.out
  597 688C:A5 66        	lda step+5	; if step size already larger than 1, don'
  598 688E:F0 **        	beq .0
  599 6890:60           	rts
  600                   
  601 6891:A9 00        .0	lda #0
  602 6893:85 0A        .1	  sta temp0
  603 6895:0A           	  asl a
  604 6896:AA           	  tax
  605 6897:BD ** **     	  lda scales+1,x
  606 689A:4A           	  lsr a
  607 689B:BD ** **     	  lda scales,x
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   62
                                                        14:53:39  

  608 689E:6A           	  ror a
  609 689F:85 0B        	  sta temp1
  610 68A1:38           	  sec
  611 68A2:A9 00        	  lda #<$100
  612 68A4:E5 0B        	  sbc temp1
  613 68A6:8D ** **     	  sta bigscb2+SCB_HSIZE
  614 68A9:8D ** **     	  sta bigscb2+SCB_VSIZE
  615 68AC:A9 01        	  lda #>$100
  616 68AE:E9 00        	  sbc #0
  617 68B0:8D ** **     	  sta bigscb2+SCB_HSIZE+1
  618 68B3:8D ** **     	  sta bigscb2+SCB_VSIZE+1
  619                   
  620 68B6:BD ** **     	  lda scales,x
  621 68B9:8D 52 FC     	  sta MATHD
  622 68BC:BD ** **     	  lda scales+1,x
  623 68BF:8D 53 FC     	  sta MATHC
  624                   
  625 68C2:A5 0F        	  lda xpos
  626 68C4:8D 54 FC     	  sta MATHB
  627 68C7:9C 55 FC     	  stz MATHA	; MULTIPLY
  628                   
  629                   	  WAITMATH
    1      68CA       + WAITMATH.001C0	.= *
    2 68CA:2C 92 FC   + 	BIT SPRSYS
    3 68CD:30 FB      + 	BMI WAITMATH.001C0
    4                 + 
  630 68CF:AD 61 FC     	  lda MATHG
  631 68D2:8D ** **     	  sta bigscb2+SCB_HPOS
  632 68D5:AD 62 FC     	  lda MATHF
  633 68D8:8D ** **     	  sta bigscb2+SCB_HPOS+1
  634                   
  635 68DB:A5 10        	  lda ypos
  636 68DD:8D 54 FC     	  sta MATHB
  637 68E0:9C 55 FC     	  stz MATHA	; MULTIPLY
  638                   
  639                   	  WAITMATH
    1      68E3       + WAITMATH.001D0	.= *
    2 68E3:2C 92 FC   + 	BIT SPRSYS
    3 68E6:30 FB      + 	BMI WAITMATH.001D0
    4                 + 
  640 68E8:AD 61 FC     	  lda MATHG
  641 68EB:8D ** **     	  sta bigscb2+SCB_VPOS
  642 68EE:AD 62 FC     	  lda MATHF
  643 68F1:8D ** **     	  sta bigscb2+SCB_VPOS+1
  644                   
  645 68F4:A5 7D        .1a	    lda updateflag
  646 68F6:D0 FC        	   bne .1a
  647 68F8:20 ** **     	  jsr showbigscb3
  648 68FB:A9 01        	  lda #1
  649 68FD:85 7D        	  sta updateflag
  650                   
  651 68FF:E6 0A        	  inc temp0
  652 6901:A5 0A        	  lda temp0
  653 6903:C9 **        	  cmp #NUMSCALES
  654 6905:90 8C        	 bcc .1
  655                   
  656 6907:20 ** **     	jsr showbigscb3
  657 690A:20 ** **     	jsr screentobigsprite
  658                   
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   63
                                                        14:53:39  

  659 690D:06 61        	asl step
  660 690F:26 62        	rol step+1
  661 6911:26 63        	rol step+2
  662 6913:26 64        	rol step+3
  663 6915:26 65        	rol step+4
  664 6917:26 66        	rol step+5
  665                   
  666 6919:A5 61        	lda step
  667 691B:85 3C        	sta factor1
  668 691D:A5 62        	lda step+1
  669 691F:85 3D        	sta factor1+1
  670 6921:A5 63        	lda step+2
  671 6923:85 3E        	sta factor1+2
  672 6925:A5 64        	lda step+3
  673 6927:85 3F        	sta factor1+3
  674 6929:A5 65        	lda step+4
  675 692B:85 40        	sta factor1+4
  676 692D:A5 66        	lda step+5
  677 692F:85 41        	sta factor1+5
  678 6931:A5 0F        	lda xpos
  679 6933:85 42        	sta factor2
  680 6935:64 43        	stz factor2+1
  681 6937:64 44        	stz factor2+2
  682 6939:64 45        	stz factor2+3
  683 693B:64 46        	stz factor2+4
  684 693D:64 47        	stz factor2+5
  685 693F:20 ** **     	jsr domultiply
  686                   
  687 6942:38           	sec
  688 6943:A5 55        	lda acorner
  689 6945:E5 48        	sbc product
  690 6947:85 55        	sta acorner
  691 6949:A5 56        	lda acorner+1
  692 694B:E5 49        	sbc product+1
  693 694D:85 56        	sta acorner+1
  694 694F:A5 57        	lda acorner+2
  695 6951:E5 4A        	sbc product+2
  696 6953:85 57        	sta acorner+2
  697 6955:A5 58        	lda acorner+3
  698 6957:E5 4B        	sbc product+3
  699 6959:85 58        	sta acorner+3
  700 695B:A5 59        	lda acorner+4
  701 695D:E5 4C        	sbc product+4
  702 695F:85 59        	sta acorner+4
  703 6961:A5 5A        	lda acorner+5
  704 6963:E5 4D        	sbc product+5
  705 6965:85 5A        	sta acorner+5
  706                   
  707 6967:A5 10        	lda ypos
  708 6969:85 42        	sta factor2
  709 696B:20 ** **     	jsr domultiply
  710                   
  711 696E:38           	sec
  712 696F:A5 5B        	lda bcorner
  713 6971:E5 48        	sbc product
  714 6973:85 5B        	sta bcorner
  715 6975:A5 5C        	lda bcorner+1
  716 6977:E5 49        	sbc product+1
  717 6979:85 5C        	sta bcorner+1
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   64
                                                        14:53:39  

  718 697B:A5 5D        	lda bcorner+2
  719 697D:E5 4A        	sbc product+2
  720 697F:85 5D        	sta bcorner+2
  721 6981:A5 5E        	lda bcorner+3
  722 6983:E5 4B        	sbc product+3
  723 6985:85 5E        	sta bcorner+3
  724 6987:A5 5F        	lda bcorner+4
  725 6989:E5 4C        	sbc product+4
  726 698B:85 5F        	sta bcorner+4
  727 698D:A5 60        	lda bcorner+5
  728 698F:E5 4D        	sbc product+5
  729 6991:85 60        	sta bcorner+5
  730                   
  731 6993:64 77        	stz modeflag
  732 6995:20 ** **     	jsr resetpoint
  733                   
  734 6998:60           	rts
  735                   
  736                   
  737                   
  738 6999:             myeof
  739 6999:5A           	phy
  740 699A:E6 7C        	 inc frame
  741                   
  742                   
  743 699C:AD ** **     	 lda cursorscb+SCB_PALETTE-4
  744 699F:1A           	 inc a
  745 69A0:29 0F        	 and #$0f
  746 69A2:8D ** **     	 sta cursorscb+SCB_PALETTE-4
  747                   
  748 69A5:A5 7D        	 lda updateflag
  749 69A7:F0 **        	 beq .3
  750 69A9:C6 7D        	 dec updateflag
  751                   
  752 69AB:E6 7A        .3	 inc cyclecount
  753 69AD:A5 7A        	 lda cyclecount
  754 69AF:C5 7B        	 cmp cyclerate
  755 69B1:90 **        	 bcc .0
  756 69B3:64 7A        	 stz cyclecount
  757                   
  758 69B5:A5 78        	 lda cyclemode
  759 69B7:F0 **        	 beq .0
  760 69B9:3A           	 dec a
  761 69BA:F0 **        	 beq .1
  762 69BC:3A           	 dec a
  763 69BD:F0 **        	 beq .2
  764                   
  765                   
  766 69BF:AD AE FD     .1	 lda GREENE
  767 69C2:48           	 pha
  768 69C3:AD BE FD     	  lda BLUEREDE
  769 69C6:48           	  pha
  770 69C7:A0 0D        	   ldy #13
  771 69C9:B9 A0 FD     .1a	     lda GREEN0,y
  772 69CC:99 A1 FD     	     sta GREEN1,y
  773 69CF:B9 B0 FD     	     lda BLUERED0,y
  774 69D2:99 B1 FD     	     sta BLUERED1,y
  775 69D5:88           	     dey
  776 69D6:10 F1        	    bpl .1a
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   65
                                                        14:53:39  

  777 69D8:68           	  pla
  778 69D9:8D B0 FD     	  sta BLUERED0
  779 69DC:68           	 pla
  780 69DD:8D A0 FD     	 sta GREEN0
  781 69E0:80 **        	 bra .0
  782                   
  783                   
  784 69E2:AD A0 FD     .2	 lda GREEN0
  785 69E5:48           	 pha
  786 69E6:AD B0 FD     	  lda BLUERED0
  787 69E9:48           	  pha
  788 69EA:A0 00        	   ldy #0
  789 69EC:B9 A1 FD     .2a	     lda GREEN1,y
  790 69EF:99 A0 FD     	     sta GREEN0,y
  791 69F2:B9 B1 FD     	     lda BLUERED1,y
  792 69F5:99 B0 FD     	     sta BLUERED0,y
  793 69F8:C8           	     iny
  794 69F9:C0 0E        	     cpy #14
  795 69FB:90 EF        	    bcc .2a
  796 69FD:68           	  pla
  797 69FE:8D BE FD     	  sta BLUEREDE
  798 6A01:68           	 pla
  799 6A02:8D AE FD     	 sta GREENE
  800                   ;	 bra .0
  801                   
  802                   
  803                   .0	 GETJOY
    1 6A05:AD B0 FC   + 	  LDA JOYSTICK
    2                 + 
  804 6A08:A8           	 tay
  805 6A09:49 FF        	 eor #$ff
  806 6A0B:05 74        	 ora input
  807 6A0D:49 FF        	 eor #$ff
  808 6A0F:85 75        	 sta edgeinput
  809 6A11:04 76        	 tsb edgeinputlatch
  810 6A13:98           	 tya
  811 6A14:85 74        	 sta input
  812                   	 GETSWITCH
    1 6A16:AD B1 FC   + 	  LDA SWITCHES
    2                 + 
  813 6A19:29 01        	 and #PAUSE_SWITCH
  814 6A1B:04 76        	 tsb edgeinputlatch
  815                   
  816 6A1D:7A           	ply
  817                   
  818 6A1E:             myeofendexit
  819 6A1E:4C 72 67     	jmp rts0	; mod
  820                   
  821                   
  822 6A21:             setpalette
  823 6A21:64 78        	stz cyclemode
  824                   
  825 6A23:64 07        	stz ind0+1
  826 6A25:A5 7E        	lda palettenum
  827 6A27:0A           	asl a
  828 6A28:26 07        	rol ind0+1
  829 6A2A:0A           	asl a
  830 6A2B:26 07        	rol ind0+1
  831 6A2D:0A           	asl a
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   66
                                                        14:53:39  

  832 6A2E:26 07        	rol ind0+1
  833 6A30:0A           	asl a
  834 6A31:26 07        	rol ind0+1
  835 6A33:0A           	asl a
  836 6A34:26 07        	rol ind0+1
  837 6A36:69 **        	adc #<palettes
  838 6A38:85 06        	sta ind0
  839 6A3A:A5 07        	lda ind0+1
  840 6A3C:69 **        	adc #>palettes
  841 6A3E:85 07        	sta ind0+1
  842 6A40:A0 1F        	ldy #31
  843 6A42:B1 06        .0	  lda (ind0),y
  844 6A44:99 A0 FD     	  sta GREEN0,y
  845 6A47:88           	  dey
  846 6A48:10 F8        	 bpl .0
  847                   
  848 6A4A:60           	rts
  849                   
  850                   
  851 6A4B:             showmenu
  852 6A4B:A5 7E        	lda palettenum
  853 6A4D:C9 F0        	cmp #$f0
  854 6A4F:90 **        	bcc .00
  855 6A51:A9 **        	lda #NUMPALETTES-1
  856 6A53:85 7E        	sta palettenum
  857 6A55:C9 **        .00	cmp #NUMPALETTES
  858 6A57:90 **        	bcc .01
  859 6A59:64 7E        	stz palettenum
  860                   
  861 6A5B:20 21 6A     .01	jsr setpalette
  862                   
  863 6A5E:A2 00        	ldx #0
  864 6A60:A4 73        	ldy juliaflag
  865 6A62:F0 **        	beq .10
  866 6A64:A0 **        	ldy #title2-title1
  867 6A66:B9 ** **     .10	  lda title1,y
  868 6A69:9D ** **     	  sta menu,x
  869 6A6C:C8           	  iny
  870 6A6D:E8           	  inx
  871 6A6E:E0 **        	  cpx #TITLELEN
  872 6A70:90 F4        	 bcc .10
  873                   
  874 6A72:A2 **        	ldx #<m1
  875 6A74:A0 **        	ldy #>m1
  876 6A76:A5 5A        	lda acorner+5
  877 6A78:20 ** **     	jsr putbyte.xy
  878 6A7B:20 ** **     	jsr inc.ind0
  879 6A7E:A5 59        	lda acorner+4
  880 6A80:20 ** **     	jsr putbyte
  881 6A83:A5 58        	lda acorner+3
  882 6A85:20 ** **     	jsr putbyte
  883 6A88:A5 57        	lda acorner+2
  884 6A8A:20 ** **     	jsr putbyte
  885 6A8D:A5 56        	lda acorner+1
  886 6A8F:20 ** **     	jsr putbyte
  887 6A92:A5 55        	lda acorner
  888 6A94:20 ** **     	jsr putbyte
  889                   
  890 6A97:A2 **        	ldx #<m2
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   67
                                                        14:53:39  

  891 6A99:A0 **        	ldy #>m2
  892 6A9B:A5 60        	lda bcorner+5
  893 6A9D:20 ** **     	jsr putbyte.xy
  894 6AA0:20 ** **     	jsr inc.ind0
  895 6AA3:A5 5F        	lda bcorner+4
  896 6AA5:20 ** **     	jsr putbyte
  897 6AA8:A5 5E        	lda bcorner+3
  898 6AAA:20 ** **     	jsr putbyte
  899 6AAD:A5 5D        	lda bcorner+2
  900 6AAF:20 ** **     	jsr putbyte
  901 6AB2:A5 5C        	lda bcorner+1
  902 6AB4:20 ** **     	jsr putbyte
  903 6AB7:A5 5B        	lda bcorner
  904 6AB9:20 ** **     	jsr putbyte
  905                   
  906 6ABC:A2 **        	ldx #<m3
  907 6ABE:A0 **        	ldy #>m3
  908 6AC0:A5 66        	lda step+5
  909 6AC2:20 ** **     	jsr putbyte.xy
  910 6AC5:20 ** **     	jsr inc.ind0
  911 6AC8:A5 65        	lda step+4
  912 6ACA:20 ** **     	jsr putbyte
  913 6ACD:A5 64        	lda step+3
  914 6ACF:20 ** **     	jsr putbyte
  915 6AD2:A5 63        	lda step+2
  916 6AD4:20 ** **     	jsr putbyte
  917 6AD7:A5 62        	lda step+1
  918 6AD9:20 ** **     	jsr putbyte
  919 6ADC:A5 61        	lda step
  920 6ADE:20 ** **     	jsr putbyte
  921                   
  922 6AE1:A2 **        	ldx #<m4
  923 6AE3:A0 **        	ldy #>m4
  924 6AE5:A5 17        	lda depth+1
  925 6AE7:20 ** **     	jsr putbyte.xy
  926 6AEA:A5 16        	lda depth
  927 6AEC:20 ** **     	jsr putbyte
  928                   
  929 6AEF:A2 **        	ldx #<m5
  930 6AF1:A0 **        	ldy #>m5
  931 6AF3:A5 7E        	lda palettenum
  932 6AF5:20 ** **     	jsr putbyte.xy
  933                   
  934 6AF8:A2 **        	ldx #<m6
  935 6AFA:A0 **        	ldy #>m6
  936 6AFC:A5 7B        	lda cyclerate
  937 6AFE:20 ** **     	jsr putbyte.xy
  938                   
  939 6B01:A2 **        	ldx #<m7
  940 6B03:A0 **        	ldy #>m7
  941 6B05:A5 6C        	lda xjul+5
  942 6B07:20 ** **     	jsr putbyte.xy
  943 6B0A:20 ** **     	jsr inc.ind0
  944 6B0D:A5 6B        	lda xjul+4
  945 6B0F:20 ** **     	jsr putbyte
  946 6B12:A5 6A        	lda xjul+3
  947 6B14:20 ** **     	jsr putbyte
  948 6B17:A5 69        	lda xjul+2
  949 6B19:20 ** **     	jsr putbyte
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   68
                                                        14:53:39  

  950 6B1C:A5 68        	lda xjul+1
  951 6B1E:20 ** **     	jsr putbyte
  952 6B21:A5 67        	lda xjul
  953 6B23:20 ** **     	jsr putbyte
  954                   
  955 6B26:A2 **        	ldx #<m8
  956 6B28:A0 **        	ldy #>m8
  957 6B2A:A5 72        	lda yjul+5
  958 6B2C:20 ** **     	jsr putbyte.xy
  959 6B2F:20 ** **     	jsr inc.ind0
  960 6B32:A5 71        	lda yjul+4
  961 6B34:20 ** **     	jsr putbyte
  962 6B37:A5 70        	lda yjul+3
  963 6B39:20 ** **     	jsr putbyte
  964 6B3C:A5 6F        	lda yjul+2
  965 6B3E:20 ** **     	jsr putbyte
  966 6B41:A5 6E        	lda yjul+1
  967 6B43:20 ** **     	jsr putbyte
  968 6B46:A5 6D        	lda yjul
  969 6B48:20 ** **     	jsr putbyte
  970                   
  971 6B4B:20 ** **     	jsr showbigsprite
  972                   
  973 6B4E:A9 05        	lda #5
  974 6B50:8D ** **     	sta textscb+SCB_HPOS
  975 6B53:A9 03        	lda #3
  976 6B55:8D ** **     	sta textscb+SCB_VPOS
  977                   
  978 6B58:A2 **        	ldx #<menu
  979 6B5A:A0 **        	ldy #>menu
  980 6B5C:20 ** **     	jsr showmessage
  981                   
  982 6B5F:A4 7F        	ldy whichdigit
  983 6B61:B9 ** **     	lda digitxpos,y
  984 6B64:8D ** **     	sta cursorscb+SCB_HPOS
  985 6B67:B9 ** **     	lda digitypos,y
  986 6B6A:8D ** **     	sta cursorscb+SCB_VPOS
  987                   
  988 6B6D:A2 **        	ldx #<cursorscb
  989 6B6F:A0 **        	ldy #>cursorscb
  990 6B71:20 ** **     	jsr reshowsprites
  991                   
  992 6B74:60           	rts
  993                   
  994                   
  995                   
  996                   
  997 6B75:             showresult
  998 6B75:20 ** **     	jsr showbigsprite
  999                   
 1000 6B78:A5 0F        	lda xpos
 1001 6B7A:8D ** **     	sta box1scb+SCB_HPOS
 1002 6B7D:8D ** **     	sta box2scb+SCB_HPOS
 1003 6B80:8D ** **     	sta box3scb+SCB_HPOS
 1004 6B83:18           	clc
 1005 6B84:69 4F        	adc #79
 1006 6B86:8D ** **     	sta box4scb+SCB_HPOS
 1007                   
 1008 6B89:A5 10        	lda ypos
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   69
                                                        14:53:39  

 1009 6B8B:8D ** **     	sta box1scb+SCB_VPOS
 1010 6B8E:8D ** **     	sta box3scb+SCB_VPOS
 1011 6B91:8D ** **     	sta box4scb+SCB_VPOS
 1012 6B94:18           	clc
 1013 6B95:69 32        	adc #50
 1014 6B97:8D ** **     	sta box2scb+SCB_VPOS
 1015                   
 1016 6B9A:20 ** **     	jsr showbox
 1017                   
 1018 6B9D:60           	rts
 1019                   
 1020                   
 1021 6B9E:             showbox
 1022 6B9E:A2 **        	ldx #<box1scb
 1023 6BA0:A0 **        	ldy #>box1scb
 1024 6BA2:4C ** **     	jmp reshowsprites
 1025                   
 1026                   
 1027 6BA5:             showbigsprite
 1028 6BA5:A2 **        	ldx #<bigscb
 1029 6BA7:A0 **        	ldy #>bigscb
 1030 6BA9:4C ** **     	jmp showsprites
 1031                   
 1032                   
 1033 6BAC:             showbigscb2
 1034 6BAC:A2 **        	ldx #<bigscb2
 1035 6BAE:A0 **        	ldy #>bigscb2
 1036 6BB0:20 ** **     	jsr showsprites
 1037 6BB3:4C E6 66     	jmp do.dbuf
 1038                   
 1039                   
 1040 6BB6:             showbigscb3
 1041 6BB6:A2 **        	ldx #<erasescb
 1042 6BB8:A0 **        	ldy #>erasescb
 1043 6BBA:20 ** **     	jsr showsprites
 1044 6BBD:A2 **        	ldx #<bigscb2
 1045 6BBF:A0 **        	ldy #>bigscb2
 1046 6BC1:20 ** **     	jsr reshowsprites
 1047 6BC4:4C E6 66     	jmp do.dbuf
 1048                   
 1049                   
 1050 6BC7:             screentobigsprite
 1051 6BC7:A9 00        	lda #<screen0
 1052 6BC9:85 06        	sta ind0
 1053 6BCB:A9 02        	lda #>screen0
 1054 6BCD:85 07        	sta ind0+1
 1055 6BCF:A9 D1        	lda #<{bigsprite+1}
 1056 6BD1:85 08        	sta ind1
 1057 6BD3:A9 41        	lda #>{bigsprite+1}
 1058 6BD5:85 09        	sta ind1+1
 1059 6BD7:A2 66        	ldx #102
 1060                   
 1061 6BD9:A0 4F        .0	  ldy #79
 1062 6BDB:B1 06        .1	    lda (ind0),y
 1063 6BDD:91 08        	    sta (ind1),y
 1064 6BDF:88           	    dey
 1065 6BE0:10 F9        	   bpl .1
 1066 6BE2:18           	  clc
 1067 6BE3:A5 06        	  lda ind0
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   70
                                                        14:53:39  

 1068 6BE5:69 50        	  adc #<80
 1069 6BE7:85 06        	  sta ind0
 1070 6BE9:A5 07        	  lda ind0+1
 1071 6BEB:69 00        	  adc #>80
 1072 6BED:85 07        	  sta ind0+1
 1073 6BEF:A5 08        	  lda ind1
 1074 6BF1:69 52        	  adc #<82
 1075 6BF3:85 08        	  sta ind1
 1076 6BF5:A5 09        	  lda ind1+1
 1077 6BF7:69 00        	  adc #>82
 1078 6BF9:85 09        	  sta ind1+1
 1079 6BFB:CA           	  dex
 1080 6BFC:D0 DB        	 bne .0
 1081                   
 1082 6BFE:60           	rts
 1083                   
 1084                   
 1085 6BFF:             showsprites
 1086 6BFF:AD 11 63     	lda RenderBuffer
 1087 6C02:8D 08 FC     	sta VIDBASL
 1088 6C05:AD 12 63     	lda RenderBuffer+1
 1089 6C08:8D 09 FC     	sta VIDBASH
 1090                   
 1091 6C0B:             reshowsprites
 1092 6C0B:8E 10 FC     	stx SCBNEXTL
 1093 6C0E:8C 11 FC     	sty SCBNEXTH
 1094                   
 1095 6C11:A9 01        	lda #1
 1096 6C13:8D 91 FC     	sta SPRGO
 1097                   	WAITSUZY
    1      6C16       + WAITSUZY.00201	.= *
    2 6C16:A9 01      + 		lda #SUZY_SPACE
    3 6C18:0C F9 FF   + 		tsb MAPCTL		
    4 6C1B:9C 91 FD   + 		STZ	CPUSLEEP
    5 6C1E:1C F9 FF   + 		trb MAPCTL		
    6 6C21:AD 92 FC   + 		LDA	SPRSYS		
    7 6C24:4A         + 		LSR	A		
    8 6C25:B0 EF      + 		BCS	WAITSUZY.00201		
    9 6C27:9C 90 FD   + 		STZ	SDONEACK
   10                 + 
 1098                   
 1099 6C2A:60           	rts
 1100                   
 1101                   
 1102                   ; plotpoint - plot a point on the handy screen
 1103                   ; on input:
 1104                   ;	X - x coordinate
 1105                   ;	Y - y coordinate
 1106                   ;	A - color to plot
 1107 6C2B:             plotpoint
 1108 6C2B:48           	pha
 1109 6C2C:8C 52 FC     	 sty MATHD	; stz MATHC
 1110 6C2F:A9 52        	 lda #82
 1111 6C31:8D 54 FC     	 sta MATHB
 1112 6C34:9C 55 FC     	 stz MATHA	; MULTIPLY
 1113                   
 1114 6C37:18           	 clc
 1115 6C38:A9 D1        	 lda #<{bigsprite+1}
 1116                   	 WAITMATH
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   71
                        mandel.src                      14:53:39  

    1      6C3A       + WAITMATH.00210	.= *
    2 6C3A:2C 92 FC   + 	BIT SPRSYS
    3 6C3D:30 FB      + 	BMI WAITMATH.00210
    4                 + 
 1117 6C3F:6D 60 FC     	 adc MATHH
 1118 6C42:85 06        	 sta ind0
 1119 6C44:A9 41        	 lda #>{bigsprite+1}
 1120 6C46:6D 61 FC     	 adc MATHG
 1121 6C49:85 07        	 sta ind0+1
 1122 6C4B:8A           	 txa
 1123 6C4C:4A           	 lsr a
 1124 6C4D:A8           	 tay
 1125 6C4E:A9 00        	 lda #0
 1126 6C50:2A           	 rol a
 1127 6C51:AA           	 tax
 1128 6C52:68           	pla
 1129 6C53:51 06        	eor (ind0),y
 1130 6C55:3D ** **     	and nybblemask,x
 1131 6C58:51 06        	eor (ind0),y
 1132 6C5A:91 06        	sta (ind0),y
 1133                   
 1134 6C5C:60           	rts
 1135                   
 1136                   
 1137 6C5D:             initbigsprite
 1138 6C5D:A9 D0        	lda #<bigsprite
 1139 6C5F:85 06        	sta ind0
 1140 6C61:A9 41        	lda #>bigsprite
 1141 6C63:85 07        	sta ind0+1
 1142 6C65:A2 66        	ldx #102
 1143 6C67:A0 51        	ldy #81
 1144 6C69:A9 F0        .0	  lda #$f0		; clear out last byte on row
 1145 6C6B:91 06        	  sta (ind0),y
 1146 6C6D:A9 52        	  lda #82		; set offest pointer at beginning of row
 1147 6C6F:92 06        	  sta (ind0)
 1148 6C71:18           	  clc
 1149 6C72:65 06        	  adc ind0
 1150 6C74:85 06        	  sta ind0
 1151 6C76:90 **        	  bcc .0a
 1152 6C78:E6 07        	  inc ind0+1
 1153 6C7A:CA           .0a	  dex
 1154 6C7B:D0 EC        	 bne .0
 1155                   
 1156 6C7D:A9 00        	lda #0			; mark the end of the sprite
 1157 6C7F:92 06        	sta (ind0)
 1158                   
 1159 6C81:4C A5 6B     	jmp showbigsprite	; rts
 1160                   
 1161                   
 1162 6C84:             dosquare
 1163 6C84:64 54        	stz negflag
 1164 6C86:A5 41        	lda factor1+5
 1165 6C88:10 **        	bpl .1
 1166 6C8A:38           	sec
 1167 6C8B:A9 00        	lda #0
 1168 6C8D:E5 3C        	sbc factor1
 1169 6C8F:85 3C        	sta factor1
 1170 6C91:A9 00        	lda #0
 1171 6C93:E5 3D        	sbc factor1+1
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   72
                                                        14:53:39  

 1172 6C95:85 3D        	sta factor1+1
 1173 6C97:A9 00        	lda #0
 1174 6C99:E5 3E        	sbc factor1+2
 1175 6C9B:85 3E        	sta factor1+2
 1176 6C9D:A9 00        	lda #0
 1177 6C9F:E5 3F        	sbc factor1+3
 1178 6CA1:85 3F        	sta factor1+3
 1179 6CA3:A9 00        	lda #0
 1180 6CA5:E5 40        	sbc factor1+4
 1181 6CA7:85 40        	sta factor1+4
 1182 6CA9:A9 00        	lda #0
 1183 6CAB:E5 41        	sbc factor1+5
 1184 6CAD:85 41        	sta factor1+5
 1185 6CAF:A5 3C        .1	lda factor1
 1186 6CB1:85 42        	sta factor2
 1187 6CB3:A5 3D        	lda factor1+1
 1188 6CB5:85 43        	sta factor2+1
 1189 6CB7:A5 3E        	lda factor1+2
 1190 6CB9:85 44        	sta factor2+2
 1191 6CBB:A5 3F        	lda factor1+3
 1192 6CBD:85 45        	sta factor2+3
 1193 6CBF:A5 40        	lda factor1+4
 1194 6CC1:85 46        	sta factor2+4
 1195 6CC3:A5 41        	lda factor1+5
 1196 6CC5:85 47        	sta factor2+5
 1197                   
 1198 6CC7:80 **        	bra dom.2
 1199                   
 1200                   
 1201 6CC9:             domultiply
 1202 6CC9:64 54        	stz negflag
 1203 6CCB:A5 41        	lda factor1+5
 1204 6CCD:10 **        	bpl dom.1
 1205 6CCF:38           	sec
 1206 6CD0:A9 00        	lda #0
 1207 6CD2:E5 3C        	sbc factor1
 1208 6CD4:85 3C        	sta factor1
 1209 6CD6:A9 00        	lda #0
 1210 6CD8:E5 3D        	sbc factor1+1
 1211 6CDA:85 3D        	sta factor1+1
 1212 6CDC:A9 00        	lda #0
 1213 6CDE:E5 3E        	sbc factor1+2
 1214 6CE0:85 3E        	sta factor1+2
 1215 6CE2:A9 00        	lda #0
 1216 6CE4:E5 3F        	sbc factor1+3
 1217 6CE6:85 3F        	sta factor1+3
 1218 6CE8:A9 00        	lda #0
 1219 6CEA:E5 40        	sbc factor1+4
 1220 6CEC:85 40        	sta factor1+4
 1221 6CEE:A9 00        	lda #0
 1222 6CF0:E5 41        	sbc factor1+5
 1223 6CF2:85 41        	sta factor1+5
 1224 6CF4:E6 54        	inc negflag
 1225                   
 1226 6CF6:             dom.1
 1227 6CF6:A5 47        	lda factor2+5
 1228 6CF8:10 **        	bpl dom.2
 1229 6CFA:38           	sec
 1230 6CFB:A9 00        	lda #0
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   73
                                                        14:53:39  

 1231 6CFD:E5 42        	sbc factor2
 1232 6CFF:85 42        	sta factor2
 1233 6D01:A9 00        	lda #0
 1234 6D03:E5 43        	sbc factor2+1
 1235 6D05:85 43        	sta factor2+1
 1236 6D07:A9 00        	lda #0
 1237 6D09:E5 44        	sbc factor2+2
 1238 6D0B:85 44        	sta factor2+2
 1239 6D0D:A9 00        	lda #0
 1240 6D0F:E5 45        	sbc factor2+3
 1241 6D11:85 45        	sta factor2+3
 1242 6D13:A9 00        	lda #0
 1243 6D15:E5 46        	sbc factor2+4
 1244 6D17:85 46        	sta factor2+4
 1245 6D19:A9 00        	lda #0
 1246 6D1B:E5 47        	sbc factor2+5
 1247 6D1D:85 47        	sta factor2+5
 1248 6D1F:E6 54        	inc negflag
 1249                   
 1250 6D21:             dom.2
 1251 6D21:A5 3C        	lda factor1	; A0*B0
 1252 6D23:8D 52 FC     	sta MATHD
 1253 6D26:A5 3D        	lda factor1+1
 1254 6D28:8D 53 FC     	sta MATHC
 1255 6D2B:A5 42        	lda factor2
 1256 6D2D:8D 54 FC     	sta MATHB
 1257 6D30:A5 43        	lda factor2+1
 1258 6D32:8D 55 FC     	sta MATHA	; MULTIPLY
 1259                   
 1260                   	WAITMATH
    1      6D35       + WAITMATH.00220	.= *
    2 6D35:2C 92 FC   + 	BIT SPRSYS
    3 6D38:30 FB      + 	BMI WAITMATH.00220
    4                 + 
 1261                   
 1262 6D3A:AD 60 FC     	lda MATHH
 1263 6D3D:85 48        	sta product
 1264 6D3F:AD 61 FC     	lda MATHG
 1265 6D42:85 49        	sta product+1
 1266 6D44:AD 62 FC     	lda MATHF
 1267 6D47:8D 6C FC     	sta MATHM
 1268 6D4A:AD 63 FC     	lda MATHE
 1269 6D4D:8D 6D FC     	sta MATHL
 1270 6D50:9C 6E FC     	stz MATHK	; stz MATHJ
 1271                   
 1272 6D53:A2 00        	ldx #0		; prepare to accumulate overflows
 1273 6D55:A5 44        	lda factor2+2	; A0*B1
 1274 6D57:8D 54 FC     	sta MATHB
 1275 6D5A:A5 45        	lda factor2+3
 1276 6D5C:8D 55 FC     	sta MATHA	; MULTIPLY
 1277                   
 1278                   	WAITMATH
    1      6D5F       + WAITMATH.00230	.= *
    2 6D5F:2C 92 FC   + 	BIT SPRSYS
    3 6D62:30 FB      + 	BMI WAITMATH.00230
    4                 + 
 1279                   
 1280 6D64:A5 42        	lda factor2	; B0*A1
 1281 6D66:8D 52 FC     	sta MATHD
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   74
                                                        14:53:39  

 1282 6D69:A5 43        	lda factor2+1
 1283 6D6B:8D 53 FC     	sta MATHC
 1284 6D6E:A5 3E        	lda factor1+2
 1285 6D70:8D 54 FC     	sta MATHB
 1286 6D73:A5 3F        	lda factor1+3
 1287 6D75:8D 55 FC     	sta MATHA	; MULTIPLY
 1288                   
 1289 6D78:A9 20        	lda #MATHCARRY
 1290                   	WAITMATH
    1      6D7A       + WAITMATH.00240	.= *
    2 6D7A:2C 92 FC   + 	BIT SPRSYS
    3 6D7D:30 FB      + 	BMI WAITMATH.00240
    4                 + 
 1291 6D7F:F0 **        	beq .00		; get overflow state in x
 1292 6D81:E8           	inx
 1293                   
 1294 6D82:AD 6C FC     .00	lda MATHM
 1295 6D85:85 4A        	sta product+2
 1296 6D87:AD 6D FC     	lda MATHL
 1297 6D8A:85 4B        	sta product+3
 1298 6D8C:AD 6E FC     	lda MATHK
 1299 6D8F:8D 6C FC     	sta MATHM
 1300 6D92:AD 6F FC     	lda MATHJ
 1301 6D95:8D 6D FC     	sta MATHL
 1302 6D98:8E 6E FC     	stx MATHK	; stz MATHJ
 1303                   
 1304 6D9B:A2 00        	ldx #0		; prepare to accumulate overflows
 1305 6D9D:A5 40        	lda factor1+4	; B0*A2
 1306 6D9F:8D 54 FC     	sta MATHB
 1307 6DA2:A5 41        	lda factor1+5
 1308 6DA4:8D 55 FC     	sta MATHA	; MULTIPLY
 1309                   
 1310                   	WAITMATH
    1      6DA7       + WAITMATH.00250	.= *
    2 6DA7:2C 92 FC   + 	BIT SPRSYS
    3 6DAA:30 FB      + 	BMI WAITMATH.00250
    4                 + 
 1311                   
 1312 6DAC:A5 44        	lda factor2+2	; B1*A1
 1313 6DAE:8D 52 FC     	sta MATHD
 1314 6DB1:A5 45        	lda factor2+3
 1315 6DB3:8D 53 FC     	sta MATHC
 1316 6DB6:A5 3E        	lda factor1+2
 1317 6DB8:8D 54 FC     	sta MATHB
 1318 6DBB:A5 3F        	lda factor1+3
 1319 6DBD:8D 55 FC     	sta MATHA	; MULTIPLY
 1320                   
 1321 6DC0:A9 20        	lda #MATHCARRY
 1322                   	WAITMATH
    1      6DC2       + WAITMATH.00260	.= *
    2 6DC2:2C 92 FC   + 	BIT SPRSYS
    3 6DC5:30 FB      + 	BMI WAITMATH.00260
    4                 + 
 1323 6DC7:F0 **        	beq .01
 1324 6DC9:E8           	inx
 1325                   
 1326 6DCA:A5 46        .01	lda factor2+4	; B2*A0
 1327 6DCC:8D 52 FC     	sta MATHD
 1328 6DCF:A5 47        	lda factor2+5
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   75
                                                        14:53:39  

 1329 6DD1:8D 53 FC     	sta MATHC
 1330 6DD4:A5 3C        	lda factor1
 1331 6DD6:8D 54 FC     	sta MATHB
 1332 6DD9:A5 3D        	lda factor1+1
 1333 6DDB:8D 55 FC     	sta MATHA	; MULTIPLY
 1334                   
 1335 6DDE:A9 20        	lda #MATHCARRY
 1336                   	WAITMATH
    1      6DE0       + WAITMATH.00270	.= *
    2 6DE0:2C 92 FC   + 	BIT SPRSYS
    3 6DE3:30 FB      + 	BMI WAITMATH.00270
    4                 + 
 1337 6DE5:F0 **        	beq .02
 1338 6DE7:E8           	inx
 1339                   
 1340 6DE8:AD 6C FC     .02	lda MATHM
 1341 6DEB:85 4C        	sta product+4
 1342 6DED:AD 6D FC     	lda MATHL
 1343 6DF0:85 4D        	sta product+5
 1344 6DF2:AD 6E FC     	lda MATHK
 1345 6DF5:8D 6C FC     	sta MATHM
 1346 6DF8:AD 6F FC     	lda MATHJ
 1347 6DFB:8D 6D FC     	sta MATHL
 1348 6DFE:8E 6E FC     	stx MATHK	; stz MATHJ
 1349                   
 1350 6E01:A2 00        	ldx #0		; prepare to accumulate overflows
 1351 6E03:A5 3E        	lda factor1+2	; B2*A1
 1352 6E05:8D 54 FC     	sta MATHB
 1353 6E08:A5 3F        	lda factor1+3
 1354 6E0A:8D 55 FC     	sta MATHA	; MULTIPLY
 1355                   
 1356 6E0D:A9 20        	lda #MATHCARRY
 1357                   	WAITMATH
    1      6E0F       + WAITMATH.00280	.= *
    2 6E0F:2C 92 FC   + 	BIT SPRSYS
    3 6E12:30 FB      + 	BMI WAITMATH.00280
    4                 + 
 1358 6E14:F0 **        	beq .03
 1359 6E16:E8           	inx
 1360                   
 1361 6E17:A5 40        .03	lda factor1+4	; A2*B1
 1362 6E19:8D 52 FC     	sta MATHD
 1363 6E1C:A5 41        	lda factor1+5
 1364 6E1E:8D 53 FC     	sta MATHC
 1365 6E21:A5 44        	lda factor2+2
 1366 6E23:8D 54 FC     	sta MATHB
 1367 6E26:A5 45        	lda factor2+3
 1368 6E28:8D 55 FC     	sta MATHA	; MULTIPLY
 1369                   
 1370 6E2B:A9 20        	lda #MATHCARRY
 1371                   	WAITMATH
    1      6E2D       + WAITMATH.00290	.= *
    2 6E2D:2C 92 FC   + 	BIT SPRSYS
    3 6E30:30 FB      + 	BMI WAITMATH.00290
    4                 + 
 1372 6E32:F0 **        	beq .04
 1373 6E34:E8           	inx
 1374                   
 1375 6E35:AD 6C FC     .04	lda MATHM
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   76
                                                        14:53:39  

 1376 6E38:85 4E        	sta product+6
 1377 6E3A:AD 6D FC     	lda MATHL
 1378 6E3D:85 4F        	sta product+7
 1379 6E3F:AD 6E FC     	lda MATHK
 1380 6E42:8D 6C FC     	sta MATHM
 1381 6E45:AD 6F FC     	lda MATHJ
 1382 6E48:8D 6D FC     	sta MATHL
 1383 6E4B:8E 6E FC     	stx MATHK	; stz MATHJ
 1384                   
 1385 6E4E:A5 46        	lda factor2+4	; A2*B2
 1386 6E50:8D 54 FC     	sta MATHB
 1387 6E53:A5 47        	lda factor2+5
 1388 6E55:8D 55 FC     	sta MATHA	; MULTPLY
 1389                   
 1390                   	WAITMATH
    1      6E58       + WAITMATH.002A0	.= *
    2 6E58:2C 92 FC   + 	BIT SPRSYS
    3 6E5B:30 FB      + 	BMI WAITMATH.002A0
    4                 + 
 1391                   
 1392 6E5D:AD 6C FC     	lda MATHM
 1393 6E60:85 50        	sta product+8
 1394 6E62:AD 6D FC     	lda MATHL
 1395 6E65:85 51        	sta product+9
 1396 6E67:AD 6E FC     	lda MATHK
 1397 6E6A:85 52        	sta product+10
 1398 6E6C:AD 6F FC     	lda MATHJ
 1399 6E6F:85 53        	sta product+11
 1400                   
 1401                   
 1402 6E71:46 54        	lsr negflag
 1403 6E73:90 **        	bcc .30
 1404 6E75:A9 00        	lda #0
 1405 6E77:E5 48        	sbc product
 1406 6E79:85 48        	sta product
 1407 6E7B:A9 00        	lda #0
 1408 6E7D:E5 49        	sbc product+1
 1409 6E7F:85 49        	sta product+1
 1410 6E81:A9 00        	lda #0
 1411 6E83:E5 4A        	sbc product+2
 1412 6E85:85 4A        	sta product+2
 1413 6E87:A9 00        	lda #0
 1414 6E89:E5 4B        	sbc product+3
 1415 6E8B:85 4B        	sta product+3
 1416 6E8D:A9 00        	lda #0
 1417 6E8F:E5 4C        	sbc product+4
 1418 6E91:85 4C        	sta product+4
 1419 6E93:A9 00        	lda #0
 1420 6E95:E5 4D        	sbc product+5
 1421 6E97:85 4D        	sta product+5
 1422 6E99:A9 00        	lda #0
 1423 6E9B:E5 4E        	sbc product+6
 1424 6E9D:85 4E        	sta product+6
 1425 6E9F:A9 00        	lda #0
 1426 6EA1:E5 4F        	sbc product+7
 1427 6EA3:85 4F        	sta product+7
 1428 6EA5:A9 00        	lda #0
 1429 6EA7:E5 50        	sbc product+8
 1430 6EA9:85 50        	sta product+8
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   77
                                                        14:53:39  

 1431 6EAB:A9 00        	lda #0
 1432 6EAD:E5 51        	sbc product+9
 1433 6EAF:85 51        	sta product+9
 1434 6EB1:A9 00        	lda #0
 1435 6EB3:E5 52        	sbc product+10
 1436 6EB5:85 52        	sta product+10
 1437 6EB7:A9 00        	lda #0
 1438 6EB9:E5 53        	sbc product+11
 1439 6EBB:85 53        	sta product+11
 1440                   
 1441 6EBD:60           .30	rts
 1442                   
 1443                   
 1444 6EBE:             initbrot
 1445 6EBE:A9 04        	lda #4
 1446 6EC0:85 7B        	sta cyclerate
 1447                   
 1448 6EC2:A9 00        	lda #<COUNTMAX
 1449 6EC4:85 16        	sta depth
 1450 6EC6:A9 01        	lda #>COUNTMAX
 1451 6EC8:85 17        	sta depth+1	; fall into resetbrot
 1452                   
 1453 6ECA:             resetbrot
 1454 6ECA:A9 FE        	lda #<{-2}
 1455 6ECC:64 55        	stz acorner
 1456 6ECE:64 56        	stz acorner+1
 1457 6ED0:64 57        	stz acorner+2
 1458 6ED2:64 58        	stz acorner+3
 1459 6ED4:64 59        	stz acorner+4
 1460 6ED6:85 5A        	sta acorner+5
 1461 6ED8:64 5B        	stz bcorner
 1462 6EDA:64 5C        	stz bcorner+1
 1463 6EDC:64 5D        	stz bcorner+2
 1464 6EDE:64 5E        	stz bcorner+3
 1465 6EE0:64 5F        	stz bcorner+4
 1466 6EE2:85 60        	sta bcorner+5
 1467 6EE4:A9 08        	lda #8
 1468 6EE6:64 61        	stz step
 1469 6EE8:64 62        	stz step+1
 1470 6EEA:64 63        	stz step+2
 1471 6EEC:64 64        	stz step+3
 1472 6EEE:85 65        	sta step+4
 1473 6EF0:64 66        	stz step+5	; fall into resetpoint
 1474                   
 1475 6EF2:             resetpoint
 1476 6EF2:64 11        	stz xindex
 1477 6EF4:64 12        	stz yindex
 1478                   
 1479 6EF6:A5 55        	lda acorner
 1480 6EF8:85 18        	sta x0
 1481 6EFA:A5 56        	lda acorner+1
 1482 6EFC:85 19        	sta x0+1
 1483 6EFE:A5 57        	lda acorner+2
 1484 6F00:85 1A        	sta x0+2
 1485 6F02:A5 58        	lda acorner+3
 1486 6F04:85 1B        	sta x0+3
 1487 6F06:A5 59        	lda acorner+4
 1488 6F08:85 1C        	sta x0+4
 1489 6F0A:A5 5A        	lda acorner+5
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   78
                                                        14:53:39  

 1490 6F0C:85 1D        	sta x0+5
 1491 6F0E:A5 5B        	lda bcorner
 1492 6F10:85 1E        	sta y0
 1493 6F12:A5 5C        	lda bcorner+1
 1494 6F14:85 1F        	sta y0+1
 1495 6F16:A5 5D        	lda bcorner+2
 1496 6F18:85 20        	sta y0+2
 1497 6F1A:A5 5E        	lda bcorner+3
 1498 6F1C:85 21        	sta y0+3
 1499 6F1E:A5 5F        	lda bcorner+4
 1500 6F20:85 22        	sta y0+4
 1501 6F22:A5 60        	lda bcorner+5
 1502 6F24:85 23        	sta y0+5
 1503                   
 1504 6F26:60           	rts
 1505                   
 1506                   
 1507 6F27:             copyjulia
 1508 6F27:A5 55        	lda acorner
 1509 6F29:85 67        	sta xjul
 1510 6F2B:A5 56        	lda acorner+1
 1511 6F2D:85 68        	sta xjul+1
 1512 6F2F:A5 57        	lda acorner+2
 1513 6F31:85 69        	sta xjul+2
 1514 6F33:A5 58        	lda acorner+3
 1515 6F35:85 6A        	sta xjul+3
 1516 6F37:A5 59        	lda acorner+4
 1517 6F39:85 6B        	sta xjul+4
 1518 6F3B:A5 5A        	lda acorner+5
 1519 6F3D:85 6C        	sta xjul+5
 1520                   
 1521 6F3F:A5 5B        	lda bcorner
 1522 6F41:85 6D        	sta yjul
 1523 6F43:A5 5C        	lda bcorner+1
 1524 6F45:85 6E        	sta yjul+1
 1525 6F47:A5 5D        	lda bcorner+2
 1526 6F49:85 6F        	sta yjul+2
 1527 6F4B:A5 5E        	lda bcorner+3
 1528 6F4D:85 70        	sta yjul+3
 1529 6F4F:A5 5F        	lda bcorner+4
 1530 6F51:85 71        	sta yjul+4
 1531 6F53:A5 60        	lda bcorner+5
 1532 6F55:85 72        	sta yjul+5
 1533                   
 1534 6F57:60           	rts
 1535                   
 1536                   
 1537 6F58:             dopoint
 1538 6F58:64 13        	stz count
 1539 6F5A:64 14        	stz count+1
 1540 6F5C:64 15        	stz countmod15
 1541                   
 1542 6F5E:A5 18        	lda x0
 1543 6F60:85 24        	sta xn
 1544 6F62:A5 19        	lda x0+1
 1545 6F64:85 25        	sta xn+1
 1546 6F66:A5 1A        	lda x0+2
 1547 6F68:85 26        	sta xn+2
 1548 6F6A:A5 1B        	lda x0+3
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   79
                                                        14:53:39  

 1549 6F6C:85 27        	sta xn+3
 1550 6F6E:A5 1C        	lda x0+4
 1551 6F70:85 28        	sta xn+4
 1552 6F72:A5 1D        	lda x0+5
 1553 6F74:85 29        	sta xn+5
 1554 6F76:A5 1E        	lda y0
 1555 6F78:85 2A        	sta yn
 1556 6F7A:A5 1F        	lda y0+1
 1557 6F7C:85 2B        	sta yn+1
 1558 6F7E:A5 20        	lda y0+2
 1559 6F80:85 2C        	sta yn+2
 1560 6F82:A5 21        	lda y0+3
 1561 6F84:85 2D        	sta yn+3
 1562 6F86:A5 22        	lda y0+4
 1563 6F88:85 2E        	sta yn+4
 1564 6F8A:A5 23        	lda y0+5
 1565 6F8C:85 2F        	sta yn+5
 1566                   
 1567 6F8E:A5 24        .0	  lda xn
 1568 6F90:85 3C        	  sta factor1
 1569 6F92:A5 25        	  lda xn+1
 1570 6F94:85 3D        	  sta factor1+1
 1571 6F96:A5 26        	  lda xn+2
 1572 6F98:85 3E        	  sta factor1+2
 1573 6F9A:A5 27        	  lda xn+3
 1574 6F9C:85 3F        	  sta factor1+3
 1575 6F9E:A5 28        	  lda xn+4
 1576 6FA0:85 40        	  sta factor1+4
 1577 6FA2:A5 29        	  lda xn+5
 1578 6FA4:85 41        	  sta factor1+5
 1579 6FA6:20 84 6C     	  jsr dosquare
 1580                   
 1581 6FA9:A5 4D        	  lda product+5
 1582 6FAB:85 30        	  sta xsquare
 1583 6FAD:A5 4E        	  lda product+6
 1584 6FAF:85 31        	  sta xsquare+1
 1585 6FB1:A5 4F        	  lda product+7
 1586 6FB3:85 32        	  sta xsquare+2
 1587 6FB5:A5 50        	  lda product+8
 1588 6FB7:85 33        	  sta xsquare+3
 1589 6FB9:A5 51        	  lda product+9
 1590 6FBB:85 34        	  sta xsquare+4
 1591 6FBD:A5 52        	  lda product+10
 1592 6FBF:85 35        	  sta xsquare+5
 1593                   
 1594 6FC1:A5 2A        	  lda yn
 1595 6FC3:85 3C        	  sta factor1
 1596 6FC5:A5 2B        	  lda yn+1
 1597 6FC7:85 3D        	  sta factor1+1
 1598 6FC9:A5 2C        	  lda yn+2
 1599 6FCB:85 3E        	  sta factor1+2
 1600 6FCD:A5 2D        	  lda yn+3
 1601 6FCF:85 3F        	  sta factor1+3
 1602 6FD1:A5 2E        	  lda yn+4
 1603 6FD3:85 40        	  sta factor1+4
 1604 6FD5:A5 2F        	  lda yn+5
 1605 6FD7:85 41        	  sta factor1+5
 1606 6FD9:20 84 6C     	  jsr dosquare
 1607                   
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   80
                                                        14:53:39  

 1608 6FDC:A5 4D        	  lda product+5
 1609 6FDE:85 36        	  sta ysquare
 1610 6FE0:A5 4E        	  lda product+6
 1611 6FE2:85 37        	  sta ysquare+1
 1612 6FE4:A5 4F        	  lda product+7
 1613 6FE6:85 38        	  sta ysquare+2
 1614 6FE8:A5 50        	  lda product+8
 1615 6FEA:85 39        	  sta ysquare+3
 1616 6FEC:A5 51        	  lda product+9
 1617 6FEE:85 3A        	  sta ysquare+4
 1618 6FF0:A5 52        	  lda product+10
 1619 6FF2:85 3B        	  sta ysquare+5
 1620                   
 1621 6FF4:18           	  clc
 1622 6FF5:A5 30        	  lda xsquare
 1623 6FF7:65 36        	  adc ysquare
 1624 6FF9:A5 31        	  lda xsquare+1
 1625 6FFB:65 37        	  adc ysquare+1
 1626 6FFD:A5 32        	  lda xsquare+2
 1627 6FFF:65 38        	  adc ysquare+2
 1628 7001:A5 33        	  lda xsquare+3
 1629 7003:65 39        	  adc ysquare+3
 1630 7005:A5 34        	  lda xsquare+4
 1631 7007:65 3A        	  adc ysquare+4
 1632 7009:A5 35        	  lda xsquare+5
 1633 700B:65 3B        	  adc ysquare+5
 1634 700D:C9 04        	  cmp #4
 1635 700F:90 **        	  bcc .0a
 1636 7011:4C ** **     	  jmp .1
 1637                   
 1638 7014:64 54        .0a	  stz negflag
 1639 7016:A5 2F        	  lda yn+5
 1640 7018:10 **        	  bpl .0b
 1641 701A:E6 54        	  inc negflag
 1642 701C:A5 24        .0b	  lda xn
 1643 701E:85 42        	  sta factor2
 1644 7020:A5 25        	  lda xn+1
 1645 7022:85 43        	  sta factor2+1
 1646 7024:A5 26        	  lda xn+2
 1647 7026:85 44        	  sta factor2+2
 1648 7028:A5 27        	  lda xn+3
 1649 702A:85 45        	  sta factor2+3
 1650 702C:A5 28        	  lda xn+4
 1651 702E:85 46        	  sta factor2+4
 1652 7030:A5 29        	  lda xn+5
 1653 7032:85 47        	  sta factor2+5
 1654 7034:20 F6 6C     	  jsr dom.1
 1655                   
 1656 7037:A6 73        	  ldx juliaflag
 1657 7039:F0 **        	  beq .0f
 1658 703B:A2 4F        	  ldx #xjul-x0
 1659                   
 1660 703D:A5 4D        .0f	  lda product+5
 1661 703F:0A           	  asl a
 1662 7040:85 2A        	  sta yn
 1663 7042:A5 4E        	  lda product+6
 1664 7044:2A           	  rol a
 1665 7045:85 2B        	  sta yn+1
 1666 7047:A5 4F        	  lda product+7
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   81
                                                        14:53:39  

 1667 7049:2A           	  rol a
 1668 704A:85 2C        	  sta yn+2
 1669 704C:A5 50        	  lda product+8
 1670 704E:2A           	  rol a
 1671 704F:85 2D        	  sta yn+3
 1672 7051:A5 51        	  lda product+9
 1673 7053:2A           	  rol a
 1674 7054:85 2E        	  sta yn+4
 1675 7056:A5 52        	  lda product+10
 1676 7058:2A           	  rol a
 1677 7059:85 2F        	  sta yn+5
 1678 705B:18           	  clc
 1679 705C:A5 2A        	  lda yn
 1680 705E:75 1E        	  adc y0,x
 1681 7060:85 2A        	  sta yn
 1682 7062:A5 2B        	  lda yn+1
 1683 7064:75 1F        	  adc y0+1,x
 1684 7066:85 2B        	  sta yn+1
 1685 7068:A5 2C        	  lda yn+2
 1686 706A:75 20        	  adc y0+2,x
 1687 706C:85 2C        	  sta yn+2
 1688 706E:A5 2D        	  lda yn+3
 1689 7070:75 21        	  adc y0+3,x
 1690 7072:85 2D        	  sta yn+3
 1691 7074:A5 2E        	  lda yn+4
 1692 7076:75 22        	  adc y0+4,x
 1693 7078:85 2E        	  sta yn+4
 1694 707A:A5 2F        	  lda yn+5
 1695 707C:75 23        	  adc y0+5,x
 1696 707E:85 2F        	  sta yn+5
 1697                   
 1698 7080:38           	  sec
 1699 7081:A5 30        	  lda xsquare
 1700 7083:E5 36        	  sbc ysquare
 1701 7085:85 24        	  sta xn
 1702 7087:A5 31        	  lda xsquare+1
 1703 7089:E5 37        	  sbc ysquare+1
 1704 708B:85 25        	  sta xn+1
 1705 708D:A5 32        	  lda xsquare+2
 1706 708F:E5 38        	  sbc ysquare+2
 1707 7091:85 26        	  sta xn+2
 1708 7093:A5 33        	  lda xsquare+3
 1709 7095:E5 39        	  sbc ysquare+3
 1710 7097:85 27        	  sta xn+3
 1711 7099:A5 34        	  lda xsquare+4
 1712 709B:E5 3A        	  sbc ysquare+4
 1713 709D:85 28        	  sta xn+4
 1714 709F:A5 35        	  lda xsquare+5
 1715 70A1:E5 3B        	  sbc ysquare+5
 1716 70A3:85 29        	  sta xn+5
 1717 70A5:18           	  clc
 1718 70A6:A5 24        	  lda xn
 1719 70A8:75 18        	  adc x0,x
 1720 70AA:85 24        	  sta xn
 1721 70AC:A5 25        	  lda xn+1
 1722 70AE:75 19        	  adc x0+1,x
 1723 70B0:85 25        	  sta xn+1
 1724 70B2:A5 26        	  lda xn+2
 1725 70B4:75 1A        	  adc x0+2,x
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   82
                                                        14:53:39  

 1726 70B6:85 26        	  sta xn+2
 1727 70B8:A5 27        	  lda xn+3
 1728 70BA:75 1B        	  adc x0+3,x
 1729 70BC:85 27        	  sta xn+3
 1730 70BE:A5 28        	  lda xn+4
 1731 70C0:75 1C        	  adc x0+4,x
 1732 70C2:85 28        	  sta xn+4
 1733 70C4:A5 29        	  lda xn+5
 1734 70C6:75 1D        	  adc x0+5,x
 1735 70C8:85 29        	  sta xn+5
 1736                   
 1737 70CA:A6 15        	  ldx countmod15
 1738 70CC:E8           	  inx
 1739 70CD:E0 0F        	  cpx #15
 1740 70CF:90 **        	  bcc .0c
 1741 70D1:A2 00        	  ldx #0
 1742 70D3:86 15        .0c	  stx countmod15
 1743                   
 1744 70D5:E6 13        	  inc count
 1745 70D7:D0 **        	  bne .0d
 1746 70D9:E6 14        	  inc count+1
 1747                   
 1748 70DB:A5 13        .0d	  lda count
 1749 70DD:C5 16        	  cmp depth
 1750 70DF:A5 14        	  lda count+1
 1751 70E1:E5 17        	  sbc depth+1
 1752 70E3:90 **        	  bcc .0e
 1753 70E5:A9 0F        	  lda #15
 1754 70E7:85 15        	  sta countmod15
 1755 70E9:80 **        	  bra .1
 1756                   
 1757 70EB:4C 8E 6F     .0e	 jmp .0
 1758                   
 1759 70EE:A6 15        .1	ldx countmod15
 1760 70F0:BD ** **     	lda doublenybble,x
 1761 70F3:A6 11        	ldx xindex
 1762 70F5:A4 12        	ldy yindex
 1763 70F7:20 2B 6C     	jsr plotpoint
 1764                   
 1765 70FA:60           	rts
 1766                   
 1767                   
 1768 70FB:             incpoint
 1769 70FB:18           	clc
 1770 70FC:A5 18        	lda x0
 1771 70FE:65 61        	adc step
 1772 7100:85 18        	sta x0
 1773 7102:A5 19        	lda x0+1
 1774 7104:65 62        	adc step+1
 1775 7106:85 19        	sta x0+1
 1776 7108:A5 1A        	lda x0+2
 1777 710A:65 63        	adc step+2
 1778 710C:85 1A        	sta x0+2
 1779 710E:A5 1B        	lda x0+3
 1780 7110:65 64        	adc step+3
 1781 7112:85 1B        	sta x0+3
 1782 7114:A5 1C        	lda x0+4
 1783 7116:65 65        	adc step+4
 1784 7118:85 1C        	sta x0+4
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   83
                                                        14:53:39  

 1785 711A:A5 1D        	lda x0+5
 1786 711C:65 66        	adc step+5
 1787 711E:85 1D        	sta x0+5
 1788                   
 1789 7120:E6 11        	inc xindex
 1790 7122:A5 11        	lda xindex
 1791 7124:C9 A0        	cmp #160
 1792 7126:90 **        	bcc .0
 1793 7128:A5 55        	lda acorner
 1794 712A:85 18        	sta x0
 1795 712C:A5 56        	lda acorner+1
 1796 712E:85 19        	sta x0+1
 1797 7130:A5 57        	lda acorner+2
 1798 7132:85 1A        	sta x0+2
 1799 7134:A5 58        	lda acorner+3
 1800 7136:85 1B        	sta x0+3
 1801 7138:A5 59        	lda acorner+4
 1802 713A:85 1C        	sta x0+4
 1803 713C:A5 5A        	lda acorner+5
 1804 713E:85 1D        	sta x0+5
 1805 7140:64 11        	stz xindex
 1806                   
 1807 7142:18           	clc
 1808 7143:A5 1E        	lda y0
 1809 7145:65 61        	adc step
 1810 7147:85 1E        	sta y0
 1811 7149:A5 1F        	lda y0+1
 1812 714B:65 62        	adc step+1
 1813 714D:85 1F        	sta y0+1
 1814 714F:A5 20        	lda y0+2
 1815 7151:65 63        	adc step+2
 1816 7153:85 20        	sta y0+2
 1817 7155:A5 21        	lda y0+3
 1818 7157:65 64        	adc step+3
 1819 7159:85 21        	sta y0+3
 1820 715B:A5 22        	lda y0+4
 1821 715D:65 65        	adc step+4
 1822 715F:85 22        	sta y0+4
 1823 7161:A5 23        	lda y0+5
 1824 7163:65 66        	adc step+5
 1825 7165:85 23        	sta y0+5
 1826                   
 1827 7167:E6 12        	inc yindex
 1828 7169:A5 12        	lda yindex
 1829 716B:C9 66        	cmp #102
 1830 716D:90 **        	bcc .0
 1831 716F:A5 5B        	lda bcorner
 1832 7171:85 1E        	sta y0
 1833 7173:A5 5C        	lda bcorner+1
 1834 7175:85 1F        	sta y0+1
 1835 7177:A5 5D        	lda bcorner+2
 1836 7179:85 20        	sta y0+2
 1837 717B:A5 5E        	lda bcorner+3
 1838 717D:85 21        	sta y0+3
 1839 717F:A5 5F        	lda bcorner+4
 1840 7181:85 22        	sta y0+4
 1841 7183:A5 60        	lda bcorner+5
 1842 7185:85 23        	sta y0+5
 1843 7187:64 12        	stz yindex
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   84
                                                        14:53:39  

 1844                   
 1845 7189:60           .0	rts
 1846                   
 1847                   
 1848 718A:             myprint
 1849 718A:48           	pha
 1850 718B:86 00        	 stx sysptr
 1851 718D:84 01        	 sty sysptr+1
 1852 718F:A9 7D        	 lda #<textbuffer
 1853 7191:8D 17 63     	 sta TextPtr
 1854 7194:A9 62        	 lda #>textbuffer
 1855 7196:8D 18 63     	 sta TextPtr+1
 1856                   
 1857 7199:20 1B 63     	 jsr HandyPrint
 1858                   
 1859 719C:CE ** **     	 dec textscb+SCB_HPOS
 1860 719F:A9 0F        	 lda #$0f
 1861 71A1:8D ** **     	 sta textscb+SCB_PALETTE-4
 1862 71A4:20 ** **     	 jsr showtextsprite
 1863                   
 1864 71A7:EE ** **     	 inc textscb+SCB_HPOS
 1865 71AA:CE ** **     	 dec textscb+SCB_VPOS
 1866 71AD:20 ** **     	 jsr showtextsprite
 1867                   
 1868 71B0:EE ** **     	 inc textscb+SCB_HPOS
 1869 71B3:EE ** **     	 inc textscb+SCB_VPOS
 1870 71B6:20 ** **     	 jsr showtextsprite
 1871                   
 1872 71B9:CE ** **     	 dec textscb+SCB_HPOS
 1873 71BC:EE ** **     	 inc textscb+SCB_VPOS
 1874 71BF:20 ** **     	 jsr showtextsprite
 1875                   
 1876 71C2:CE ** **     	 dec textscb+SCB_VPOS
 1877                   
 1878 71C5:68           	pla
 1879 71C6:8D ** **     	sta textscb+SCB_PALETTE-4
 1880                   ;	jmp showtextsprite	; rts
 1881                   
 1882                   
 1883 71C9:             showtextsprite
 1884 71C9:A2 **        	ldx #<textscb
 1885 71CB:A0 **        	ldy #>textscb
 1886 71CD:4C 0B 6C     	jmp reshowsprites	; rts
 1887                   
 1888                   
 1889 71D0:             showmessage
 1890 71D0:A9 0E        .1a	  lda #$0e
 1891 71D2:20 8A 71     	  jsr myprint
 1892 71D5:18           	  clc
 1893 71D6:AD ** **     	  lda textscb+SCB_VPOS
 1894 71D9:69 0A        	  adc #10
 1895 71DB:8D ** **     	  sta textscb+SCB_VPOS
 1896 71DE:A0 01        	  ldy #1
 1897 71E0:B1 00        	  lda (sysptr),y
 1898 71E2:30 **        	  bmi .4
 1899 71E4:A4 01        	  ldy sysptr+1
 1900 71E6:A6 00        	  ldx sysptr
 1901 71E8:E8           	  inx
 1902 71E9:D0 E5        	  bne .1a
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   85
                                                        14:53:39  

 1903 71EB:C8           	  iny
 1904 71EC:80 E2        	 bra .1a
 1905                   
 1906 71EE:60           .4	rts
 1907                   
 1908                   
 1909 71EF:             putbyte.xy
 1910 71EF:86 06        	stx ind0
 1911 71F1:84 07        	sty ind0+1
 1912                   
 1913 71F3:             putbyte
 1914 71F3:48           	pha
 1915 71F4:4A           	 lsr a
 1916 71F5:4A           	 lsr a
 1917 71F6:4A           	 lsr a
 1918 71F7:4A           	 lsr a
 1919 71F8:20 ** **     	 jsr putdigit
 1920 71FB:68           	pla
 1921 71FC:29 0F        	and #$f
 1922                   
 1923 71FE:             putdigit
 1924 71FE:C9 0A        	cmp #10
 1925 7200:90 **        	bcc .0
 1926 7202:18           	clc
 1927 7203:69 00        	adc #"A"-"0"-10
 1928 7205:18           .0	clc
 1929 7206:69 02        	adc #"0"
 1930                   
 1931 7208:92 06        	sta (ind0)
 1932                   
 1933 720A:             inc.ind0
 1934 720A:E6 06        	inc ind0
 1935 720C:D0 **        	bne .ff
 1936 720E:E6 07        	inc ind0+1
 1937                   
 1938 7210:60           .ff	rts
 1939                   
 1940                   
 1941 7211:             menuinput
 1942                   	GETJOY
    1 7211:AD B0 FC   + 	  LDA JOYSTICK
    2                 + 
 1943 7214:A8           	tay
 1944 7215:49 FF        	eor #$ff
 1945 7217:05 0C        	ora stick
 1946 7219:49 FF        	eor #$ff
 1947 721B:85 0D        	sta edgestick
 1948 721D:98           	tya
 1949 721E:85 0C        	sta stick
 1950 7220:F0 **        	beq .aa
 1951 7222:A9 01        	lda #1
 1952 7224:85 77        	sta modeflag
 1953                   .aa	GETSWITCH
    1 7226:AD B1 FC   + 	  LDA SWITCHES
    2                 + 
 1954 7229:85 0E        	sta switch
 1955                   
 1956 722B:A5 0D        	lda edgestick
 1957 722D:89 10        	bit #JOY_LEFT
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   86
                                                        14:53:39  

 1958 722F:F0 **        	beq .00
 1959 7231:20 ** **     	jsr cursorleft
 1960                   
 1961 7234:A5 0D        .00	lda edgestick
 1962 7236:89 20        	bit #JOY_RIGHT
 1963 7238:F0 **        	beq .10
 1964 723A:20 ** **     	jsr cursorright
 1965                   
 1966 723D:A5 0D        .10	lda edgestick
 1967 723F:89 40        	bit #JOY_UP
 1968 7241:F0 **        	beq .20
 1969 7243:20 ** **     	jsr cursorup
 1970                   
 1971 7246:A5 0D        .20	lda edgestick
 1972 7248:89 80        	bit #JOY_DOWN
 1973 724A:F0 **        	beq .40
 1974 724C:20 ** **     	jsr cursordown
 1975                   
 1976 724F:A5 0D        .40	lda edgestick
 1977 7251:89 01        	bit #OUTER_BUTTON
 1978 7253:F0 **        	beq .50
 1979 7255:20 ** **     	jsr inc.digit
 1980                   
 1981 7258:A5 0D        .50	lda edgestick
 1982 725A:89 02        	bit #INNER_BUTTON
 1983 725C:F0 **        	beq .60
 1984 725E:20 ** **     	jsr dec.digit
 1985                   
 1986 7261:A5 0D        .60	lda edgestick
 1987 7263:89 08        	bit #OPTION1_BUTTON
 1988 7265:F0 **        	beq .70
 1989 7267:A5 0E        	lda switch
 1990 7269:89 01        	bit #PAUSE_SWITCH
 1991 726B:F0 **        	beq .65
 1992 726D:20 CA 6E     	jsr resetbrot
 1993 7270:80 **        	bra .70
 1994 7272:64 77        .65	stz modeflag
 1995                   
 1996 7274:A5 0D        .70	lda edgestick
 1997 7276:89 04        	bit #OPTION2_BUTTON
 1998 7278:F0 **        	beq .80
 1999 727A:A5 0E        	lda switch
 2000 727C:89 01        	bit #PAUSE_SWITCH
 2001 727E:F0 **        	beq .75
 2002 7280:20 27 6F     	jsr copyjulia
 2003 7283:20 CA 6E     	jsr resetbrot
 2004 7286:A9 FF        	lda #$ff
 2005 7288:85 73        	sta juliaflag
 2006 728A:80 **        	bra .80
 2007 728C:A5 73        .75	lda juliaflag
 2008 728E:49 FF        	eor #$ff
 2009 7290:85 73        	sta juliaflag
 2010                   
 2011 7292:             .80
 2012                   
 2013 7292:60           .ff	rts
 2014                   
 2015                   
 2016 7293:             inc.digit
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   87
                                                        14:53:39  

 2017 7293:A4 7F        	ldy whichdigit
 2018 7295:B9 ** **     	lda moredigits,y
 2019 7298:85 0A        	sta temp0
 2020 729A:BE ** **     	ldx digitaddr,y
 2021 729D:A9 11        	lda #$11
 2022 729F:39 ** **     	and digitmask,y
 2023 72A2:18           	clc
 2024 72A3:75 00        	adc 0,x
 2025 72A5:95 00        	sta 0,x
 2026                   
 2027 72A7:90 **        	bcc .1
 2028 72A9:C6 0A        .0	  dec temp0
 2029 72AB:30 **        	  bmi .1
 2030 72AD:E8           	  inx
 2031 72AE:F6 00        	  inc 0,x
 2032 72B0:F0 F7        	 beq .0
 2033                   
 2034 72B2:A5 7F        .1	lda whichdigit
 2035 72B4:C9 **        	cmp #NUMIMPORTANTDIGITS
 2036 72B6:B0 **        	bcs .ff
 2037 72B8:20 F2 6E     	jsr resetpoint
 2038                   
 2039 72BB:60           .ff	rts
 2040                   
 2041 72BC:             dec.digit
 2042 72BC:A4 7F        	ldy whichdigit
 2043 72BE:B9 ** **     	lda moredigits,y
 2044 72C1:85 0A        	sta temp0
 2045 72C3:BE ** **     	ldx digitaddr,y
 2046 72C6:A9 11        	lda #$11
 2047 72C8:39 ** **     	and digitmask,y
 2048 72CB:49 FF        	eor #$ff
 2049 72CD:38           	sec
 2050 72CE:75 00        	adc 0,x
 2051 72D0:95 00        	sta 0,x
 2052                   
 2053 72D2:B0 **        	bcs .1
 2054 72D4:C6 0A        .0	  dec temp0
 2055 72D6:30 **        	  bmi .1
 2056 72D8:E8           	  inx
 2057 72D9:D6 00        	  dec 0,x
 2058 72DB:B5 00        	  lda 0,x
 2059 72DD:C9 FF        	  cmp #$ff
 2060 72DF:F0 F3        	 beq .0
 2061                   	  
 2062 72E1:A5 7F        .1	lda whichdigit
 2063 72E3:C9 **        	cmp #NUMIMPORTANTDIGITS
 2064 72E5:B0 **        	bcs .ff
 2065 72E7:20 F2 6E     	jsr resetpoint
 2066                   
 2067 72EA:60           .ff	rts
 2068                   
 2069                   
 2070 72EB:             cursorleft
 2071 72EB:A6 7F        	ldx whichdigit
 2072 72ED:F0 **        	beq .ff
 2073 72EF:C6 7F        	dec whichdigit
 2074                   
 2075 72F1:60           .ff	rts
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   88
                                                        14:53:39  

 2076                   
 2077                   
 2078 72F2:             cursorright
 2079 72F2:A6 7F        	ldx whichdigit
 2080 72F4:E0 **        	cpx #NUMDIGITS-1
 2081 72F6:B0 **        	bcs .ff
 2082 72F8:E6 7F        	inc whichdigit
 2083                   
 2084 72FA:60           .ff	rts
 2085                   
 2086                   
 2087 72FB:             cursorup
 2088 72FB:A6 7F        	ldx whichdigit
 2089 72FD:BD ** **     	lda updigit,x
 2090 7300:85 7F        	sta whichdigit
 2091                   
 2092 7302:60           	rts
 2093                   
 2094                   
 2095 7303:             cursordown
 2096 7303:A6 7F        	ldx whichdigit
 2097 7305:BD ** **     	lda downdigit,x
 2098 7308:85 7F        	sta whichdigit
 2099                   
 2100 730A:60           	rts
 2101                   
 2102                   
 2103                   
 2104                   ;=====================================================
 2105                   
 2106                   ; Data
 2107                   
 2108                   	#MACRO PALDEF
 2109 MACRO             	.BY $?0/256,$?1/256,$?2/256,$?3/256,$?4/256,$?5/256,$
 2110 MACRO             	.BY $?8/256,$?9/256,$?a/256,$?b/256,$?c/256,$?d/256,$
 2111 MACRO             	.BY <$?0,<$?1,<$?2,<$?3,<$?4,<$?5,<$?6,<$?7
 2112 MACRO             	.BY <$?8,<$?9,<$?a,<$?b,<$?c,<$?d,<$?e,<$?f
 2113                   	#ENDM
 2114                   
 2115 730B:             palettes
 2116                   	PALDEF 241,482,6c3,804,a45,c86,ec7,008,249,48a,6cb,80
    1 730B:02 04 06 08  	.BY $241/256,$482/256,$6c3/256,$804/256,$a45/256,$c86
    1      0A 0C 0E 00  
    1                   
    2 7313:02 04 06 08  	.BY $249/256,$48a/256,$6cb/256,$80c/256,$a4d/256,$c8e
    2      0A 0C 0E 00  
    2                   
    3 731B:41 82 C3 04  	.BY <$241,<$482,<$6c3,<$804,<$a45,<$c86,<$ec7,<$008
    3      45 86 C7 08  
    3                   
    4 7323:49 8A CB 0C  	.BY <$249,<$48a,<$6cb,<$80c,<$a4d,<$c8e,<$ecf,<$000
    4      4D 8E CF 00  
    4                   
    5                 + 
 2117                   
 2118                   	PALDEF 111,222,333,444,555,666,777,888,999,aaa,bbb,cc
    1 732B:01 02 03 04  	.BY $111/256,$222/256,$333/256,$444/256,$555/256,$666
    1      05 06 07 08  
    1                   
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   89
                        mandel.src                      14:53:39  

    2 7333:09 0A 0B 0C  	.BY $999/256,$aaa/256,$bbb/256,$ccc/256,$ddd/256,$eee
    2      0D 0E 0F 00  
    2                   
    3 733B:11 22 33 44  	.BY <$111,<$222,<$333,<$444,<$555,<$666,<$777,<$888
    3      55 66 77 88  
    3                   
    4 7343:99 AA BB CC  	.BY <$999,<$aaa,<$bbb,<$ccc,<$ddd,<$eee,<$fff,<$000
    4      DD EE FF 00  
    4                   
    5                 + 
 2119                   
 2120                   	PALDEF 614,c28,24c,85d,364,488,a9c,0a0,6c4,cd8,2ec,80
    1 734B:06 0C 02 08  	.BY $614/256,$c28/256,$24c/256,$85d/256,$364/256,$488
    1      03 04 0A 00  
    1                   
    2 7353:06 0C 02 08  	.BY $6c4/256,$cd8/256,$2ec/256,$800/256,$e14/256,$428
    2      0E 04 0A 00  
    2                   
    3 735B:14 28 4C 5D  	.BY <$614,<$c28,<$24c,<$85d,<$364,<$488,<$a9c,<$0a0
    3      64 88 9C A0  
    3                   
    4 7363:C4 D8 EC 00  	.BY <$6c4,<$cd8,<$2ec,<$800,<$e14,<$428,<$a4c,<$000
    4      14 28 4C 00  
    4                   
    5                 + 
 2121                   
 2122                   	PALDEF 00f,0f0,f00,00f,0f0,f00,00f,0f0,f00,00f,0f0,f0
    1 736B:00 00 0F 00  	.BY $00f/256,$0f0/256,$f00/256,$00f/256,$0f0/256,$f00
    1      00 0F 00 00  
    1                   
    2 7373:0F 00 00 0F  	.BY $f00/256,$00f/256,$0f0/256,$f00/256,$00f/256,$0f0
    2      00 00 0F 00  
    2                   
    3 737B:0F F0 00 0F  	.BY <$00f,<$0f0,<$f00,<$00f,<$0f0,<$f00,<$00f,<$0f0
    3      F0 00 0F F0  
    3                   
    4 7383:00 0F F0 00  	.BY <$f00,<$00f,<$0f0,<$f00,<$00f,<$0f0,<$f00,<$000
    4      0F F0 00 00  
    4                   
    5                 + 
 2123                   
 2124                   	PALDEF 003,060,900,00c,0f0,300,006,090,c00,00f,030,60
    1 738B:00 00 09 00  	.BY $003/256,$060/256,$900/256,$00c/256,$0f0/256,$300
    1      00 03 00 00  
    1                   
    2 7393:0C 00 00 06  	.BY $c00/256,$00f/256,$030/256,$600/256,$009/256,$0c0
    2      00 00 0F 00  
    2                   
    3 739B:03 60 00 0C  	.BY <$003,<$060,<$900,<$00c,<$0f0,<$300,<$006,<$090
    3      F0 00 06 90  
    3                   
    4 73A3:00 0F 30 00  	.BY <$c00,<$00f,<$030,<$600,<$009,<$0c0,<$f00,<$000
    4      09 C0 00 00  
    4                   
    5                 + 
 2125                   
 2126                   	PALDEF 003,006,009,00c,00f,030,060,090,0c0,0f0,300,60
    1 73AB:00 00 00 00  	.BY $003/256,$006/256,$009/256,$00c/256,$00f/256,$030
    1      00 00 00 00  
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   90
                        mandel.src                      14:53:39  

    1                   
    2 73B3:00 00 03 06  	.BY $0c0/256,$0f0/256,$300/256,$600/256,$900/256,$c00
    2      09 0C 0F 00  
    2                   
    3 73BB:03 06 09 0C  	.BY <$003,<$006,<$009,<$00c,<$00f,<$030,<$060,<$090
    3      0F 30 60 90  
    3                   
    4 73C3:C0 F0 00 00  	.BY <$0c0,<$0f0,<$300,<$600,<$900,<$c00,<$f00,<$000
    4      00 00 00 00  
    4                   
    5                 + 
 2127                   
 2128                   	PALDEF dde,aac,77a,558,337,115,003,001,003,115,337,55
    1 73CB:0D 0A 07 05  	.BY $dde/256,$aac/256,$77a/256,$558/256,$337/256,$115
    1      03 01 00 00  
    1                   
    2 73D3:00 01 03 05  	.BY $003/256,$115/256,$337/256,$558/256,$77a/256,$aac
    2      07 0A 0D 00  
    2                   
    3 73DB:DE AC 7A 58  	.BY <$dde,<$aac,<$77a,<$558,<$337,<$115,<$003,<$001
    3      37 15 03 01  
    3                   
    4 73E3:03 15 37 58  	.BY <$003,<$115,<$337,<$558,<$77a,<$aac,<$dde,<$000
    4      7A AC DE 00  
    4                   
    5                 + 
 2129                   	PALDEF ded,aca,7a7,585,373,151,030,010,030,151,373,58
    1 73EB:0D 0A 07 05  	.BY $ded/256,$aca/256,$7a7/256,$585/256,$373/256,$151
    1      03 01 00 00  
    1                   
    2 73F3:00 01 03 05  	.BY $030/256,$151/256,$373/256,$585/256,$7a7/256,$aca
    2      07 0A 0D 00  
    2                   
    3 73FB:ED CA A7 85  	.BY <$ded,<$aca,<$7a7,<$585,<$373,<$151,<$030,<$010
    3      73 51 30 10  
    3                   
    4 7403:30 51 73 85  	.BY <$030,<$151,<$373,<$585,<$7a7,<$aca,<$ded,<$000
    4      A7 CA ED 00  
    4                   
    5                 + 
 2130                   	PALDEF edd,caa,a77,855,733,511,300,100,300,511,733,85
    1 740B:0E 0C 0A 08  	.BY $edd/256,$caa/256,$a77/256,$855/256,$733/256,$511
    1      07 05 03 01  
    1                   
    2 7413:03 05 07 08  	.BY $300/256,$511/256,$733/256,$855/256,$a77/256,$caa
    2      0A 0C 0E 00  
    2                   
    3 741B:DD AA 77 55  	.BY <$edd,<$caa,<$a77,<$855,<$733,<$511,<$300,<$100
    3      33 11 00 00  
    3                   
    4 7423:00 11 33 55  	.BY <$300,<$511,<$733,<$855,<$a77,<$caa,<$edd,<$000
    4      77 AA DD 00  
    4                   
    5                 + 
 2131                   
 2132                   	PALDEF eed,cca,aa7,885,773,551,330,110,330,551,773,88
    1 742B:0E 0C 0A 08  	.BY $eed/256,$cca/256,$aa7/256,$885/256,$773/256,$551
    1      07 05 03 01  
    1                   
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   91
                        mandel.src                      14:53:39  

    2 7433:03 05 07 08  	.BY $330/256,$551/256,$773/256,$885/256,$aa7/256,$cca
    2      0A 0C 0E 00  
    2                   
    3 743B:ED CA A7 85  	.BY <$eed,<$cca,<$aa7,<$885,<$773,<$551,<$330,<$110
    3      73 51 30 10  
    3                   
    4 7443:30 51 73 85  	.BY <$330,<$551,<$773,<$885,<$aa7,<$cca,<$eed,<$000
    4      A7 CA ED 00  
    4                   
    5                 + 
 2133                   	PALDEF ede,cac,a7a,858,737,515,303,101,303,515,737,85
    1 744B:0E 0C 0A 08  	.BY $ede/256,$cac/256,$a7a/256,$858/256,$737/256,$515
    1      07 05 03 01  
    1                   
    2 7453:03 05 07 08  	.BY $303/256,$515/256,$737/256,$858/256,$a7a/256,$cac
    2      0A 0C 0E 00  
    2                   
    3 745B:DE AC 7A 58  	.BY <$ede,<$cac,<$a7a,<$858,<$737,<$515,<$303,<$101
    3      37 15 03 01  
    3                   
    4 7463:03 15 37 58  	.BY <$303,<$515,<$737,<$858,<$a7a,<$cac,<$ede,<$000
    4      7A AC DE 00  
    4                   
    5                 + 
 2134                   	PALDEF dee,acc,7aa,588,377,155,033,011,033,155,377,58
    1 746B:0D 0A 07 05  	.BY $dee/256,$acc/256,$7aa/256,$588/256,$377/256,$155
    1      03 01 00 00  
    1                   
    2 7473:00 01 03 05  	.BY $033/256,$155/256,$377/256,$588/256,$7aa/256,$acc
    2      07 0A 0D 00  
    2                   
    3 747B:EE CC AA 88  	.BY <$dee,<$acc,<$7aa,<$588,<$377,<$155,<$033,<$011
    3      77 55 33 11  
    3                   
    4 7483:33 55 77 88  	.BY <$033,<$155,<$377,<$588,<$7aa,<$acc,<$dee,<$000
    4      AA CC EE 00  
    4                   
    5                 + 
 2135                   
 2136                   	PALDEF b16,c27,d38,e49,f5a,16b,27c,38d,49e,5af,6b1,7c
    1 748B:0B 0C 0D 0E  	.BY $b16/256,$c27/256,$d38/256,$e49/256,$f5a/256,$16b
    1      0F 01 02 03  
    1                   
    2 7493:04 05 06 07  	.BY $49e/256,$5af/256,$6b1/256,$7c2/256,$8d3/256,$9e4
    2      08 09 0A 00  
    2                   
    3 749B:16 27 38 49  	.BY <$b16,<$c27,<$d38,<$e49,<$f5a,<$16b,<$27c,<$38d
    3      5A 6B 7C 8D  
    3                   
    4 74A3:9E AF B1 C2  	.BY <$49e,<$5af,<$6b1,<$7c2,<$8d3,<$9e4,<$af5,<$000
    4      D3 E4 F5 00  
    4                   
    5                 + 
 2137                   
 2138      000D         NUMPALETTES .EQ {*-palettes}/32
 2139                   
 2140                   
 2141 74AB:             doublenybble
 2142 74AB:00 11 22 33  	.HS 00112233445566778899aabbccddeeff
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   92
                                                        14:53:39  

 2142      44 55 66 77  
 2142      88 99 AA BB  
 2142      CC DD EE FF  
 2142                   
 2143                   
 2144 74BB:             nybblemask
 2145 74BB:F0 0F        	.BY $f0,$0f
 2146                   
 2147                   
 2148 74BD:             scales
 2149 74BD:20 00 40 00  	.DA $20, $40, $80, $a0, $c0, $e0, $100
 2149      80 00 A0 00  
 2149      C0 00 E0 00  
 2149      00 01        
 2150      0007         NUMSCALES .EQ {*-scales}/2
 2151                   
 2152                   
 2153                   
 2154 74CB:             erasescb
 2155 74CB:C1 90 00     	.BY FOUR_PER_PIXEL+BACKNONCOLL_SPRITE, RELOAD_HV+LITE
 2156 74CE:00 00        	.DA 0
 2157 74D0:00 **        	.DA erasesprite
 2158 74D2:00 00 00 00  	.DA 0, 0
 2158                   
 2159 74D6:00 A0 00 66  	.DA 160*256, 102*256
 2159                   
 2160 74DA:FF           	.HS ff
 2161                   
 2162 74DB:             erasesprite
 2163 74DB:02 00 00     	.HS 020000
 2164                   
 2165                   
 2166 74DE:             bigscb
 2167 74DE:C1 90 00     	.BY FOUR_PER_PIXEL+BACKNONCOLL_SPRITE, RELOAD_HV+LITE
 2168 74E1:00 00        	.DA 0
 2169 74E3:D0 41        	.DA bigsprite
 2170 74E5:00 00 00 00  	.DA 0, 0
 2170                   
 2171 74E9:00 01 00 01  	.DA 1*256, 1*256
 2171                   
 2172 74ED:01 23 45 67  	.HS 0123456789abcdef
 2172      89 AB CD EF  
 2172                   
 2173                   
 2174                   
 2175 74F5:             bigscb2
 2176 74F5:C1 90 00     	.BY FOUR_PER_PIXEL+BACKNONCOLL_SPRITE, RELOAD_HV+LITE
 2177 74F8:00 00        	.DA 0
 2178 74FA:D0 41        	.DA bigsprite
 2179 74FC:00 00 00 00  	.DA 0, 0
 2179                   
 2180 7500:00 02 00 02  	.DA 2*256, 2*256
 2180                   
 2181 7504:01 23 45 67  	.HS 0123456789abcdef
 2181      89 AB CD EF  
 2181                   
 2182                   
 2183                   
 2184 750C:             box1scb
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   93
                                                        14:53:39  

 2185 750C:C6 90 00     	.BY FOUR_PER_PIXEL+XOR_SPRITE, RELOAD_HV+LITERAL, 0
 2186 750F:00 **        	.DA box2scb
 2187 7511:DB 74        	.DA erasesprite
 2188 7513:00 00 00 00  	.DA 0, 0
 2188                   
 2189 7517:00 50 00 01  	.DA 80*256, 1*256
 2189                   
 2190 751B:FF           	.HS ff
 2191                   
 2192 751C:             box2scb
 2193 751C:C6 90 00     	.BY FOUR_PER_PIXEL+XOR_SPRITE, RELOAD_HV+LITERAL, 0
 2194 751F:00 **        	.DA box3scb
 2195 7521:DB 74        	.DA erasesprite
 2196 7523:00 00 32 00  	.DA 0, 50
 2196                   
 2197 7527:00 50 00 01  	.DA 80*256, 1*256
 2197                   
 2198 752B:FF           	.HS ff
 2199                   
 2200 752C:             box3scb
 2201 752C:C6 90 00     	.BY FOUR_PER_PIXEL+XOR_SPRITE, RELOAD_HV+LITERAL, 0
 2202 752F:00 **        	.DA box4scb
 2203 7531:DB 74        	.DA erasesprite
 2204 7533:00 00 00 00  	.DA 0, 0
 2204                   
 2205 7537:00 01 00 33  	.DA 1*256, 51*256
 2205                   
 2206 753B:FF           	.HS ff
 2207                   
 2208 753C:             box4scb
 2209 753C:C6 90 00     	.BY FOUR_PER_PIXEL+XOR_SPRITE, RELOAD_HV+LITERAL, 0
 2210 753F:00 00        	.DA 0
 2211 7541:DB 74        	.DA erasesprite
 2212 7543:4F 00 00 00  	.DA 79, 0
 2212                   
 2213 7547:00 01 00 33  	.DA 1*256, 51*256
 2213                   
 2214 754B:FF           	.HS ff
 2215                   
 2216                   
 2217 754C:             textscb
 2218 754C:05 90 00     	.BY ONE_PER_PIXEL+NONCOLL_SPRITE, RELOAD_HV+LITERAL, 
 2219 754F:00 00        	.DA 0
 2220 7551:7D 62        	.DA textbuffer
 2221 7553:00 00 00 00  	.DA 0, 0
 2221                   
 2222 7557:00 01 00 01  	.DA $100, $100
 2222                   
 2223 755B:20           	.HS 20
 2224                   
 2225                   
 2226 755C:             cursorscb
 2227 755C:05 10 00     	.BY ONE_PER_PIXEL+NONCOLL_SPRITE, RELOAD_HV, 0
 2228 755F:00 00        	.DA 0
 2229 7561:00 **        	.DA cursorsprite
 2230 7563:00 00 00 00  	.DA 0, 0
 2230                   
 2231 7567:00 01 00 01  	.DA $100, $100
 2231                   
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   94
                                                        14:53:39  

 2232 756B:01           	.HS 01
 2233                   
 2234 756C:             cursorsprite
 2235 756C:02 44        	.BY $02,$44
 2236 756E:03 C4 04     	.BY $03,$c4,$04
 2237 7571:03 C4 04     	.BY $03,$c4,$04
 2238 7574:03 C4 04     	.BY $03,$c4,$04
 2239 7577:03 C4 04     	.BY $03,$c4,$04
 2240 757A:03 C4 04     	.BY $03,$c4,$04
 2241 757D:03 C4 04     	.BY $03,$c4,$04
 2242 7580:03 C4 04     	.BY $03,$c4,$04
 2243 7583:03 C4 04     	.BY $03,$c4,$04
 2244 7586:02 44        	.BY $02,$44
 2245 7588:00           	.BY $00
 2246                   
 2247                   
 2248 7589:             menu
 2249                   ;	    "----+----1----+----"
 2250 7589:18 0C 19 0F  	.ZS "MANDELBROT EXPLORER"
 2250      10 17 0D 1D  
 2250      1A 1F 01 10  
 2250      23 1B 17 1A  
 2250      1D 10 1D 00  
 2250                   
 2251 759D:0D 24 2E 01  	.ZS "BY: STEPHEN LANDRUM"
 2251      1E 1F 10 1B  
 2251      13 10 19 01  
 2251      17 0C 19 0F  
 2251      1D 20 18 00  
 2251                   
 2252 75B1:23 2E 01 01  	.AS "X:    "
 2252      01 01        
 2253 75B7:23 23 2D 23  m1	.ZS       "xx.xxxxxxxxxx"
 2253      23 23 23 23  
 2253      23 23 23 23  
 2253      23 00        
 2254 75C5:24 2E 01 01  	.AS "Y:    "
 2254      01 01        
 2255 75CB:23 23 2D 23  m2	.ZS       "xx.xxxxxxxxxx"
 2255      23 23 23 23  
 2255      23 23 23 23  
 2255      23 00        
 2256 75D9:1E 1F 10 1B  	.AS "STEP: "
 2256      2E 01        
 2257 75DF:23 23 2D 23  m3	.ZS       "xx.xxxxxxxxxx"
 2257      23 23 23 23  
 2257      23 23 23 23  
 2257      23 00        
 2258 75ED:0F 10 1B 1F  	.AS "DEPTH:         "
 2258      13 2E 01 01  
 2258      01 01 01 01  
 2258      01 01 01     
 2259 75FC:23 23 23 23  m4	.ZS                "xxxx"
 2259      00           
 2260 7601:1B 0C 17 10  	.AS "PALETTE:         "
 2260      1F 1F 10 2E  
 2260      01 01 01 01  
 2260      01 01 01 01  
 2260      01           
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   95
                                                        14:53:39  

 2261 7612:23 23 00     m5	.ZS                  "xx"
 2262 7615:0E 24 0E 17  	.AS "CYCLE RATE:      "
 2262      10 01 1D 0C  
 2262      1F 10 2E 01  
 2262      01 01 01 01  
 2262      01           
 2263 7626:23 23 00     m6	.ZS                  "xx"
 2264 7629:23 15 20 17  	.AS "XJUL: "
 2264      2E 01        
 2265 762F:23 23 2D 23  m7	.ZS       "xx.xxxxxxxxxx"
 2265      23 23 23 23  
 2265      23 23 23 23  
 2265      23 00        
 2266 763D:24 15 20 17  	.AS "YJUL: "
 2266      2E 01        
 2267 7643:23 23 2D 23  m8	.ZS       "xx.xxxxxxxxxx"
 2267      23 23 23 23  
 2267      23 23 23 23  
 2267      23 00        
 2268 7651:FF           	.BY $ff
 2269                   
 2270 7652:18 0C 19 0F  title1	.AS "MANDELBROT EXPLORER"
 2270      10 17 0D 1D  
 2270      1A 1F 01 10  
 2270      23 1B 17 1A  
 2270      1D 10 1D     
 2271 7665:15 20 17 14  title2	.AS "JULIA SET EXPLORER "
 2271      0C 01 1E 10  
 2271      1F 01 10 23  
 2271      1B 17 1A 1D  
 2271      10 1D 01     
 2272      0013         TITLELEN .EQ title2-title1
 2273                   
 2274 7678:             digitxpos
 2275 7678:34 3C 4C 54  	.BY 52,60,76,84,92,100,108,116,124,132,140,148
 2275      5C 64 6C 74  
 2275      7C 84 8C 94  
 2275                   
 2276 7684:34 3C 4C 54  	.BY 52,60,76,84,92,100,108,116,124,132,140,148
 2276      5C 64 6C 74  
 2276      7C 84 8C 94  
 2276                   
 2277 7690:34 3C 4C 54  	.BY 52,60,76,84,92,100,108,116,124,132,140,148
 2277      5C 64 6C 74  
 2277      7C 84 8C 94  
 2277                   
 2278      0024         NUMIMPORTANTDIGITS .EQ *-digitxpos
 2279 769C:7C 84 8C 94  	.BY 124,132,140,148
 2279                   
 2280 76A0:8C 94        	.BY 140,148
 2281 76A2:8C 94        	.BY 140,148
 2282                   
 2283 76A4:34 3C 4C 54  	.BY 52,60,76,84,92,100,108,116,124,132,140,148
 2283      5C 64 6C 74  
 2283      7C 84 8C 94  
 2283                   
 2284 76B0:34 3C 4C 54  	.BY 52,60,76,84,92,100,108,116,124,132,140,148
 2284      5C 64 6C 74  
 2284      7C 84 8C 94  
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   96
                                                        14:53:39  

 2284                   
 2285                   
 2286      0044         NUMDIGITS .EQ *-digitxpos
 2287                   
 2288 76BC:             digitypos
 2289 76BC:16 16 16 16  	.BY 22,22,22,22,22,22,22,22,22,22,22,22
 2289      16 16 16 16  
 2289      16 16 16 16  
 2289                   
 2290 76C8:20 20 20 20  	.BY 32,32,32,32,32,32,32,32,32,32,32,32
 2290      20 20 20 20  
 2290      20 20 20 20  
 2290                   
 2291 76D4:2A 2A 2A 2A  	.BY 42,42,42,42,42,42,42,42,42,42,42,42
 2291      2A 2A 2A 2A  
 2291      2A 2A 2A 2A  
 2291                   
 2292 76E0:34 34 34 34  	.BY 52,52,52,52
 2292                   
 2293 76E4:3E 3E        	.BY 62,62
 2294 76E6:48 48        	.BY 72,72
 2295 76E8:52 52 52 52  	.BY 82,82,82,82,82,82,82,82,82,82,82,82
 2295      52 52 52 52  
 2295      52 52 52 52  
 2295                   
 2296 76F4:5C 5C 5C 5C  	.BY 92,92,92,92,92,92,92,92,92,92,92,92
 2296      5C 5C 5C 5C  
 2296      5C 5C 5C 5C  
 2296                   
 2297                   
 2298                   
 2299 7700:             digitaddr
 2300 7700:5A 5A 59 59  	.BY acorner+5,acorner+5,acorner+4,acorner+4,acorner+3
 2300      58 58        
 2301 7706:57 57 56 56  	.BY acorner+2,acorner+2,acorner+1,acorner+1,acorner,a
 2301      55 55        
 2302 770C:60 60 5F 5F  	.BY bcorner+5,bcorner+5,bcorner+4,bcorner+4,bcorner+3
 2302      5E 5E        
 2303 7712:5D 5D 5C 5C  	.BY bcorner+2,bcorner+2,bcorner+1,bcorner+1,bcorner,b
 2303      5B 5B        
 2304 7718:66 66 65 65  	.BY step+5,step+5,step+4,step+4,step+3,step+3
 2304      64 64        
 2305 771E:63 63 62 62  	.BY step+2,step+2,step+1,step+1,step,step
 2305      61 61        
 2306 7724:17 17 16 16  	.BY depth+1,depth+1,depth,depth
 2306                   
 2307 7728:7E 7E        	.BY palettenum,palettenum
 2308 772A:7B 7B        	.BY cyclerate,cyclerate
 2309 772C:6C 6C 6B 6B  	.BY xjul+5,xjul+5,xjul+4,xjul+4,xjul+3,xjul+3
 2309      6A 6A        
 2310 7732:69 69 68 68  	.BY xjul+2,xjul+2,xjul+1,xjul+1,xjul,xjul
 2310      67 67        
 2311 7738:72 72 71 71  	.BY yjul+5,yjul+5,yjul+4,yjul+4,yjul+3,yjul+3
 2311      70 70        
 2312 773E:6F 6F 6E 6E  	.BY yjul+2,yjul+2,yjul+1,yjul+1,yjul,yjul
 2312      6D 6D        
 2313                   
 2314 7744:             digitmask
 2315 7744:F0 0F F0 0F  	.HS f00ff00ff00ff00ff00ff00f
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   97
                                                        14:53:39  

 2315      F0 0F F0 0F  
 2315      F0 0F F0 0F  
 2315                   
 2316 7750:F0 0F F0 0F  	.HS f00ff00ff00ff00ff00ff00f
 2316      F0 0F F0 0F  
 2316      F0 0F F0 0F  
 2316                   
 2317 775C:F0 0F F0 0F  	.HS f00ff00ff00ff00ff00ff00f
 2317      F0 0F F0 0F  
 2317      F0 0F F0 0F  
 2317                   
 2318 7768:F0 0F F0 0F  	.HS f00ff00f
 2318                   
 2319 776C:F0 0F        	.HS f00f
 2320 776E:F0 0F        	.HS f00f
 2321 7770:F0 0F F0 0F  	.HS f00ff00ff00ff00ff00ff00f
 2321      F0 0F F0 0F  
 2321      F0 0F F0 0F  
 2321                   
 2322 777C:F0 0F F0 0F  	.HS f00ff00ff00ff00ff00ff00f
 2322      F0 0F F0 0F  
 2322      F0 0F F0 0F  
 2322                   
 2323                   
 2324 7788:             digitinvmask
 2325 7788:0F F0 0F F0  	.HS 0ff00ff00ff00ff00ff00ff0
 2325      0F F0 0F F0  
 2325      0F F0 0F F0  
 2325                   
 2326 7794:0F F0 0F F0  	.HS 0ff00ff00ff00ff00ff00ff0
 2326      0F F0 0F F0  
 2326      0F F0 0F F0  
 2326                   
 2327 77A0:0F F0 0F F0  	.HS 0ff00ff00ff00ff00ff00ff0
 2327      0F F0 0F F0  
 2327      0F F0 0F F0  
 2327                   
 2328 77AC:0F F0 0F F0  	.HS 0ff00ff0
 2328                   
 2329 77B0:0F F0        	.HS 0ff0
 2330 77B2:0F F0        	.HS 0ff0
 2331 77B4:0F F0 0F F0  	.HS 0ff00ff00ff00ff00ff00ff0
 2331      0F F0 0F F0  
 2331      0F F0 0F F0  
 2331                   
 2332 77C0:0F F0 0F F0  	.HS 0ff00ff00ff00ff00ff00ff0
 2332      0F F0 0F F0  
 2332      0F F0 0F F0  
 2332                   
 2333                   
 2334 77CC:             moredigits
 2335 77CC:00 00 01 01  	.BY 0,0,1,1,2,2,3,3,4,4,5,5
 2335      02 02 03 03  
 2335      04 04 05 05  
 2335                   
 2336 77D8:00 00 01 01  	.BY 0,0,1,1,2,2,3,3,4,4,5,5
 2336      02 02 03 03  
 2336      04 04 05 05  
 2336                   
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   98
                                                        14:53:39  

 2337 77E4:00 00 01 01  	.BY 0,0,1,1,2,2,3,3,4,4,5,5
 2337      02 02 03 03  
 2337      04 04 05 05  
 2337                   
 2338 77F0:00 00 01 01  	.BY 0,0,1,1
 2338                   
 2339 77F4:00 00        	.BY 0,0
 2340 77F6:00 00        	.BY 0,0
 2341 77F8:00 00 01 01  	.BY 0,0,1,1,2,2,3,3,4,4,5,5
 2341      02 02 03 03  
 2341      04 04 05 05  
 2341                   
 2342 7804:00 00 01 01  	.BY 0,0,1,1,2,2,3,3,4,4,5,5
 2342      02 02 03 03  
 2342      04 04 05 05  
 2342                   
 2343                   
 2344 7810:             updigit
 2345 7810:00 01 02 03  	.BY 0,1,2,3,4,5,6,7,8,9,10,11
 2345      04 05 06 07  
 2345      08 09 0A 0B  
 2345                   
 2346 781C:00 01 02 03  	.BY 0,1,2,3,4,5,6,7,8,9,10,11
 2346      04 05 06 07  
 2346      08 09 0A 0B  
 2346                   
 2347 7828:0C 0D 0E 0F  	.BY 12,13,14,15,16,17,18,19,20,21,22,23
 2347      10 11 12 13  
 2347      14 15 16 17  
 2347                   
 2348 7834:20 21 22 23  	.BY 32,33,34,35
 2348                   
 2349 7838:26 27        	.BY 38,39
 2350 783A:28 29        	.BY 40,41
 2351 783C:2A 2A 2A 2A  	.BY 42,42,42,42,42,42,42,42,42,42,42,43
 2351      2A 2A 2A 2A  
 2351      2A 2A 2A 2B  
 2351                   
 2352 7848:2C 2D 2E 2F  	.BY 44,45,46,47,48,49,50,51,52,53,54,55
 2352      30 31 32 33  
 2352      34 35 36 37  
 2352                   
 2353                   
 2354 7854:             downdigit
 2355 7854:0C 0D 0E 0F  	.BY 12,13,14,15,16,17,18,19,20,21,22,23
 2355      10 11 12 13  
 2355      14 15 16 17  
 2355                   
 2356 7860:18 19 1A 1B  	.BY 24,25,26,27,28,29,30,31,32,33,34,35
 2356      1C 1D 1E 1F  
 2356      20 21 22 23  
 2356                   
 2357 786C:24 24 24 24  	.BY 36,36,36,36,36,36,36,36,36,37,38,39
 2357      24 24 24 24  
 2357      24 25 26 27  
 2357                   
 2358 7878:28 28 28 29  	.BY 40,40,40,41
 2358                   
 2359 787C:2A 2B        	.BY 42,43
Epyx HandyAsm 1.12      mandel                          15-Apr-12514:53:39 Page   99
                                                        14:53:39  

 2360 787E:36 37        	.BY 54,55
 2361 7880:38 39 3A 3B  	.BY 56,57,58,59,60,61,62,63,64,65,66,67
 2361      3C 3D 3E 3F  
 2361      40 41 42 43  
 2361                   
 2362 788C:38 39 3A 3B  	.BY 56,57,58,59,60,61,62,63,64,65,66,67
 2362      3C 3D 3E 3F  
 2362      40 41 42 43  
 2362                   
 2363                   
 2364                   
 2365                   ;=====================================================
 2366                   
 2367                   
 2368                   
 2369                   
 2370                   
 2371                   
Epyx HandyAsm 1.12      Symbols                         15-Apr-12514:53:39 Page  100
                                                        14:53:39  

$0040 ACCUMULATE                        $0040 ALGO_3
$0000 ASM.EQUSYMS                       $010C ASM.VERSION
$FD40 ATTENREG0                         $FD41 ATTENREG1
$FD42 ATTENREG2                         $FD43 ATTENREG3
$FD86 AUDIN                             $0010 AUDIN_BIT
$FD20 AUDIO0                            $FD28 AUDIO1
$FD30 AUDIO2                            $FD38 AUDIO3
$0000 AUD_1                             $0004 AUD_16
$0001 AUD_2                             $0005 AUD_32
$0002 AUD_4                             $0006 AUD_64
$0003 AUD_8                             $0004 AUD_BACKUP
$0007 AUD_CLOCK_MASK                    $0005 AUD_CONTROL
$0006 AUD_COUNTER                       $0001 AUD_FEEDBACK
$0007 AUD_LINKING                       $0007 AUD_OTHER
$0002 AUD_OUTPUT                        $0003 AUD_SHIFT
$0000 AUD_VOLCNTRL                      $0001 A_BUTTON
$0000 A_OFFSET                          $630A AbsVarsEnd
$0000 BACKGROUND_SPRITE                 $0001 BACKNONCOLL_SPRITE
$0000 BACK_SHADOW_SPRITE                MACRO BEGIN_ALLOCATE_ZEROPAGE
MACRO BEGIN_ZPAGE                       $00C0 BITS_MASK
$FDB0 BLUERED0                          $FDB1 BLUERED1
$FDB2 BLUERED2                          $FDB3 BLUERED3
$FDB4 BLUERED4                          $FDB5 BLUERED5
$FDB6 BLUERED6                          $FDB7 BLUERED7
$FDB8 BLUERED8                          $FDB9 BLUERED9
$FDBA BLUEREDA                          $FDBB BLUEREDB
$FDBC BLUEREDC                          $FDBD BLUEREDD
$FDBE BLUEREDE                          $FDBF BLUEREDF
$0002 BORROW_IN                         $0001 BORROW_OUT
$0003 BOUNDARY_SPRITE                   $0015 BREAK_CONTROLS
$0001 BRK_USER                          $63BF BRK_vector
$0002 BSHADOW_SPRITE                    $0013 BUS_MONITOR
$0002 B_BUTTON                          $0002 CART0_IO_INACTIVE
$0004 CART1_IO_INACTIVE                 $0002 CART_ADDR_DATA
$0001 CART_ADDR_STROBE                  $0002 CART_POWER_OFF
MACRO CLEARACCUM                        $FC0F COLLADRH
$FC0E COLLADRL                          $FC0B COLLBASH
$FC0A COLLBASL                          $FC25 COLLOFFH
$FC24 COLLOFFL                          $0003 CONTINUE_REQUEST
$0100 COUNTMAX                          $FD91 CPUSLEEP
$FFFE CPU_IRQ                           $FFFA CPU_NMI
$FFFC CPU_RESET                         $0002 DATA
MACRO DBUF_DISPLAY                      $FD95 DISPADRH
$FD94 DISPADRL                          $FD92 DISPCTL
$630E DISPCTL_RAM                       MACRO DISPLAY
$6400 DISPLAY.0008                      $6406 DISPLAY.00082
$1FE0 DISPLAY_BUFSIZE                   $0080 DISPLAY_EOFFLAG
$0040 DISPLAY_EOLFLAG                   MACRO DISP_AX
MACRO DISP_AY                           $0008 DISP_COLOR
$0002 DISP_FLIP                         $0004 DISP_FOURBIT
$0001 DMA_ENABLE                        $0001 DOWNLOAD_REQUEST
$0001 DRAW_LEFT                         $0002 DRAW_UP
$6313 DisplayBuffer                     $6316 DisplayFlags
MACRO ECHO_VALUE                        $0008 ENABLE_COUNT
$0080 ENABLE_INT                        $0020 ENABLE_INTEGRATE
$0010 ENABLE_RELOAD                     MACRO ENDSTRUCT
MACRO END_ALLOCATE_ZEROPAGE             $0000 END_OF_FILE
MACRO END_ZPAGE                         $0001 EOF_USER
Epyx HandyAsm 1.12      Symbols                         15-Apr-12514:53:39 Page  101
                                                        14:53:39  

$0004 EVER_ON                           $0001 EXTERNAL_POWER
$0080 FEEDBACK_7                        $0011 FILL_MEM
MACRO FLIP                              $0004 FLIP_BUTTON
$0007 FONT_HEIGHT                       $000B FONT_TYPE
$00C0 FOUR_PER_PIXEL                    $0004 FRAMERR
$641B FontBase                          $63DA FrameEnd
$6418 FrameEndExit                      MACRO GETJOY
MACRO GETSWITCH                         $0005 GO_REQUEST
$FDA0 GREEN0                            $FDA1 GREEN1
$FDA2 GREEN2                            $FDA3 GREEN3
$FDA4 GREEN4                            $FDA5 GREEN5
$FDA6 GREEN6                            $FDA7 GREEN7
$FDA8 GREEN8                            $FDA9 GREEN9
$FDAA GREENA                            $FDAB GREENB
$FDAC GREENC                            $FDAD GREEND
$FDAE GREENE                            $FDAF GREENF
$FC00 HARDWARE_START                    MACRO HBRK
$FD00 HCOUNT                            $0020 HFLIP
$0007 HIDE_HOWARD_REQUEST               MACRO HOFF16
MACRO HOFF8                             $FC05 HOFFH
$FC04 HOFFL                             $0001 HORIZONTAL_INT
$0016 HOWARD_ABUS                       $0017 HOWARD_BBUS
$0018 HOWARD_CBUS                       $0019 HOWARD_DBUS
$FCC4 HOWIE                             $FC15 HPOSSTRTH
$FC14 HPOSSTRTL                         MACRO HPRFONT
MACRO HPRINT                            $001F HPR_ALL
$0006 HPR_ALPHA                         $000B HPR_BASIC
MACRO HPR_CHARSET                       $0001 HPR_DIGIT
$0004 HPR_LOWER                         $0010 HPR_OTHER
$0008 HPR_PUNC                          $0002 HPR_UPPER
$FC29 HSIZOFFH                          $FC28 HSIZOFFL
$631B HandyPrint                        $6361 HprFontHi
$635A HprFontLo                         MACRO INITEOF
MACRO INITINT                           $65AE INITINT.000D
MACRO INITLIT                           $665B INITLIT.0014
$6668 INITLIT.00141                     MACRO INITSUZY
MACRO INITSYS                           $0002 INNER_BUTTON
$FD80 INTRST                            $FD81 INTSET
$6315 INTSET_RAM                        $FD8B IODAT
$630F IODAT_RAM                         $FD8A IODIR
$6310 IODIR_RAM                         $FCC3 IOData
$FCC2 IOStatus                          $63C3 InitEOF
$63B4 IntReturn                         $FBF0 IntTable
$FCB0 JOYSTICK                          $0080 JOY_DOWN
$0010 JOY_LEFT                          $0020 JOY_RIGHT
$0040 JOY_UP                            $0012 LARGE_DATA
$0004 LAST_CLOCK                        $FCC0 LEDS
$0010 LEFT0_SELECT                      $0020 LEFT1_SELECT
$0040 LEFT2_SELECT                      $0080 LEFT3_SELECT
$0008 LEFTHAND                          $0008 LEFTHANDED
$00F0 LEFT_ATTENMASK                    $0080 LITERAL
$FFF9 MAPCTL                            $FC55 MATHA
$FC54 MATHB                             $FC53 MATHC
$0020 MATHCARRY                         $FC52 MATHD
$FC63 MATHE                             $FC62 MATHF
$FC61 MATHG                             $FC60 MATHH
$FC6F MATHJ                             $FC6E MATHK
$FC6D MATHL                             $FC6C MATHM
$FC57 MATHN                             $FC56 MATHP
Epyx HandyAsm 1.12      Symbols                         15-Apr-12514:53:39 Page  102
                                                        14:53:39  

$0040 MATHWARNING                       $0080 MATHWORKING
$FD88 MIKEYHREV                         $FD89 MIKEYSREV
$FD00 MIKEY_BASE                        $0002 MIKEY_SPACE
$0010 MONITOR_BYTECOUNT                 $0001 MONITOR_I
$F900 MONITOR_RAM_RESERVED              $00F8 MONITOR_ZP_RESERVED
$FD44 MPAN                              $FD50 MSTEREO
$FD9C MTEST0                            $FD9D MTEST1
$FD9E MTEST2                            $0080 MYZPEND
$0006 MYZPSTART                         $0080 NEXTZPG
$0004 NOEXP                             $0005 NONCOLL_SPRITE
$0000 NOP_REQUEST                       $0004 NORMAL_SPRITE
$0020 NO_COLLIDE                        $0044 NUMDIGITS
$0024 NUMIMPORTANTDIGITS                $000D NUMPALETTES
$0007 NUMSCALES                         $0000 ONE_PER_PIXEL
$0008 OPTION1_BUTTON                    $0004 OPTION2_BUTTON
$0001 ORIGIN                            $0001 OUTER_BUTTON
$0008 OVERRUN                           MACRO PALDEF
$0001 PARBIT                            $0010 PAREN
$0010 PARERR                            $0001 PAREVEN
$0001 PAUSE_SWITCH                      $FD93 PBKUP
$0004 PC_OFFSET                         $0002 POWERON
$FC2F PROCADRH                          $FC2E PROCADRL
$0006 P_OFFSET                          $FCB2 RCART_0
$FCB3 RCART_1                           $0010 READ_ENABLE
$0010 REGISTER                          $0007 REGISTER_BYTECOUNT
$0010 RELOAD_HV                         $0020 RELOAD_HVS
$0030 RELOAD_HVST                       $0030 RELOAD_MASK
$0000 RELOAD_NONE                       $0008 RESETERR
$0040 RESET_DONE                        MACRO RESET_TIMEOUT
MACRO RESPRITE                          $0008 RESTART_BUTTON
$0008 RESTLESS                          $0008 REUSE_PALETTE
MACRO RGB16                             MACRO RGB16_I
MACRO RGB_AXY                           $0001 RIGHT0_SELECT
$0002 RIGHT1_SELECT                     $0004 RIGHT2_SELECT
$0008 RIGHT3_SELECT                     $000F RIGHT_ATTENMASK
$001A ROM                               $0004 ROM_SPACE
$0003 RUN_ADDRESS                       $0002 RXBRK
$0040 RXINTEN                           $0040 RXRDY
$6311 RenderBuffer                      $FC2D SCBADRH
$FC2C SCBADRL                           $FC11 SCBNEXTH
$FC10 SCBNEXTL                          $0000 SCB_CTRL0
$0001 SCB_CTRL1                         $0002 SCB_CTRL2
$0005 SCB_DATA                          $0007 SCB_HPOS
$000B SCB_HSIZE                         $0003 SCB_NEXT
$0013 SCB_PALETTE                       $001B SCB_SIZEOF
$000F SCB_STRETCH                       $0011 SCB_TILT
$0009 SCB_VPOS                          $000D SCB_VSIZE
$FC23 SCVPOSH                           $FC22 SCVPOSL
$FD90 SDONEACK                          $0006 SEE_HOWARD_REQUEST
$FD8C SERCTL                            $FD8D SERDAT
$FD10 SERIALRATE                        $0010 SERIAL_INT
MACRO SETCOLL                           MACRO SETDBUF
MACRO SETDISP                           MACRO SETDISP_50
MACRO SETDISP_60                        MACRO SETDISP_75
MACRO SET_BRK                           $0007 SHADOW_SPRITE
$0080 SIGNMATH                          $0004 SKIP_SPRITE
$0004 SLAVE_REQUEST                     $FC82 SPRCOLL
$FC80 SPRCTL0                           $FC81 SPRCTL1
$FC13 SPRDLINEH                         $FC12 SPRDLINEL
Epyx HandyAsm 1.12      Symbols                         15-Apr-12514:53:39 Page  103
                                                        14:53:39  

$FC21 SPRDOFFH                          $FC20 SPRDOFFL
$FC91 SPRGO                             $FC19 SPRHSIZH
$FC18 SPRHSIZL                          $FC83 SPRINIT
MACRO SPRITES                           $0002 SPRITESTOP
$0002 SPRITETOSTOP                      $0001 SPRITEWORKING
$0001 SPRITE_GO                         $FC92 SPRSYS
$630D SPRSYS_RAM                        $FC1B SPRVSIZH
$FC1A SPRVSIZL                          $FC1D STRETCHH
$FC1C STRETCHL                          MACRO STRUCT
$FC90 SUZYBUSEN                         $FC88 SUZYHREV
$FC89 SUZYSREV                          $FC00 SUZY_BASE
$0001 SUZY_SPACE                        $FCB1 SWITCHES
$FD87 SYSCTL1                           $0003 S_OFFSET
$FFFE TEMPORG                           $0080 THREE_PER_PIXEL
$FC03 TILTACUMH                         $FC02 TILTACUML
$FC1F TILTH                             $FC1E TILTL
MACRO TIMEOUT                           $FD00 TIMER0
$0001 TIMER0_INT                        $FD04 TIMER1
$0002 TIMER1_INT                        $FD08 TIMER2
$0004 TIMER2_INT                        $FD0C TIMER3
$0008 TIMER3_INT                        $FD10 TIMER4
$FD14 TIMER5                            $0020 TIMER5_INT
$FD18 TIMER6                            $0040 TIMER6_INT
$FD1C TIMER7                            $0080 TIMER7_INT
$0008 TIMER_DONE                        $0000 TIM_BACKUP
$0001 TIM_CONTROLA                      $0003 TIM_CONTROLB
$0002 TIM_COUNT                         $0013 TITLELEN
$FC01 TMPADRH                           $FC00 TMPADRL
$0014 TRACE                             $0080 TURBO_DISABLE
$0040 TWO_PER_PIXEL                     $0002 TXBRK
$0020 TXEMPTY                           $0080 TXINTEN
$0004 TXOPEN                            $0080 TXRDY
$6317 TextPtr                           $631A TextRemaining
$6319 TextWidth                         $0004 UNSAFEACCESS
$0004 UNSAFEACCESSRST                   $0002 UPLOAD_REQUEST
$0002 UP_CURRENT_PAGE                   $0005 UP_HAHDATA
$0004 UP_MEMWATCH                       $0003 UP_REGISTERS
$0001 UP_THIS_PAGE                      $6393 UserIntHandler
$FD08 VCOUNT                            $0008 VECTOR_SPACE
$0004 VERTICAL_INT                      $0010 VFLIP
$FC0D VIDADRH                           $FC0C VIDADRL
$FC09 VIDBASH                           $FC08 VIDBASL
MACRO VOFF16                            MACRO VOFF8
$FC07 VOFFH                             $FC06 VOFFL
$FC17 VPOSSTRTH                         $FC16 VPOSSTRTL
$FC27 VSIZACUMH                         $FC26 VSIZACUML
$FC2B VSIZOFFH                          $FC2A VSIZOFFL
$0010 VSTRETCH                          $0010 VSTRETCHING
MACRO WAITEOF                           MACRO WAITEOL
MACRO WAITMATH                          $6350 WAITMATH.00050
$67B6 WAITMATH.001A0                    $67D4 WAITMATH.001B0
$68CA WAITMATH.001C0                    $68E3 WAITMATH.001D0
$6C3A WAITMATH.00210                    $6D35 WAITMATH.00220
$6D5F WAITMATH.00230                    $6D7A WAITMATH.00240
$6DA7 WAITMATH.00250                    $6DC2 WAITMATH.00260
$6DE0 WAITMATH.00270                    $6E0F WAITMATH.00280
$6E2D WAITMATH.00290                    $6E58 WAITMATH.002A0
MACRO WAITNEOF                          MACRO WAITNEOL
MACRO WAITSUZY                          $6C16 WAITSUZY.00201
Epyx HandyAsm 1.12      Symbols                         15-Apr-12514:53:39 Page  104
                                                        14:53:39  

$0006 XOR_SHADOW_SPRITE                 $0006 XOR_SPRITE
$0001 X_OFFSET                          $0002 Y_OFFSET
$0055 acorner                           $005B bcorner
$6572 begin                             $74DE bigscb
$74F5 bigscb2                           $41D0 bigsprite
$750C box1scb                           $751C box2scb
$752C box3scb                           $753C box4scb
$63BD brkInt                            $6F27 copyjulia
$0013 count                             $0015 countmod15
$7303 cursordown                        $72EB cursorleft
$72F2 cursorright                       $755C cursorscb
$756C cursorsprite                      $72FB cursorup
$007A cyclecount                        $0078 cyclemode
$0079 cyclemodesave                     $007B cyclerate
$72BC dec.digit                         $0016 depth
$7700 digitaddr                         $7788 digitinvmask
$7744 digitmask                         $7678 digitxpos
$76BC digitypos                         $66E6 do.dbuf
$6CF6 dom.1                             $6D21 dom.2
$6CC9 domultiply                        $6F58 dopoint
$6C84 dosquare                          $74AB doublenybble
$7854 downdigit                         $0075 edgeinput
$0076 edgeinputlatch                    $000D edgestick
$74CB erasescb                          $74DB erasesprite
$66DC erasezpage                        $003C factor1
$0042 factor2                           $007C frame
$6702 getinput                          $63A0 hardInt
$6378 hprintCharLoop                    $632E hprintLoop
$7293 inc.digit                         $720A inc.ind0
$70FB incpoint                          $0006 ind0
$0008 ind1                              $6C5D initbigsprite
$6EBE initbrot                          $0074 input
$41C0 interrupt_buffer                  $0073 juliaflag
$63B7 jumpIntTable                      $6673 loop
$6691 loop1                             $66BB loop2
$75B7 m1                                $75CB m2
$75DF m3                                $75FC m4
$7612 m5                                $7626 m6
$762F m7                                $7643 m8
$7589 menu                              $7211 menuinput
$0077 modeflag                          $77CC moredigits
$6999 myeof                             $6A1E myeofendexit
$718A myprint                           $0054 negflag
$74BB nybblemask                        $007E palettenum
$730B palettes                          $6C2B plotpoint
$0048 product                           $71F3 putbyte
$71EF putbyte.xy                        $71FE putdigit
$6ECA resetbrot                         $6EF2 resetpoint
$6C0B reshowsprites                     $6772 rts0
$74BD scales                            $0200 screen0
$21E0 screen1                           $6BC7 screentobigsprite
$6A21 setpalette                        $6BAC showbigscb2
$6BB6 showbigscb3                       $6BA5 showbigsprite
$6B9E showbox                           $6A4B showmenu
$71D0 showmessage                       $6B75 showresult
$6BFF showsprites                       $71C9 showtextsprite
$630A start                             $0061 step
$000C stick                             $000E switch
$41C0 sysIntTable                       $0000 sysptr
Epyx HandyAsm 1.12      Symbols                         15-Apr-12514:53:39 Page  105
                                                        14:53:39  

$0002 sysptr2                           $0004 sysptr3
$66CB systemp                           $000A temp0
$000B temp1                             $627D textbuffer
$754C textscb                           $7652 title1
$7665 title2                            $007D updateflag
$7810 updigit                           $007F whichdigit
$0018 x0                                $0011 xindex
$0067 xjul                              $0024 xn
$000F xpos                              $0030 xsquare
$001E y0                                $0012 yindex
$006D yjul                              $002A yn
$0010 ypos                              $0036 ysquare
$6773 zoom.in                           $688C zoom.out
